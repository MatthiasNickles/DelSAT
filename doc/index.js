Index.PACKAGES = {"aspIOutils" : [{"name" : "aspIOutils.DisjRule", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "aspIOutils.DisjRule.toString", "link" : "aspIOutils\/package$$DisjRule.html#toString():String", "kind" : "def"}, {"member" : "aspIOutils.DisjRule#<init>", "error" : "unsupported entity"}, {"label" : "blit", "tail" : ": Int", "member" : "aspIOutils.DisjRule.blit", "link" : "aspIOutils\/package$$DisjRule.html#blit:Int", "kind" : "var"}, {"label" : "weight", "tail" : ": (Double, Double)", "member" : "aspIOutils.DisjRule.weight", "link" : "aspIOutils\/package$$DisjRule.html#weight:(Double,Double)", "kind" : "val"}, {"label" : "bodyNegAtoms", "tail" : ": Set[Pred]", "member" : "aspIOutils.DisjRule.bodyNegAtoms", "link" : "aspIOutils\/package$$DisjRule.html#bodyNegAtoms:scala.collection.Set[aspIOutils.package.Pred]", "kind" : "val"}, {"label" : "bodyPosAtoms", "tail" : ": Set[Pred]", "member" : "aspIOutils.DisjRule.bodyPosAtoms", "link" : "aspIOutils\/package$$DisjRule.html#bodyPosAtoms:scala.collection.Set[aspIOutils.package.Pred]", "kind" : "val"}, {"label" : "headNegAtoms", "tail" : ": Set[Pred]", "member" : "aspIOutils.DisjRule.headNegAtoms", "link" : "aspIOutils\/package$$DisjRule.html#headNegAtoms:scala.collection.Set[aspIOutils.package.Pred]", "kind" : "val"}, {"label" : "headPosAtoms", "tail" : ": Set[Pred]", "member" : "aspIOutils.DisjRule.headPosAtoms", "link" : "aspIOutils\/package$$DisjRule.html#headPosAtoms:scala.collection.Set[aspIOutils.package.Pred]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "aspIOutils\/package$$DisjRule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "aspIOutils\/package$$DisjRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "aspIOutils\/package$$DisjRule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "aspIOutils\/package$$DisjRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "aspIOutils\/package$$DisjRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "aspIOutils\/package$$DisjRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "aspIOutils\/package$$DisjRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "aspIOutils\/package$$DisjRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "aspIOutils\/package$$DisjRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "aspIOutils\/package$$DisjRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "aspIOutils\/package$$DisjRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "aspIOutils\/package$$DisjRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "aspIOutils\/package$$DisjRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "aspIOutils\/package$$DisjRule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "aspIOutils\/package$$DisjRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "aspIOutils\/package$$DisjRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "aspIOutils\/package$$DisjRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "aspIOutils\/package$$DisjRule.html", "kind" : "case class"}], "userAPItests" : [{"name" : "userAPItests.APITests", "trait" : "userAPItests\/APITests.html", "kind" : "trait", "members_trait" : [{"label" : "runAllAPITests", "tail" : "(): Unit", "member" : "userAPItests.APITests.runAllAPITests", "link" : "userAPItests\/APITests.html#runAllAPITests:Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "userAPItests\/APITests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "userAPItests\/APITests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "userAPItests\/APITests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "userAPItests\/APITests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "userAPItests\/APITests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "userAPItests\/APITests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "userAPItests\/APITests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "userAPItests\/APITests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "userAPItests\/APITests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "userAPItests\/APITests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "userAPItests\/APITests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "userAPItests\/APITests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "userAPItests\/APITests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "userAPItests\/APITests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "userAPItests\/APITests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "userAPItests\/APITests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "userAPItests\/APITests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "userAPItests\/APITests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "userAPItests\/APITests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "User API tests."}], "sbt" : [], "diff" : [{"name" : "diff.DifferentialFunctionFactoryStasp", "shortDescription" : "", "members_class" : [{"member" : "diff.DifferentialFunctionFactoryStasp#<init>", "error" : "unsupported entity"}, {"label" : "floor", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.floor", "link" : "diff\/DifferentialFunctionFactoryStasp.html#floor(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "square", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.square", "link" : "diff\/DifferentialFunctionFactoryStasp.html#square(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "sqrt", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.sqrt", "link" : "diff\/DifferentialFunctionFactoryStasp.html#sqrt(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "pow", "tail" : "(arg0: DifferentialFunction[DoubleReal], arg1: Constant[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.pow", "link" : "diff\/DifferentialFunctionFactoryStasp.html#pow(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X],x$2:com.accelad.math.nilgiri.autodiff.Constant[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "log", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.log", "link" : "diff\/DifferentialFunctionFactoryStasp.html#log(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "exp", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.exp", "link" : "diff\/DifferentialFunctionFactoryStasp.html#exp(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "atanh", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.atanh", "link" : "diff\/DifferentialFunctionFactoryStasp.html#atanh(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "asinh", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.asinh", "link" : "diff\/DifferentialFunctionFactoryStasp.html#asinh(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "acosh", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.acosh", "link" : "diff\/DifferentialFunctionFactoryStasp.html#acosh(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "tanh", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.tanh", "link" : "diff\/DifferentialFunctionFactoryStasp.html#tanh(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "sinh", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.sinh", "link" : "diff\/DifferentialFunctionFactoryStasp.html#sinh(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "cosh", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.cosh", "link" : "diff\/DifferentialFunctionFactoryStasp.html#cosh(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "atan", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.atan", "link" : "diff\/DifferentialFunctionFactoryStasp.html#atan(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "asin", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.asin", "link" : "diff\/DifferentialFunctionFactoryStasp.html#asin(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "acos", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.acos", "link" : "diff\/DifferentialFunctionFactoryStasp.html#acos(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "tan", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.tan", "link" : "diff\/DifferentialFunctionFactoryStasp.html#tan(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "sin", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.sin", "link" : "diff\/DifferentialFunctionFactoryStasp.html#sin(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "cos", "tail" : "(arg0: DifferentialFunction[DoubleReal]): DifferentialFunction[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.cos", "link" : "diff\/DifferentialFunctionFactoryStasp.html#cos(x$1:com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]):com.accelad.math.nilgiri.autodiff.DifferentialFunction[X]", "kind" : "def"}, {"label" : "one", "tail" : "(): One[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.one", "link" : "diff\/DifferentialFunctionFactoryStasp.html#one():com.accelad.math.nilgiri.autodiff.One[X]", "kind" : "def"}, {"label" : "zero", "tail" : "(): Zero[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.zero", "link" : "diff\/DifferentialFunctionFactoryStasp.html#zero():com.accelad.math.nilgiri.autodiff.Zero[X]", "kind" : "def"}, {"label" : "var", "tail" : "(arg0: String, arg1: DoubleReal): Variable[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.var", "link" : "diff\/DifferentialFunctionFactoryStasp.html#var(x$1:String,x$2:X):com.accelad.math.nilgiri.autodiff.Variable[X]", "kind" : "def"}, {"label" : "var", "tail" : "(arg0: String, arg1: DoubleReal, arg2: PreEvaluator[DoubleReal]): Variable[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.var", "link" : "diff\/DifferentialFunctionFactoryStasp.html#var(x$1:String,x$2:X,x$3:com.accelad.math.nilgiri.autodiff.PreEvaluator[X]):com.accelad.math.nilgiri.autodiff.Variable[X]", "kind" : "def"}, {"label" : "val", "tail" : "(arg0: DoubleReal): Constant[DoubleReal]", "member" : "com.accelad.math.nilgiri.autodiff.DifferentialFunctionFactory.val", "link" : "diff\/DifferentialFunctionFactoryStasp.html#val(x$1:X):com.accelad.math.nilgiri.autodiff.Constant[X]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "diff\/DifferentialFunctionFactoryStasp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "diff\/DifferentialFunctionFactoryStasp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "diff\/DifferentialFunctionFactoryStasp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "diff\/DifferentialFunctionFactoryStasp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "diff\/DifferentialFunctionFactoryStasp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "diff\/DifferentialFunctionFactoryStasp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "diff\/DifferentialFunctionFactoryStasp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "diff\/DifferentialFunctionFactoryStasp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "diff\/DifferentialFunctionFactoryStasp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "diff\/DifferentialFunctionFactoryStasp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "diff\/DifferentialFunctionFactoryStasp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "diff\/DifferentialFunctionFactoryStasp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "diff\/DifferentialFunctionFactoryStasp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "diff\/DifferentialFunctionFactoryStasp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "diff\/DifferentialFunctionFactoryStasp.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "diff\/DifferentialFunctionFactoryStasp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "diff\/DifferentialFunctionFactoryStasp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "diff\/DifferentialFunctionFactoryStasp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "diff\/DifferentialFunctionFactoryStasp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "diff\/DifferentialFunctionFactoryStasp.html", "kind" : "class"}], "solving" : [{"name" : "solving.NogoodReduciblesSequence", "shortDescription" : "", "members_class" : [{"label" : "count", "tail" : "(item: NogoodReducible): Int", "member" : "solving.NogoodReduciblesSequence.count", "link" : "solving\/NogoodReduciblesSequence.html#count(item:NogoodReduciblesSequence.this.NogoodReducible):Int", "kind" : "def"}, {"label" : "getArray", "tail" : "(): Array[NogoodReducible]", "member" : "solving.NogoodReduciblesSequence.getArray", "link" : "solving\/NogoodReduciblesSequence.html#getArray:Array[NogoodReduciblesSequence.this.NogoodReducible]", "kind" : "def"}, {"label" : "addUS", "tail" : "(k: NogoodReducible): Unit", "member" : "solving.NogoodReduciblesSequence.addUS", "link" : "solving\/NogoodReduciblesSequence.html#addUS(k:NogoodReduciblesSequence.this.NogoodReducible):Unit", "kind" : "def"}, {"label" : "removeByIndexUS", "tail" : "(i: Int): Unit", "member" : "solving.NogoodReduciblesSequence.removeByIndexUS", "link" : "solving\/NogoodReduciblesSequence.html#removeByIndexUS(i:Int):Unit", "kind" : "def"}, {"label" : "removeUS", "tail" : "(k: NogoodReducible): Unit", "member" : "solving.NogoodReduciblesSequence.removeUS", "link" : "solving\/NogoodReduciblesSequence.html#removeUS(k:NogoodReduciblesSequence.this.NogoodReducible):Unit", "kind" : "def"}, {"label" : "getUS", "tail" : "(index: Int): NogoodReducible", "member" : "solving.NogoodReduciblesSequence.getUS", "link" : "solving\/NogoodReduciblesSequence.html#getUS(index:Int):NogoodReduciblesSequence.this.NogoodReducible", "kind" : "def"}, {"label" : "cutoffUS", "tail" : "(whereExclusive: Int): Unit", "member" : "solving.NogoodReduciblesSequence.cutoffUS", "link" : "solving\/NogoodReduciblesSequence.html#cutoffUS(whereExclusive:Int):Unit", "kind" : "def"}, {"label" : "clearUS", "tail" : "(): Unit", "member" : "solving.NogoodReduciblesSequence.clearUS", "link" : "solving\/NogoodReduciblesSequence.html#clearUS():Unit", "kind" : "def"}, {"label" : "NogoodReducible", "tail" : "", "member" : "solving.NogoodReduciblesSequence.NogoodReducible", "link" : "solving\/NogoodReduciblesSequence.html#NogoodReducible=Long", "kind" : "type"}, {"member" : "solving.NogoodReduciblesSequence#<init>", "error" : "unsupported entity"}, {"label" : "compareTo", "tail" : "(arg0: LongArrayList): Int", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.compareTo", "link" : "solving\/NogoodReduciblesSequence.html#compareTo(x$1:it.unimi.dsi.fastutil.longs.LongArrayList):Int", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: LongArrayList): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.equals", "link" : "solving\/NogoodReduciblesSequence.html#equals(x$1:it.unimi.dsi.fastutil.longs.LongArrayList):Boolean", "kind" : "def"}, {"label" : "clone", "tail" : "(): LongArrayList", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.clone", "link" : "solving\/NogoodReduciblesSequence.html#clone():it.unimi.dsi.fastutil.longs.LongArrayList", "kind" : "def"}, {"label" : "unstableSort", "tail" : "(arg0: LongComparator): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.unstableSort", "link" : "solving\/NogoodReduciblesSequence.html#unstableSort(x$1:it.unimi.dsi.fastutil.longs.LongComparator):Unit", "kind" : "def"}, {"label" : "sort", "tail" : "(arg0: LongComparator): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.sort", "link" : "solving\/NogoodReduciblesSequence.html#sort(x$1:it.unimi.dsi.fastutil.longs.LongComparator):Unit", "kind" : "def"}, {"label" : "listIterator", "tail" : "(arg0: Int): LongListIterator", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.listIterator", "link" : "solving\/NogoodReduciblesSequence.html#listIterator(x$1:Int):it.unimi.dsi.fastutil.longs.LongListIterator", "kind" : "def"}, {"label" : "removeAll", "tail" : "(arg0: Collection[_ <: AnyRef]): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.removeAll", "link" : "solving\/NogoodReduciblesSequence.html#removeAll(x$1:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "removeAll", "tail" : "(arg0: LongCollection): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.removeAll", "link" : "solving\/NogoodReduciblesSequence.html#removeAll(x$1:it.unimi.dsi.fastutil.longs.LongCollection):Boolean", "kind" : "def"}, {"label" : "addAll", "tail" : "(arg0: Int, arg1: LongList): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.addAll", "link" : "solving\/NogoodReduciblesSequence.html#addAll(x$1:Int,x$2:it.unimi.dsi.fastutil.longs.LongList):Boolean", "kind" : "def"}, {"label" : "addAll", "tail" : "(arg0: Int, arg1: LongCollection): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.addAll", "link" : "solving\/NogoodReduciblesSequence.html#addAll(x$1:Int,x$2:it.unimi.dsi.fastutil.longs.LongCollection):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: Array[Long]): Array[Long]", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.toArray", "link" : "solving\/NogoodReduciblesSequence.html#toArray(x$1:Array[Long]):Array[Long]", "kind" : "def"}, {"label" : "setElements", "tail" : "(arg0: Int, arg1: Array[Long], arg2: Int, arg3: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.setElements", "link" : "solving\/NogoodReduciblesSequence.html#setElements(x$1:Int,x$2:Array[Long],x$3:Int,x$4:Int):Unit", "kind" : "def"}, {"label" : "addElements", "tail" : "(arg0: Int, arg1: Array[Long], arg2: Int, arg3: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.addElements", "link" : "solving\/NogoodReduciblesSequence.html#addElements(x$1:Int,x$2:Array[Long],x$3:Int,x$4:Int):Unit", "kind" : "def"}, {"label" : "removeElements", "tail" : "(arg0: Int, arg1: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.removeElements", "link" : "solving\/NogoodReduciblesSequence.html#removeElements(x$1:Int,x$2:Int):Unit", "kind" : "def"}, {"label" : "getElements", "tail" : "(arg0: Int, arg1: Array[Long], arg2: Int, arg3: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.getElements", "link" : "solving\/NogoodReduciblesSequence.html#getElements(x$1:Int,x$2:Array[Long],x$3:Int,x$4:Int):Unit", "kind" : "def"}, {"label" : "trim", "tail" : "(arg0: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.trim", "link" : "solving\/NogoodReduciblesSequence.html#trim(x$1:Int):Unit", "kind" : "def"}, {"label" : "trim", "tail" : "(): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.trim", "link" : "solving\/NogoodReduciblesSequence.html#trim():Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.isEmpty", "link" : "solving\/NogoodReduciblesSequence.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(arg0: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.size", "link" : "solving\/NogoodReduciblesSequence.html#size(x$1:Int):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.size", "link" : "solving\/NogoodReduciblesSequence.html#size():Int", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.clear", "link" : "solving\/NogoodReduciblesSequence.html#clear():Unit", "kind" : "def"}, {"label" : "set", "tail" : "(arg0: Int, arg1: Long): Long", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.set", "link" : "solving\/NogoodReduciblesSequence.html#set(x$1:Int,x$2:Long):Long", "kind" : "def"}, {"label" : "rem", "tail" : "(arg0: Long): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.rem", "link" : "solving\/NogoodReduciblesSequence.html#rem(x$1:Long):Boolean", "kind" : "def"}, {"label" : "removeLong", "tail" : "(arg0: Int): Long", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.removeLong", "link" : "solving\/NogoodReduciblesSequence.html#removeLong(x$1:Int):Long", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(arg0: Long): Int", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.lastIndexOf", "link" : "solving\/NogoodReduciblesSequence.html#lastIndexOf(x$1:Long):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(arg0: Long): Int", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.indexOf", "link" : "solving\/NogoodReduciblesSequence.html#indexOf(x$1:Long):Int", "kind" : "def"}, {"label" : "getLong", "tail" : "(arg0: Int): Long", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.getLong", "link" : "solving\/NogoodReduciblesSequence.html#getLong(x$1:Int):Long", "kind" : "def"}, {"label" : "add", "tail" : "(arg0: Long): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.add", "link" : "solving\/NogoodReduciblesSequence.html#add(x$1:Long):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(arg0: Int, arg1: Long): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.add", "link" : "solving\/NogoodReduciblesSequence.html#add(x$1:Int,x$2:Long):Unit", "kind" : "def"}, {"label" : "ensureCapacity", "tail" : "(arg0: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.ensureCapacity", "link" : "solving\/NogoodReduciblesSequence.html#ensureCapacity(x$1:Int):Unit", "kind" : "def"}, {"label" : "elements", "tail" : "(): Array[Long]", "member" : "it.unimi.dsi.fastutil.longs.LongArrayList.elements", "link" : "solving\/NogoodReduciblesSequence.html#elements():Array[Long]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.toString", "link" : "solving\/NogoodReduciblesSequence.html#toString():String", "kind" : "def"}, {"label" : "addAll", "tail" : "(arg0: LongList): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.addAll", "link" : "solving\/NogoodReduciblesSequence.html#addAll(x$1:it.unimi.dsi.fastutil.longs.LongList):Boolean", "kind" : "def"}, {"label" : "addAll", "tail" : "(arg0: LongCollection): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.addAll", "link" : "solving\/NogoodReduciblesSequence.html#addAll(x$1:it.unimi.dsi.fastutil.longs.LongCollection):Boolean", "kind" : "def"}, {"label" : "peekLong", "tail" : "(arg0: Int): Long", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.peekLong", "link" : "solving\/NogoodReduciblesSequence.html#peekLong(x$1:Int):Long", "kind" : "def"}, {"label" : "topLong", "tail" : "(): Long", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.topLong", "link" : "solving\/NogoodReduciblesSequence.html#topLong():Long", "kind" : "def"}, {"label" : "popLong", "tail" : "(): Long", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.popLong", "link" : "solving\/NogoodReduciblesSequence.html#popLong():Long", "kind" : "def"}, {"label" : "push", "tail" : "(arg0: Long): Unit", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.push", "link" : "solving\/NogoodReduciblesSequence.html#push(x$1:Long):Unit", "kind" : "def"}, {"label" : "compareTo", "tail" : "(arg0: List[_ <: Long]): Int", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.compareTo", "link" : "solving\/NogoodReduciblesSequence.html#compareTo(x$1:java.util.List[_<:Long]):Int", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.equals", "link" : "solving\/NogoodReduciblesSequence.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.hashCode", "link" : "solving\/NogoodReduciblesSequence.html#hashCode():Int", "kind" : "def"}, {"label" : "addElements", "tail" : "(arg0: Int, arg1: Array[Long]): Unit", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.addElements", "link" : "solving\/NogoodReduciblesSequence.html#addElements(x$1:Int,x$2:Array[Long]):Unit", "kind" : "def"}, {"label" : "subList", "tail" : "(arg0: Int, arg1: Int): LongList", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.subList", "link" : "solving\/NogoodReduciblesSequence.html#subList(x$1:Int,x$2:Int):it.unimi.dsi.fastutil.longs.LongList", "kind" : "def"}, {"label" : "contains", "tail" : "(arg0: Long): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.contains", "link" : "solving\/NogoodReduciblesSequence.html#contains(x$1:Long):Boolean", "kind" : "def"}, {"label" : "listIterator", "tail" : "(): LongListIterator", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.listIterator", "link" : "solving\/NogoodReduciblesSequence.html#listIterator():it.unimi.dsi.fastutil.longs.LongListIterator", "kind" : "def"}, {"label" : "iterator", "tail" : "(): LongListIterator", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.iterator", "link" : "solving\/NogoodReduciblesSequence.html#iterator():it.unimi.dsi.fastutil.longs.LongListIterator", "kind" : "def"}, {"label" : "addAll", "tail" : "(arg0: Collection[_ <: Long]): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.addAll", "link" : "solving\/NogoodReduciblesSequence.html#addAll(x$1:java.util.Collection[_<:Long]):Boolean", "kind" : "def"}, {"label" : "addAll", "tail" : "(arg0: Int, arg1: Collection[_ <: Long]): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.addAll", "link" : "solving\/NogoodReduciblesSequence.html#addAll(x$1:Int,x$2:java.util.Collection[_<:Long]):Boolean", "kind" : "def"}, {"label" : "ensureRestrictedIndex", "tail" : "(arg0: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.ensureRestrictedIndex", "link" : "solving\/NogoodReduciblesSequence.html#ensureRestrictedIndex(x$1:Int):Unit", "kind" : "def"}, {"label" : "ensureIndex", "tail" : "(arg0: Int): Unit", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongList.ensureIndex", "link" : "solving\/NogoodReduciblesSequence.html#ensureIndex(x$1:Int):Unit", "kind" : "def"}, {"label" : "peek", "tail" : "(arg0: Int): Long", "member" : "it.unimi.dsi.fastutil.longs.LongStack.peek", "link" : "solving\/NogoodReduciblesSequence.html#peek(x$1:Int):Long", "kind" : "def"}, {"label" : "top", "tail" : "(): Long", "member" : "it.unimi.dsi.fastutil.longs.LongStack.top", "link" : "solving\/NogoodReduciblesSequence.html#top():Long", "kind" : "def"}, {"label" : "pop", "tail" : "(): Long", "member" : "it.unimi.dsi.fastutil.longs.LongStack.pop", "link" : "solving\/NogoodReduciblesSequence.html#pop():Long", "kind" : "def"}, {"label" : "push", "tail" : "(arg0: Long): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongStack.push", "link" : "solving\/NogoodReduciblesSequence.html#push(x$1:Long):Unit", "kind" : "def"}, {"label" : "unstableSort", "tail" : "(arg0: Comparator[_ >: Long <: AnyRef]): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongList.unstableSort", "link" : "solving\/NogoodReduciblesSequence.html#unstableSort(x$1:java.util.Comparator[_>:Long]):Unit", "kind" : "def"}, {"label" : "sort", "tail" : "(arg0: Comparator[_ >: Long <: AnyRef]): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongList.sort", "link" : "solving\/NogoodReduciblesSequence.html#sort(x$1:java.util.Comparator[_>:Long]):Unit", "kind" : "def"}, {"label" : "set", "tail" : "(arg0: Int, arg1: Long): Long", "member" : "it.unimi.dsi.fastutil.longs.LongList.set", "link" : "solving\/NogoodReduciblesSequence.html#set(x$1:Int,x$2:Long):Long", "kind" : "def"}, {"label" : "remove", "tail" : "(arg0: Int): Long", "member" : "it.unimi.dsi.fastutil.longs.LongList.remove", "link" : "solving\/NogoodReduciblesSequence.html#remove(x$1:Int):Long", "kind" : "def"}, {"label" : "remove", "tail" : "(arg0: AnyRef): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongList.remove", "link" : "solving\/NogoodReduciblesSequence.html#remove(x$1:Object):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(arg0: Long): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongList.add", "link" : "solving\/NogoodReduciblesSequence.html#add(x$1:Long):Boolean", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(arg0: AnyRef): Int", "member" : "it.unimi.dsi.fastutil.longs.LongList.lastIndexOf", "link" : "solving\/NogoodReduciblesSequence.html#lastIndexOf(x$1:Object):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(arg0: AnyRef): Int", "member" : "it.unimi.dsi.fastutil.longs.LongList.indexOf", "link" : "solving\/NogoodReduciblesSequence.html#indexOf(x$1:Object):Int", "kind" : "def"}, {"label" : "get", "tail" : "(arg0: Int): Long", "member" : "it.unimi.dsi.fastutil.longs.LongList.get", "link" : "solving\/NogoodReduciblesSequence.html#get(x$1:Int):Long", "kind" : "def"}, {"label" : "contains", "tail" : "(arg0: AnyRef): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongList.contains", "link" : "solving\/NogoodReduciblesSequence.html#contains(x$1:Object):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(arg0: Int, arg1: Long): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongList.add", "link" : "solving\/NogoodReduciblesSequence.html#add(x$1:Int,x$2:Long):Unit", "kind" : "def"}, {"label" : "setElements", "tail" : "(arg0: Int, arg1: Array[Long]): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongList.setElements", "link" : "solving\/NogoodReduciblesSequence.html#setElements(x$1:Int,x$2:Array[Long]):Unit", "kind" : "def"}, {"label" : "setElements", "tail" : "(arg0: Array[Long]): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongList.setElements", "link" : "solving\/NogoodReduciblesSequence.html#setElements(x$1:Array[Long]):Unit", "kind" : "def"}, {"label" : "spliterator", "tail" : "(): Spliterator[Long]", "member" : "java.util.List.spliterator", "link" : "solving\/NogoodReduciblesSequence.html#spliterator():java.util.Spliterator[E]", "kind" : "def"}, {"label" : "replaceAll", "tail" : "(arg0: UnaryOperator[Long]): Unit", "member" : "java.util.List.replaceAll", "link" : "solving\/NogoodReduciblesSequence.html#replaceAll(x$1:java.util.function.UnaryOperator[E]):Unit", "kind" : "def"}, {"label" : "retainAll", "tail" : "(arg0: LongCollection): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongCollection.retainAll", "link" : "solving\/NogoodReduciblesSequence.html#retainAll(x$1:it.unimi.dsi.fastutil.longs.LongCollection):Boolean", "kind" : "def"}, {"label" : "containsAll", "tail" : "(arg0: LongCollection): Boolean", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongCollection.containsAll", "link" : "solving\/NogoodReduciblesSequence.html#containsAll(x$1:it.unimi.dsi.fastutil.longs.LongCollection):Boolean", "kind" : "def"}, {"label" : "toLongArray", "tail" : "(arg0: Array[Long]): Array[Long]", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongCollection.toLongArray", "link" : "solving\/NogoodReduciblesSequence.html#toLongArray(x$1:Array[Long]):Array[Long]", "kind" : "def"}, {"label" : "toLongArray", "tail" : "(): Array[Long]", "member" : "it.unimi.dsi.fastutil.longs.AbstractLongCollection.toLongArray", "link" : "solving\/NogoodReduciblesSequence.html#toLongArray():Array[Long]", "kind" : "def"}, {"label" : "removeIf", "tail" : "(arg0: LongPredicate): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongCollection.removeIf", "link" : "solving\/NogoodReduciblesSequence.html#removeIf(x$1:java.util.function.LongPredicate):Boolean", "kind" : "def"}, {"label" : "removeIf", "tail" : "(arg0: Predicate[_ >: Long <: AnyRef]): Boolean", "member" : "it.unimi.dsi.fastutil.longs.LongCollection.removeIf", "link" : "solving\/NogoodReduciblesSequence.html#removeIf(x$1:java.util.function.Predicate[_>:Long]):Boolean", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: Consumer[_ >: Long <: AnyRef]): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongIterable.forEach", "link" : "solving\/NogoodReduciblesSequence.html#forEach(x$1:java.util.function.Consumer[_>:Long]):Unit", "kind" : "def"}, {"label" : "forEach", "tail" : "(arg0: LongConsumer): Unit", "member" : "it.unimi.dsi.fastutil.longs.LongIterable.forEach", "link" : "solving\/NogoodReduciblesSequence.html#forEach(x$1:java.util.function.LongConsumer):Unit", "kind" : "def"}, {"label" : "retainAll", "tail" : "(arg0: Collection[_ <: AnyRef]): Boolean", "member" : "java.util.AbstractCollection.retainAll", "link" : "solving\/NogoodReduciblesSequence.html#retainAll(x$1:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "containsAll", "tail" : "(arg0: Collection[_ <: AnyRef]): Boolean", "member" : "java.util.AbstractCollection.containsAll", "link" : "solving\/NogoodReduciblesSequence.html#containsAll(x$1:java.util.Collection[_]):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: Array[T]): Array[T]", "member" : "java.util.AbstractCollection.toArray", "link" : "solving\/NogoodReduciblesSequence.html#toArray[T](x$1:Array[TwithObject]):Array[TwithObject]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[AnyRef]", "member" : "java.util.AbstractCollection.toArray", "link" : "solving\/NogoodReduciblesSequence.html#toArray():Array[Object]", "kind" : "def"}, {"label" : "parallelStream", "tail" : "(): Stream[Long]", "member" : "java.util.Collection.parallelStream", "link" : "solving\/NogoodReduciblesSequence.html#parallelStream():java.util.stream.Stream[E]", "kind" : "def"}, {"label" : "stream", "tail" : "(): Stream[Long]", "member" : "java.util.Collection.stream", "link" : "solving\/NogoodReduciblesSequence.html#stream():java.util.stream.Stream[E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/NogoodReduciblesSequence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/NogoodReduciblesSequence.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/NogoodReduciblesSequence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/NogoodReduciblesSequence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/NogoodReduciblesSequence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/NogoodReduciblesSequence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/NogoodReduciblesSequence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/NogoodReduciblesSequence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/NogoodReduciblesSequence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/NogoodReduciblesSequence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/NogoodReduciblesSequence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/NogoodReduciblesSequence.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/NogoodReduciblesSequence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/NogoodReduciblesSequence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/NogoodReduciblesSequence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "solving\/NogoodReduciblesSequence.html", "kind" : "class"}, {"name" : "solving.NogoodReduciblesSequenceUnsafe", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Eli", "member" : "solving.NogoodReduciblesSequenceUnsafe.size", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#size():sharedDefs.Eli", "kind" : "def"}, {"label" : "filterByReducibleUS", "tail" : "(keepBy: (NogoodReducible) => Boolean): NogoodReduciblesSequenceUnsafe", "member" : "solving.NogoodReduciblesSequenceUnsafe.filterByReducibleUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#filterByReducibleUS(keepBy:NogoodReduciblesSequenceUnsafe.this.NogoodReducible=>Boolean):solving.NogoodReduciblesSequenceUnsafe", "kind" : "def"}, {"label" : "toHashSetOfReduciblesIncompl", "tail" : "(): LongOpenHashSet", "member" : "solving.NogoodReduciblesSequenceUnsafe.toHashSetOfReduciblesIncompl", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#toHashSetOfReduciblesIncompl:it.unimi.dsi.fastutil.longs.LongOpenHashSet", "kind" : "def"}, {"label" : "toHashSetOfReducibles", "tail" : "(): LongOpenHashSet", "member" : "solving.NogoodReduciblesSequenceUnsafe.toHashSetOfReducibles", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#toHashSetOfReducibles:it.unimi.dsi.fastutil.longs.LongOpenHashSet", "kind" : "def"}, {"label" : "containsReducible", "tail" : "(item: NogoodReducible): Boolean", "member" : "solving.NogoodReduciblesSequenceUnsafe.containsReducible", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#containsReducible(item:NogoodReduciblesSequenceUnsafe.this.NogoodReducible):Boolean", "kind" : "def"}, {"label" : "findReducibleUS", "tail" : "(item: NogoodReducible): Int", "member" : "solving.NogoodReduciblesSequenceUnsafe.findReducibleUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#findReducibleUS(item:NogoodReduciblesSequenceUnsafe.this.NogoodReducible):Int", "kind" : "def"}, {"label" : "toArrayBufferOfReducibles", "tail" : "(): ArrayBuffer[NogoodReducible]", "member" : "solving.NogoodReduciblesSequenceUnsafe.toArrayBufferOfReducibles", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#toArrayBufferOfReducibles:scala.collection.mutable.ArrayBuffer[NogoodReduciblesSequenceUnsafe.this.NogoodReducible]", "kind" : "def"}, {"label" : "swap", "tail" : "(i: Int, j: Int, valueI: Long): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.swap", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#swap(i:Int,j:Int,valueI:Long):Unit", "kind" : "def"}, {"label" : "updateItemUS", "tail" : "(index: Int, reducible: NogoodReducible): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.updateItemUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#updateItemUS(index:Int,reducible:NogoodReduciblesSequenceUnsafe.this.NogoodReducible):Unit", "kind" : "def"}, {"label" : "addReducibleUS", "tail" : "(reducible: NogoodReducible): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.addReducibleUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#addReducibleUS(reducible:NogoodReduciblesSequenceUnsafe.this.NogoodReducible):Unit", "kind" : "def"}, {"label" : "removeByAddrUS", "tail" : "(iAddr: Long): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.removeByAddrUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#removeByAddrUS(iAddr:Long):Unit", "kind" : "def"}, {"label" : "removeByIndexUS", "tail" : "(i: Int): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.removeByIndexUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#removeByIndexUS(i:Int):Unit", "kind" : "def"}, {"label" : "getReducibleUS", "tail" : "(index: Int): NogoodReducible", "member" : "solving.NogoodReduciblesSequenceUnsafe.getReducibleUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#getReducibleUS(index:Int):NogoodReduciblesSequenceUnsafe.this.NogoodReducible", "kind" : "def"}, {"label" : "getAddrOfItem", "tail" : "(index: Int): Long", "member" : "solving.NogoodReduciblesSequenceUnsafe.getAddrOfItem", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#getAddrOfItem(index:Int):Long", "kind" : "def"}, {"label" : "getBytesPerElement", "tail" : "(): Int", "member" : "solving.NogoodReduciblesSequenceUnsafe.getBytesPerElement", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#getBytesPerElement:Int", "kind" : "def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "solving.NogoodReduciblesSequenceUnsafe.getAddr", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#getAddr:Long", "kind" : "def"}, {"label" : "cutoffUS", "tail" : "(whereExclusive: Int): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.cutoffUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#cutoffUS(whereExclusive:Int):Unit", "kind" : "def"}, {"label" : "clearUS", "tail" : "(): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.clearUS", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#clearUS():Unit", "kind" : "def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "solving.NogoodReduciblesSequenceUnsafe.addToGarbage", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#addToGarbage():Unit", "kind" : "def"}, {"label" : "allocatedBytes", "tail" : "(allocatedItems: Int): Int", "member" : "solving.NogoodReduciblesSequenceUnsafe.allocatedBytes", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#allocatedBytes(allocatedItems:Int):Int", "kind" : "def"}, {"label" : "NogoodReducible", "tail" : "", "member" : "solving.NogoodReduciblesSequenceUnsafe.NogoodReducible", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#NogoodReducible=Long", "kind" : "type"}, {"member" : "solving.NogoodReduciblesSequenceUnsafe#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/NogoodReduciblesSequenceUnsafe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "solving\/NogoodReduciblesSequenceUnsafe.html", "kind" : "class"}, {"name" : "solving.Preparation", "shortDescription" : "Various preparation steps before actual solving and sampling starts.", "members_class" : [{"label" : "isAcyclic", "tail" : "(depGraph: Int2ObjectOpenHashMap[List[Eli]]): Boolean", "member" : "solving.Preparation.isAcyclic", "link" : "solving\/Preparation.html#isAcyclic(depGraph:it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap[List[sharedDefs.Eli]]):Boolean", "kind" : "final def"}, {"label" : "computeDependencyGraph", "tail" : "(rules: ArrayBuffer[Rule], noOfAllPosAtomElis: Int, positiveDepGraph: Boolean): Int2ObjectOpenHashMap[List[Eli]]", "member" : "solving.Preparation.computeDependencyGraph", "link" : "solving\/Preparation.html#computeDependencyGraph(rules:scala.collection.mutable.ArrayBuffer[sharedDefs.Rule],noOfAllPosAtomElis:Int,positiveDepGraph:Boolean):it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap[List[sharedDefs.Eli]]", "kind" : "def"}, {"label" : "checkASPWithEliRules", "tail" : "(modelCandidate: (Array[Eli], IntOpenHashSet), ruless: ArrayBuffer[Rule]): (Boolean, Array[Eli])", "member" : "solving.Preparation.checkASPWithEliRules", "link" : "solving\/Preparation.html#checkASPWithEliRules(modelCandidate:(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet),ruless:scala.collection.mutable.ArrayBuffer[sharedDefs.Rule]):(Boolean,Array[sharedDefs.Eli])", "kind" : "def"}, {"label" : "computeLeastHerbrandDefClauses", "tail" : "(posDefClauseProg: Seq[Rule]): IntOpenHashSet", "member" : "solving.Preparation.computeLeastHerbrandDefClauses", "link" : "solving\/Preparation.html#computeLeastHerbrandDefClauses(posDefClauseProg:scala.collection.Seq[sharedDefs.Rule]):it.unimi.dsi.fastutil.ints.IntOpenHashSet", "kind" : "def"}, {"label" : "computeClarkNogis", "tail" : "(rules: ArrayBuffer[Rule]): (Array[IntArrayUnsafeS], HashMap[Eli, Array[Eli]], HashMap[Eli, Array[Eli]])", "member" : "solving.Preparation.computeClarkNogis", "link" : "solving\/Preparation.html#computeClarkNogis(rules:scala.collection.mutable.ArrayBuffer[sharedDefs.Rule]):(Array[utils.IntArrayUnsafeS],java.util.HashMap[sharedDefs.Eli,Array[sharedDefs.Eli]],java.util.HashMap[sharedDefs.Eli,Array[sharedDefs.Eli]])", "kind" : "def"}, {"label" : "eliToJavaArrayIndex", "tail" : "(eli: Eli): Int", "member" : "solving.Preparation.eliToJavaArrayIndex", "link" : "solving\/Preparation.html#eliToJavaArrayIndex(eli:sharedDefs.Eli):Int", "kind" : "def"}, {"label" : "absEliClusteredMap", "tail" : ": Int2IntOpenHashMap", "member" : "solving.Preparation.absEliClusteredMap", "link" : "solving\/Preparation.html#absEliClusteredMap:it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap", "kind" : "val"}, {"label" : "absEliClusterMaps", "tail" : ": Int2IntOpenHashMap", "member" : "solving.Preparation.absEliClusterMaps", "link" : "solving\/Preparation.html#absEliClusterMaps:it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap", "kind" : "val"}, {"label" : "absEliClustered", "tail" : ": Array[Array[Eli]]", "member" : "solving.Preparation.absEliClustered", "link" : "solving\/Preparation.html#absEliClustered:Array[Array[sharedDefs.Eli]]", "kind" : "val"}, {"label" : "absEliClusters", "tail" : ": List[CentroidCluster[AbsEliClusterable]]", "member" : "solving.Preparation.absEliClusters", "link" : "solving\/Preparation.html#absEliClusters:java.util.List[org.apache.commons.math3.ml.clustering.CentroidCluster[Preparation.this.AbsEliClusterable]]", "kind" : "val"}, {"label" : "AbsEliClusterable", "tail" : "", "member" : "solving.Preparation.AbsEliClusterable", "link" : "solving\/Preparation.html#AbsEliClusterableextendsClusterablewithProductwithSerializable", "kind" : "case class"}, {"label" : "eliToNogisClark", "tail" : ": Array[ArrayValExtensibleIntUnsafe]", "member" : "solving.Preparation.eliToNogisClark", "link" : "solving\/Preparation.html#eliToNogisClark:Array[utils.ArrayValExtensibleIntUnsafe]", "kind" : "val"}, {"label" : "deficitOrderedUncertainLiteralsForJava", "tail" : ": Array[Integer]", "member" : "solving.Preparation.deficitOrderedUncertainLiteralsForJava", "link" : "solving\/Preparation.html#deficitOrderedUncertainLiteralsForJava:Array[Integer]", "kind" : "var"}, {"label" : "deficitByDeriv", "tail" : "(parameterLiteralEli: Eli): Double", "member" : "solving.Preparation.deficitByDeriv", "link" : "solving\/Preparation.html#deficitByDeriv(parameterLiteralEli:sharedDefs.Eli):Double", "kind" : "def"}, {"label" : "parameterLiteralElis", "tail" : ": IntArrayUnsafeS", "member" : "solving.Preparation.parameterLiteralElis", "link" : "solving\/Preparation.html#parameterLiteralElis:utils.IntArrayUnsafeS", "kind" : "val"}, {"label" : "parameterLiteralElisArray", "tail" : ": Array[Int]", "member" : "solving.Preparation.parameterLiteralElisArray", "link" : "solving\/Preparation.html#parameterLiteralElisArray:Array[Int]", "kind" : "val"}, {"label" : "parameterAtomsElisSet", "tail" : ": Set[Eli]", "member" : "solving.Preparation.parameterAtomsElisSet", "link" : "solving\/Preparation.html#parameterAtomsElisSet:Set[sharedDefs.Eli]", "kind" : "val"}, {"label" : "totalCostFun_forPartDerivCompl", "tail" : ": DifferentialFunction[DoubleReal]", "member" : "solving.Preparation.totalCostFun_forPartDerivCompl", "link" : "solving\/Preparation.html#totalCostFun_forPartDerivCompl:com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]", "kind" : "val"}, {"label" : "n", "tail" : ": Constant[DoubleReal]", "member" : "solving.Preparation.n", "link" : "solving\/Preparation.html#n:com.accelad.math.nilgiri.autodiff.Constant[com.accelad.math.nilgiri.DoubleReal]", "kind" : "val"}, {"label" : "innerCostFunForParamAtomEli_ForPartDerivINCOMPLETE", "tail" : ": Map[Eli, Option[DifferentialFunction[DoubleReal]]]", "member" : "solving.Preparation.innerCostFunForParamAtomEli_ForPartDerivINCOMPLETE", "link" : "solving\/Preparation.html#innerCostFunForParamAtomEli_ForPartDerivINCOMPLETE:scala.collection.mutable.Map[sharedDefs.Eli,Option[com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]]]", "kind" : "val"}, {"label" : "parameterAtomsElis", "tail" : ": Array[Eli]", "member" : "solving.Preparation.parameterAtomsElis", "link" : "solving\/Preparation.html#parameterAtomsElis:Array[sharedDefs.Eli]", "kind" : "val"}, {"label" : "findInnerCostFunForParameterAtom_ForPartDerivINCOMPLETE", "tail" : "(parameterAtomEli: Eli): Option[DifferentialFunction[DoubleReal]]", "member" : "solving.Preparation.findInnerCostFunForParameterAtom_ForPartDerivINCOMPLETE", "link" : "solving\/Preparation.html#findInnerCostFunForParameterAtom_ForPartDerivINCOMPLETE(parameterAtomEli:sharedDefs.Eli):Option[com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]]", "kind" : "def"}, {"label" : "setCostFctsInner", "tail" : "(): Unit", "member" : "solving.Preparation.setCostFctsInner", "link" : "solving\/Preparation.html#setCostFctsInner:Unit", "kind" : "def"}, {"label" : "cfi", "tail" : ": Int", "member" : "solving.Preparation.cfi", "link" : "solving\/Preparation.html#cfi:Int", "kind" : "var"}, {"label" : "costFctsInner", "tail" : ": Array[DifferentialFunction[DoubleReal]]", "member" : "solving.Preparation.costFctsInner", "link" : "solving\/Preparation.html#costFctsInner:Array[com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]]", "kind" : "var"}, {"label" : "hypothesisParamTargetWeightVariables", "tail" : ": ArrayBuffer[(Eli, Variable[DoubleReal])]", "member" : "solving.Preparation.hypothesisParamTargetWeightVariables", "link" : "solving\/Preparation.html#hypothesisParamTargetWeightVariables:scala.collection.mutable.ArrayBuffer[(sharedDefs.Eli,com.accelad.math.nilgiri.autodiff.Variable[com.accelad.math.nilgiri.DoubleReal])]", "kind" : "val"}, {"label" : "measuredAtomsElis", "tail" : ": Array[Eli]", "member" : "solving.Preparation.measuredAtomsElis", "link" : "solving\/Preparation.html#measuredAtomsElis:Array[sharedDefs.Eli]", "kind" : "val"}, {"label" : "measuredAtomNameInCostFnToSymbol", "tail" : "(n: String): String", "member" : "solving.Preparation.measuredAtomNameInCostFnToSymbol", "link" : "solving\/Preparation.html#measuredAtomNameInCostFnToSymbol(n:String):String", "kind" : "def"}, {"label" : "parameterAtomsElis0", "tail" : ": Array[Eli]", "member" : "solving.Preparation.parameterAtomsElis0", "link" : "solving\/Preparation.html#parameterAtomsElis0:Array[sharedDefs.Eli]", "kind" : "val"}, {"label" : "symbolToAbsEli", "tail" : ": Map[String, Eli]", "member" : "solving.Preparation.symbolToAbsEli", "link" : "solving\/Preparation.html#symbolToAbsEli:Map[String,sharedDefs.Eli]", "kind" : "val"}, {"label" : "eliToVariableInCostFunctions", "tail" : ": Map[Eli, Variable[DoubleReal]]", "member" : "solving.Preparation.eliToVariableInCostFunctions", "link" : "solving\/Preparation.html#eliToVariableInCostFunctions:scala.collection.mutable.Map[sharedDefs.Eli,com.accelad.math.nilgiri.autodiff.Variable[com.accelad.math.nilgiri.DoubleReal]]", "kind" : "val"}, {"label" : "dFFactory", "tail" : ": DifferentialFunctionFactoryStasp", "member" : "solving.Preparation.dFFactory", "link" : "solving\/Preparation.html#dFFactory:diff.DifferentialFunctionFactoryStasp", "kind" : "val"}, {"label" : "nablasInner", "tail" : ": Array[DifferentialFunction[DoubleReal]]", "member" : "solving.Preparation.nablasInner", "link" : "solving\/Preparation.html#nablasInner:Array[com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]]", "kind" : "val"}, {"label" : "costFctsInnerWithPossMeasuredElis_ForPartDerivINCOMPLETE", "tail" : ": HashMap[Eli, DifferentialFunction[DoubleReal]]", "member" : "solving.Preparation.costFctsInnerWithPossMeasuredElis_ForPartDerivINCOMPLETE", "link" : "solving\/Preparation.html#costFctsInnerWithPossMeasuredElis_ForPartDerivINCOMPLETE:scala.collection.mutable.HashMap[sharedDefs.Eli,com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]]", "kind" : "val"}, {"label" : "progIsTight", "tail" : ": Boolean", "member" : "solving.Preparation.progIsTight", "link" : "solving\/Preparation.html#progIsTight:Boolean", "kind" : "val"}, {"label" : "positiveDependencyGraph", "tail" : ": Int2ObjectOpenHashMap[List[Eli]]", "member" : "solving.Preparation.positiveDependencyGraph", "link" : "solving\/Preparation.html#positiveDependencyGraph:it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap[List[sharedDefs.Eli]]", "kind" : "val"}, {"label" : "nogi", "tail" : ": Nogi", "member" : "solving.Preparation.nogi", "link" : "solving\/Preparation.html#nogi:sharedDefs.Nogi", "kind" : "var"}, {"label" : "requiredSpaceForClarkReducibles", "tail" : ": Long", "member" : "solving.Preparation.requiredSpaceForClarkReducibles", "link" : "solving\/Preparation.html#requiredSpaceForClarkReducibles:Long", "kind" : "var"}, {"label" : "ensuredMaxNoElisInNogoodForProductRepresentationWithExt5", "tail" : ": Int", "member" : "solving.Preparation.ensuredMaxNoElisInNogoodForProductRepresentationWithExt5", "link" : "solving\/Preparation.html#ensuredMaxNoElisInNogoodForProductRepresentationWithExt5:Int", "kind" : "val"}, {"label" : "alignmentForClarkNogoodReducibles", "tail" : ": Int", "member" : "solving.Preparation.alignmentForClarkNogoodReducibles", "link" : "solving\/Preparation.html#alignmentForClarkNogoodReducibles:Int", "kind" : "val"}, {"label" : "closingIntsAfterNogoodInReducible", "tail" : ": Int", "member" : "solving.Preparation.closingIntsAfterNogoodInReducible", "link" : "solving\/Preparation.html#closingIntsAfterNogoodInReducible:Int", "kind" : "val"}, {"label" : "offsetIntsOfNogoodInReducible", "tail" : ": Int", "member" : "solving.Preparation.offsetIntsOfNogoodInReducible", "link" : "solving\/Preparation.html#offsetIntsOfNogoodInReducible:Int", "kind" : "val"}, {"label" : "spaceInBytesForBitsetWithExtReducibles3", "tail" : ": Int", "member" : "solving.Preparation.spaceInBytesForBitsetWithExtReducibles3", "link" : "solving\/Preparation.html#spaceInBytesForBitsetWithExtReducibles3:Int", "kind" : "val"}, {"label" : "noOfLongsForBitsetWithExtReducibles345", "tail" : ": Int", "member" : "solving.Preparation.noOfLongsForBitsetWithExtReducibles345", "link" : "solving\/Preparation.html#noOfLongsForBitsetWithExtReducibles345:Int", "kind" : "val"}, {"label" : "sizeInBitsForBitsetWithExtReducibles345", "tail" : ": Int", "member" : "solving.Preparation.sizeInBitsForBitsetWithExtReducibles345", "link" : "solving\/Preparation.html#sizeInBitsForBitsetWithExtReducibles345:Int", "kind" : "val"}, {"label" : "offsetBytesForBitsetWithExtReducibles345", "tail" : ": Int", "member" : "solving.Preparation.offsetBytesForBitsetWithExtReducibles345", "link" : "solving\/Preparation.html#offsetBytesForBitsetWithExtReducibles345:Int", "kind" : "val"}, {"label" : "offsetIntsForBitsetWithExtReducibles345", "tail" : ": Int", "member" : "solving.Preparation.offsetIntsForBitsetWithExtReducibles345", "link" : "solving\/Preparation.html#offsetIntsForBitsetWithExtReducibles345:Int", "kind" : "val"}, {"label" : "psCombine", "tail" : "(hash: Long, eli: Eli): Long", "member" : "solving.Preparation.psCombine", "link" : "solving\/Preparation.html#psCombine(hash:Long,eli:sharedDefs.Eli):Long", "kind" : "def"}, {"label" : "clarkNogoodsFinal", "tail" : ": Array[IntArrayUnsafeS]", "member" : "solving.Preparation.clarkNogoodsFinal", "link" : "solving\/Preparation.html#clarkNogoodsFinal:Array[utils.IntArrayUnsafeS]", "kind" : "val"}, {"label" : "clarkNogoods4", "tail" : ": Array[IntArrayUnsafeS]", "member" : "solving.Preparation.clarkNogoods4", "link" : "solving\/Preparation.html#clarkNogoods4:Array[utils.IntArrayUnsafeS]", "kind" : "val"}, {"label" : "nogoodClusters", "tail" : ": List[CentroidCluster[NogoodClusterable]]", "member" : "solving.Preparation.nogoodClusters", "link" : "solving\/Preparation.html#nogoodClusters:java.util.List[org.apache.commons.math3.ml.clustering.CentroidCluster[Preparation.this.NogoodClusterable]]", "kind" : "val"}, {"label" : "NogoodClusterable", "tail" : "", "member" : "solving.Preparation.NogoodClusterable", "link" : "solving\/Preparation.html#NogoodClusterableextendsClusterablewithProductwithSerializable", "kind" : "case class"}, {"label" : "noOfNogoodClusters", "tail" : ": Int", "member" : "solving.Preparation.noOfNogoodClusters", "link" : "solving\/Preparation.html#noOfNogoodClusters:Int", "kind" : "val"}, {"label" : "clarkNogoods3", "tail" : ": Array[IntArrayUnsafeS]", "member" : "solving.Preparation.clarkNogoods3", "link" : "solving\/Preparation.html#clarkNogoods3:Array[utils.IntArrayUnsafeS]", "kind" : "var"}, {"label" : "removedPosAtomsOrderedOpt", "tail" : ": Option[ArrayBuffer[Eli]]", "member" : "solving.Preparation.removedPosAtomsOrderedOpt", "link" : "solving\/Preparation.html#removedPosAtomsOrderedOpt:Option[scala.collection.mutable.ArrayBuffer[sharedDefs.Eli]]", "kind" : "val"}, {"label" : "removedNogoodsPerAtomOpt", "tail" : ": Option[TreeMap[Eli, HashSet[IntArrayUnsafeS]]]", "member" : "solving.Preparation.removedNogoodsPerAtomOpt", "link" : "solving\/Preparation.html#removedNogoodsPerAtomOpt:Option[scala.collection.mutable.TreeMap[sharedDefs.Eli,scala.collection.mutable.HashSet[utils.IntArrayUnsafeS]]]", "kind" : "val"}, {"label" : "clarkNogoods2", "tail" : ": Array[IntArrayUnsafeS]", "member" : "solving.Preparation.clarkNogoods2", "link" : "solving\/Preparation.html#clarkNogoods2:Array[utils.IntArrayUnsafeS]", "kind" : "val"}, {"label" : "preProcesssVariableElimConfig", "tail" : ": (Boolean, Double, Double, Float, Boolean)", "member" : "solving.Preparation.preProcesssVariableElimConfig", "link" : "solving\/Preparation.html#preProcesssVariableElimConfig:(Boolean,Double,Double,Float,Boolean)", "kind" : "val"}, {"label" : "absEliUndoChangeMap", "tail" : ": HashMap[Eli, Eli]", "member" : "solving.Preparation.absEliUndoChangeMap", "link" : "solving\/Preparation.html#absEliUndoChangeMap:scala.collection.mutable.HashMap[sharedDefs.Eli,sharedDefs.Eli]", "kind" : "val"}, {"label" : "clarkNogoods1", "tail" : ": Array[IntArrayUnsafeS]", "member" : "solving.Preparation.clarkNogoods1", "link" : "solving\/Preparation.html#clarkNogoods1:Array[utils.IntArrayUnsafeS]", "kind" : "val"}, {"label" : "negBlitToPosBodyElis", "tail" : ": HashMap[Eli, Array[Eli]]", "member" : "solving.Preparation.negBlitToPosBodyElis", "link" : "solving\/Preparation.html#negBlitToPosBodyElis:java.util.HashMap[sharedDefs.Eli,Array[sharedDefs.Eli]]", "kind" : "var"}, {"label" : "posHeadAtomToNegBlits", "tail" : ": HashMap[Eli, Array[Eli]]", "member" : "solving.Preparation.posHeadAtomToNegBlits", "link" : "solving\/Preparation.html#posHeadAtomToNegBlits:java.util.HashMap[sharedDefs.Eli,Array[sharedDefs.Eli]]", "kind" : "var"}, {"label" : "toAbsEli", "tail" : "(eli: Eli): Eli", "member" : "solving.Preparation.toAbsEli", "link" : "solving\/Preparation.html#toAbsEli(eli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "negateNegEli", "tail" : "(eli: Eli): Eli", "member" : "solving.Preparation.negateNegEli", "link" : "solving\/Preparation.html#negateNegEli(eli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "negatePosEli", "tail" : "(eli: Eli): Eli", "member" : "solving.Preparation.negatePosEli", "link" : "solving\/Preparation.html#negatePosEli(eli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "negateEli", "tail" : "(eli: Eli): Eli", "member" : "solving.Preparation.negateEli", "link" : "solving\/Preparation.html#negateEli(eli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "isNegEli", "tail" : "(eli: Eli): Boolean", "member" : "solving.Preparation.isNegEli", "link" : "solving\/Preparation.html#isNegEli(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "isPosEli", "tail" : "(eli: Eli): Boolean", "member" : "solving.Preparation.isPosEli", "link" : "solving\/Preparation.html#isPosEli(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "isPosAtomEli", "tail" : "(eli: Eli): Boolean", "member" : "solving.Preparation.isPosAtomEli", "link" : "solving\/Preparation.html#isPosAtomEli(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "setFoundStructures", "tail" : "(): Unit", "member" : "solving.Preparation.setFoundStructures", "link" : "solving\/Preparation.html#setFoundStructures:Unit", "kind" : "def"}, {"label" : "rephaseLock", "tail" : ": ReentrantLock", "member" : "solving.Preparation.rephaseLock", "link" : "solving\/Preparation.html#rephaseLock:java.util.concurrent.locks.ReentrantLock", "kind" : "val"}, {"label" : "emptyBodyBlit", "tail" : ": Eli", "member" : "solving.Preparation.emptyBodyBlit", "link" : "solving\/Preparation.html#emptyBodyBlit:sharedDefs.Eli", "kind" : "var"}, {"label" : "noOfPosBlits", "tail" : ": Int", "member" : "solving.Preparation.noOfPosBlits", "link" : "solving\/Preparation.html#noOfPosBlits:Int", "kind" : "var"}, {"label" : "noOfPosAtomElis", "tail" : ": Int", "member" : "solving.Preparation.noOfPosAtomElis", "link" : "solving\/Preparation.html#noOfPosAtomElis:Int", "kind" : "var"}, {"label" : "symbolsWithoutTranslation", "tail" : ": Array[String]", "member" : "solving.Preparation.symbolsWithoutTranslation", "link" : "solving\/Preparation.html#symbolsWithoutTranslation:Array[String]", "kind" : "var"}, {"label" : "symbolsWithPosElis", "tail" : ": Array[(String, Int)]", "member" : "solving.Preparation.symbolsWithPosElis", "link" : "solving\/Preparation.html#symbolsWithPosElis:Array[(String,Int)]", "kind" : "var"}, {"label" : "symbols", "tail" : ": Array[String]", "member" : "solving.Preparation.symbols", "link" : "solving\/Preparation.html#symbols:Array[String]", "kind" : "var"}, {"label" : "dimacsClauseNogoodsOpt", "tail" : ": Option[Array[IntArrayUnsafeS]]", "member" : "solving.Preparation.dimacsClauseNogoodsOpt", "link" : "solving\/Preparation.html#dimacsClauseNogoodsOpt:Option[Array[utils.IntArrayUnsafeS]]", "kind" : "val"}, {"label" : "rulesOpt", "tail" : ": Option[ArrayBuffer[Rule]]", "member" : "solving.Preparation.rulesOpt", "link" : "solving\/Preparation.html#rulesOpt:Option[scala.collection.mutable.ArrayBuffer[sharedDefs.Rule]]", "kind" : "val"}, {"label" : "timerPrepNs", "tail" : ": Long", "member" : "solving.Preparation.timerPrepNs", "link" : "solving\/Preparation.html#timerPrepNs:Long", "kind" : "val"}, {"label" : "satMode", "tail" : ": Boolean", "member" : "solving.Preparation.satMode", "link" : "solving\/Preparation.html#satMode:Boolean", "kind" : "val"}, {"label" : "assgnmFullSize", "tail" : ": Int", "member" : "solving.Preparation.assgnmFullSize", "link" : "solving\/Preparation.html#assgnmFullSize:Int", "kind" : "var"}, {"label" : "noOfAbsElis", "tail" : ": Int", "member" : "solving.Preparation.noOfAbsElis", "link" : "solving\/Preparation.html#noOfAbsElis:Int", "kind" : "var"}, {"label" : "noOfAllElis", "tail" : ": Int", "member" : "solving.Preparation.noOfAllElis", "link" : "solving\/Preparation.html#noOfAllElis:Int", "kind" : "var"}, {"member" : "solving.Preparation#<init>", "error" : "unsupported entity"}, {"label" : "costsOpt", "tail" : ": Option[UncertainAtomsSeprt]", "member" : "solving.Preparation.costsOpt", "link" : "solving\/Preparation.html#costsOpt:Option[diff.UncertainAtomsSeprt]", "kind" : "val"}, {"label" : "aspifOrDIMACSParserResult", "tail" : ": AspifOrDIMACSPlainParserResult", "member" : "solving.Preparation.aspifOrDIMACSParserResult", "link" : "solving\/Preparation.html#aspifOrDIMACSParserResult:input.AspifOrDIMACSPlainParserResult", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/Preparation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/Preparation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/Preparation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/Preparation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/Preparation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/Preparation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/Preparation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/Preparation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/Preparation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/Preparation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/Preparation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/Preparation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "solving\/Preparation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/Preparation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "solving\/Preparation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "solving\/Preparation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/Preparation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/Preparation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/Preparation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "solving\/Preparation.html", "kind" : "class"}, {"name" : "solving.SamplingResult", "shortDescription" : "The result of a sampler call", "members_case class" : [{"member" : "solving.SamplingResult#<init>", "error" : "unsupported entity"}, {"label" : "samplingDurationNs", "tail" : ": Long", "member" : "solving.SamplingResult.samplingDurationNs", "link" : "solving\/SamplingResult.html#samplingDurationNs:Long", "kind" : "val"}, {"label" : "modelsUsingElis", "tail" : ": ArrayBuffer[(Array[Eli], IntOpenHashSet)]", "member" : "solving.SamplingResult.modelsUsingElis", "link" : "solving\/SamplingResult.html#modelsUsingElis:scala.collection.mutable.ArrayBuffer[(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet)]", "kind" : "val"}, {"label" : "modelsSymbolic", "tail" : ": Seq[Array[String]]", "member" : "solving.SamplingResult.modelsSymbolic", "link" : "solving\/SamplingResult.html#modelsSymbolic:scala.collection.mutable.Seq[Array[String]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "solving\/SamplingResult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/SamplingResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/SamplingResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/SamplingResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/SamplingResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/SamplingResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/SamplingResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/SamplingResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SamplingResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SamplingResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SamplingResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/SamplingResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/SamplingResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/SamplingResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/SamplingResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/SamplingResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/SamplingResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "solving\/SamplingResult.html", "kind" : "case class"}, {"name" : "solving.SharedAmongSingleSolverThreads", "shortDescription" : "", "members_class" : [{"label" : "nogoodReducibleExchangePool", "tail" : ": ConcurrentHashMap[NogoodReducible, Int]", "member" : "solving.SharedAmongSingleSolverThreads.nogoodReducibleExchangePool", "link" : "solving\/SharedAmongSingleSolverThreads.html#nogoodReducibleExchangePool:java.util.concurrent.ConcurrentHashMap[sharedDefs.NogoodReducible,Int]", "kind" : "val"}, {"label" : "nogoodReducibleExchangePoolSourceThreadsForCyclicSharingPrevention", "tail" : ": ConcurrentHashMap[NogoodReducible, Int]", "member" : "solving.SharedAmongSingleSolverThreads.nogoodReducibleExchangePoolSourceThreadsForCyclicSharingPrevention", "link" : "solving\/SharedAmongSingleSolverThreads.html#nogoodReducibleExchangePoolSourceThreadsForCyclicSharingPrevention:java.util.concurrent.ConcurrentHashMap[sharedDefs.NogoodReducible,Int]", "kind" : "val"}, {"label" : "fmStackGlobal", "tail" : ": LongArrayList", "member" : "solving.SharedAmongSingleSolverThreads.fmStackGlobal", "link" : "solving\/SharedAmongSingleSolverThreads.html#fmStackGlobal:it.unimi.dsi.fastutil.longs.LongArrayList", "kind" : "val"}, {"label" : "fmStackGlobalCapacity", "tail" : ": Int", "member" : "solving.SharedAmongSingleSolverThreads.fmStackGlobalCapacity", "link" : "solving\/SharedAmongSingleSolverThreads.html#fmStackGlobalCapacity:Int", "kind" : "val"}, {"label" : "greedilyBestThread", "tail" : ": Int", "member" : "solving.SharedAmongSingleSolverThreads.greedilyBestThread", "link" : "solving\/SharedAmongSingleSolverThreads.html#greedilyBestThread:Int", "kind" : "var"}, {"label" : "bestPhasesQueueGlobal", "tail" : ": FiniteQueue[ByteArrayUnsafeS]", "member" : "solving.SharedAmongSingleSolverThreads.bestPhasesQueueGlobal", "link" : "solving\/SharedAmongSingleSolverThreads.html#bestPhasesQueueGlobal:utils.FiniteQueue[utils.ByteArrayUnsafeS]", "kind" : "val"}, {"label" : "refreshedBestPhasesGlobal", "tail" : ": Int", "member" : "solving.SharedAmongSingleSolverThreads.refreshedBestPhasesGlobal", "link" : "solving\/SharedAmongSingleSolverThreads.html#refreshedBestPhasesGlobal:Int", "kind" : "var"}, {"member" : "solving.SharedAmongSingleSolverThreads#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/SharedAmongSingleSolverThreads.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/SharedAmongSingleSolverThreads.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/SharedAmongSingleSolverThreads.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/SharedAmongSingleSolverThreads.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/SharedAmongSingleSolverThreads.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/SharedAmongSingleSolverThreads.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/SharedAmongSingleSolverThreads.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SharedAmongSingleSolverThreads.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SharedAmongSingleSolverThreads.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SharedAmongSingleSolverThreads.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/SharedAmongSingleSolverThreads.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/SharedAmongSingleSolverThreads.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "solving\/SharedAmongSingleSolverThreads.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/SharedAmongSingleSolverThreads.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "solving\/SharedAmongSingleSolverThreads.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "solving\/SharedAmongSingleSolverThreads.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/SharedAmongSingleSolverThreads.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/SharedAmongSingleSolverThreads.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/SharedAmongSingleSolverThreads.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "solving\/SharedAmongSingleSolverThreads.html", "kind" : "class"}, {"name" : "solving.SingleSolverThreadData", "shortDescription" : "Data structures and associated methods used in the inner (i.e.", "members_class" : [{"label" : "noOfPosElisPlus1", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfPosElisPlus1", "link" : "solving\/SingleSolverThreadData.html#noOfPosElisPlus1:Int", "kind" : "val"}, {"label" : "findDecisionEli", "tail" : "(): Eli", "member" : "solving.SingleSolverThreadData.findDecisionEli", "link" : "solving\/SingleSolverThreadData.html#findDecisionEli:sharedDefs.Eli", "kind" : "def"}, {"label" : "phasedEli", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.phasedEli", "link" : "solving\/SingleSolverThreadData.html#phasedEli(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "uncertainEliSearchStart", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.uncertainEliSearchStart", "link" : "solving\/SingleSolverThreadData.html#uncertainEliSearchStart:Int", "kind" : "var"}, {"label" : "noisePhaseMemo", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.noisePhaseMemo", "link" : "solving\/SingleSolverThreadData.html#noisePhaseMemo:Float", "kind" : "var"}, {"label" : "modelOpt", "tail" : ": Option[(Array[Eli], IntOpenHashSet)]", "member" : "solving.SingleSolverThreadData.modelOpt", "link" : "solving\/SingleSolverThreadData.html#modelOpt:Option[(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet)]", "kind" : "var"}, {"label" : "fetchSharedLearnedNogoodsFromOtherThreads", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.fetchSharedLearnedNogoodsFromOtherThreads", "link" : "solving\/SingleSolverThreadData.html#fetchSharedLearnedNogoodsFromOtherThreads:Unit", "kind" : "def"}, {"label" : "addLearnedNogoodReducibleToReducibleLists", "tail" : "(newLearnedNogoodReducible: NogoodReducible, violatedNogoodReducible: NogoodReducible, appendToTotalList: Boolean): Unit", "member" : "solving.SingleSolverThreadData.addLearnedNogoodReducibleToReducibleLists", "link" : "solving\/SingleSolverThreadData.html#addLearnedNogoodReducibleToReducibleLists(newLearnedNogoodReducible:sharedDefs.NogoodReducible,violatedNogoodReducible:sharedDefs.NogoodReducible,appendToTotalList:Boolean):Unit", "kind" : "def"}, {"label" : "restart", "tail" : "(trials: Int, jumpBackLevelFromConflict: Int, temporaryDisableReusedTrailRestarts: Boolean): Unit", "member" : "solving.SingleSolverThreadData.restart", "link" : "solving\/SingleSolverThreadData.html#restart(trials:Int,jumpBackLevelFromConflict:Int,temporaryDisableReusedTrailRestarts:Boolean):Unit", "kind" : "def"}, {"label" : "weaklyRephase", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.weaklyRephase", "link" : "solving\/SingleSolverThreadData.html#weaklyRephase:Unit", "kind" : "def"}, {"label" : "possiblyRemoveLearnedNogoods", "tail" : "(trials: Eli, all: Boolean): Unit", "member" : "solving.SingleSolverThreadData.possiblyRemoveLearnedNogoods", "link" : "solving\/SingleSolverThreadData.html#possiblyRemoveLearnedNogoods(trials:sharedDefs.Eli,all:Boolean):Unit", "kind" : "def"}, {"label" : "possiblyAddLearnedNogoodToReducibleLists", "tail" : "(trials: Eli, newLearnedNogoodReducible: NogoodReducible, appendToTotalList: Boolean): Unit", "member" : "solving.SingleSolverThreadData.possiblyAddLearnedNogoodToReducibleLists", "link" : "solving\/SingleSolverThreadData.html#possiblyAddLearnedNogoodToReducibleLists(trials:sharedDefs.Eli,newLearnedNogoodReducible:sharedDefs.NogoodReducible,appendToTotalList:Boolean):Unit", "kind" : "def"}, {"label" : "intersect", "tail" : ": NogoodReduciblesSequenceUnsafe", "member" : "solving.SingleSolverThreadData.intersect", "link" : "solving\/SingleSolverThreadData.html#intersect:solving.NogoodReduciblesSequenceUnsafe", "kind" : "val"}, {"label" : "deleteLearnedNogoodReducible", "tail" : "(reducible: NogoodReducible, lazyApproach: Boolean): Boolean", "member" : "solving.SingleSolverThreadData.deleteLearnedNogoodReducible", "link" : "solving\/SingleSolverThreadData.html#deleteLearnedNogoodReducible(reducible:sharedDefs.NogoodReducible,lazyApproach:Boolean):Boolean", "kind" : "def"}, {"label" : "isReducibleDeletable", "tail" : "(reducible: NogoodReducible, checkByReason: Boolean): Boolean", "member" : "solving.SingleSolverThreadData.isReducibleDeletable", "link" : "solving\/SingleSolverThreadData.html#isReducibleDeletable(reducible:sharedDefs.NogoodReducible,checkByReason:Boolean):Boolean", "kind" : "def"}, {"label" : "getApproxNoOfLearnedNogoods", "tail" : "(): Eli", "member" : "solving.SingleSolverThreadData.getApproxNoOfLearnedNogoods", "link" : "solving\/SingleSolverThreadData.html#getApproxNoOfLearnedNogoods:sharedDefs.Eli", "kind" : "def"}, {"label" : "possibleRephasing", "tail" : "(trials: Eli): Boolean", "member" : "solving.SingleSolverThreadData.possibleRephasing", "link" : "solving\/SingleSolverThreadData.html#possibleRephasing(trials:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "decideDoRegularRestart", "tail" : "(): Boolean", "member" : "solving.SingleSolverThreadData.decideDoRegularRestart", "link" : "solving\/SingleSolverThreadData.html#decideDoRegularRestart:Boolean", "kind" : "def"}, {"label" : "lbdema", "tail" : "(): Float", "member" : "solving.SingleSolverThreadData.lbdema", "link" : "solving\/SingleSolverThreadData.html#lbdema:Float", "kind" : "def"}, {"label" : "jumpBack", "tail" : "(newLevel: Eli, trials: Eli): Unit", "member" : "solving.SingleSolverThreadData.jumpBack", "link" : "solving\/SingleSolverThreadData.html#jumpBack(newLevel:sharedDefs.Eli,trials:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "deficientReduciblesForEli", "tail" : ": NogoodReduciblesSequenceUnsafe", "member" : "solving.SingleSolverThreadData.deficientReduciblesForEli", "link" : "solving\/SingleSolverThreadData.html#deficientReduciblesForEli:solving.NogoodReduciblesSequenceUnsafe", "kind" : "var"}, {"label" : "scaleFromUpdSc", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.scaleFromUpdSc", "link" : "solving\/SingleSolverThreadData.html#scaleFromUpdSc:Float", "kind" : "val"}, {"label" : "reduceScoreOfPassiveAbsElisEvery", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.reduceScoreOfPassiveAbsElisEvery", "link" : "solving\/SingleSolverThreadData.html#reduceScoreOfPassiveAbsElisEvery:Int", "kind" : "val"}, {"label" : "nogoodRemovalThreshAdjustConflictCount", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.nogoodRemovalThreshAdjustConflictCount", "link" : "solving\/SingleSolverThreadData.html#nogoodRemovalThreshAdjustConflictCount:sharedDefs.Eli", "kind" : "var"}, {"label" : "nogoodRemovalAdjustNoOfConflicts", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.nogoodRemovalAdjustNoOfConflicts", "link" : "solving\/SingleSolverThreadData.html#nogoodRemovalAdjustNoOfConflicts:Float", "kind" : "var"}, {"label" : "noOfNogoodRemovalPhases", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.noOfNogoodRemovalPhases", "link" : "solving\/SingleSolverThreadData.html#noOfNogoodRemovalPhases:sharedDefs.Eli", "kind" : "var"}, {"label" : "lubyV", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.lubyV", "link" : "solving\/SingleSolverThreadData.html#lubyV:Int", "kind" : "var"}, {"label" : "lubyU", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.lubyU", "link" : "solving\/SingleSolverThreadData.html#lubyU:Int", "kind" : "var"}, {"label" : "noOfConflictsBeforeNextRephasing", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfConflictsBeforeNextRephasing", "link" : "solving\/SingleSolverThreadData.html#noOfConflictsBeforeNextRephasing:Int", "kind" : "var"}, {"label" : "noOfConflictsBeforeRestart", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.noOfConflictsBeforeRestart", "link" : "solving\/SingleSolverThreadData.html#noOfConflictsBeforeRestart:Double", "kind" : "var"}, {"label" : "noOfConflictsBeforeRestartFact", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.noOfConflictsBeforeRestartFact", "link" : "solving\/SingleSolverThreadData.html#noOfConflictsBeforeRestartFact:Double", "kind" : "val"}, {"label" : "conflictAnalysis", "tail" : "(violatedNogoodReducible: NogoodReducible, outSpaceInitial: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.conflictAnalysis", "link" : "solving\/SingleSolverThreadData.html#conflictAnalysis(violatedNogoodReducible:sharedDefs.NogoodReducible,outSpaceInitial:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "conflictAnalysisResult_conflictNogoodReducible", "tail" : ": Long", "member" : "solving.SingleSolverThreadData.conflictAnalysisResult_conflictNogoodReducible", "link" : "solving\/SingleSolverThreadData.html#conflictAnalysisResult_conflictNogoodReducible:Long", "kind" : "var"}, {"label" : "conflictAnalysisResult_sigmaEli", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.conflictAnalysisResult_sigmaEli", "link" : "solving\/SingleSolverThreadData.html#conflictAnalysisResult_sigmaEli:Int", "kind" : "var"}, {"label" : "conflictAnalysisResult_newDecisionLevel", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.conflictAnalysisResult_newDecisionLevel", "link" : "solving\/SingleSolverThreadData.html#conflictAnalysisResult_newDecisionLevel:Int", "kind" : "var"}, {"label" : "scoreUpd", "tail" : "(eli: Eli, bump: Float): Unit", "member" : "solving.SingleSolverThreadData.scoreUpd", "link" : "solving\/SingleSolverThreadData.html#scoreUpd(eli:sharedDefs.Eli,bump:Float):Unit", "kind" : "def"}, {"label" : "setEliWithNogoodUpdatesNoHeap", "tail" : "(eli: Eli, reason: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.setEliWithNogoodUpdatesNoHeap", "link" : "solving\/SingleSolverThreadData.html#setEliWithNogoodUpdatesNoHeap(eli:sharedDefs.Eli,reason:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "setEliWithNogoodUpdatesNoHeapForExtRed5", "tail" : "(recursionDepth: Eli): Unit", "member" : "solving.SingleSolverThreadData.setEliWithNogoodUpdatesNoHeapForExtRed5", "link" : "solving\/SingleSolverThreadData.html#setEliWithNogoodUpdatesNoHeapForExtRed5(recursionDepth:sharedDefs.Eli):Unit", "kind" : "final def"}, {"label" : "setEliWithNogoodUpdatesNoHeapForExtRed2b", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.setEliWithNogoodUpdatesNoHeapForExtRed2b", "link" : "solving\/SingleSolverThreadData.html#setEliWithNogoodUpdatesNoHeapForExtRed2b():Unit", "kind" : "def"}, {"label" : "setEliWithNogoodUpdatesNoHeapForExtRed1b", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.setEliWithNogoodUpdatesNoHeapForExtRed1b", "link" : "solving\/SingleSolverThreadData.html#setEliWithNogoodUpdatesNoHeapForExtRed1b():Unit", "kind" : "final def"}, {"label" : "clearInPass", "tail" : "(eli: Eli, calledWhen: Eli): Unit", "member" : "solving.SingleSolverThreadData.clearInPass", "link" : "solving\/SingleSolverThreadData.html#clearInPass(eli:sharedDefs.Eli,calledWhen:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "setInPassEntry", "tail" : "(eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.setInPassEntry", "link" : "solving\/SingleSolverThreadData.html#setInPassEntry(eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "setInPassIfUnassigned", "tail" : "(eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.setInPassIfUnassigned", "link" : "solving\/SingleSolverThreadData.html#setInPassIfUnassigned(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "setInPassAfterSolvePhase", "tail" : "(eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.setInPassAfterSolvePhase", "link" : "solving\/SingleSolverThreadData.html#setInPassAfterSolvePhase(eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "possiblyRescaleAllAbsElis", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.possiblyRescaleAllAbsElis", "link" : "solving\/SingleSolverThreadData.html#possiblyRescaleAllAbsElis:Unit", "kind" : "def"}, {"label" : "initializeUnassignedScoredAbsElisSetOrPriorityQueue", "tail" : "(beforeSolving: Boolean): Unit", "member" : "solving.SingleSolverThreadData.initializeUnassignedScoredAbsElisSetOrPriorityQueue", "link" : "solving\/SingleSolverThreadData.html#initializeUnassignedScoredAbsElisSetOrPriorityQueue(beforeSolving:Boolean):Unit", "kind" : "def"}, {"label" : "removeFromUnassignedAbsEliBinSet", "tail" : "(absEli: Eli): Unit", "member" : "solving.SingleSolverThreadData.removeFromUnassignedAbsEliBinSet", "link" : "solving\/SingleSolverThreadData.html#removeFromUnassignedAbsEliBinSet(absEli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "addToUnassignedAbsEliBinSet", "tail" : "(absEli: Eli): Unit", "member" : "solving.SingleSolverThreadData.addToUnassignedAbsEliBinSet", "link" : "solving\/SingleSolverThreadData.html#addToUnassignedAbsEliBinSet(absEli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "addToUnassignedAbsEliSet", "tail" : "(absEli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.addToUnassignedAbsEliSet", "link" : "solving\/SingleSolverThreadData.html#addToUnassignedAbsEliSet(absEli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "initializePhaseMemo", "tail" : "(inverse: Boolean): Unit", "member" : "solving.SingleSolverThreadData.initializePhaseMemo", "link" : "solving\/SingleSolverThreadData.html#initializePhaseMemo(inverse:Boolean):Unit", "kind" : "def"}, {"label" : "triviallyUNSAT", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.triviallyUNSAT", "link" : "solving\/SingleSolverThreadData.html#triviallyUNSAT:Boolean", "kind" : "var"}, {"label" : "setupWatchReduciblesForExtReducibles345", "tail" : "(newNogoodReducible: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.setupWatchReduciblesForExtReducibles345", "link" : "solving\/SingleSolverThreadData.html#setupWatchReduciblesForExtReducibles345(newNogoodReducible:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "updScoreInNgElis", "tail" : "(involvedNogoodAddr: NogoodReducible, length: Eli): Float", "member" : "solving.SingleSolverThreadData.updScoreInNgElis", "link" : "solving\/SingleSolverThreadData.html#updScoreInNgElis(involvedNogoodAddr:sharedDefs.NogoodReducible,length:sharedDefs.Eli):Float", "kind" : "def"}, {"label" : "bumpUpEVSIDSscoreOfAbsEliMinimally", "tail" : "(absEli: Eli): Unit", "member" : "solving.SingleSolverThreadData.bumpUpEVSIDSscoreOfAbsEliMinimally", "link" : "solving\/SingleSolverThreadData.html#bumpUpEVSIDSscoreOfAbsEliMinimally(absEli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "bumpUpEVSIDSscoreOfAbsEli", "tail" : "(absEli: Eli, absEliScoreBumpAmount: Float): Unit", "member" : "solving.SingleSolverThreadData.bumpUpEVSIDSscoreOfAbsEli", "link" : "solving\/SingleSolverThreadData.html#bumpUpEVSIDSscoreOfAbsEli(absEli:sharedDefs.Eli,absEliScoreBumpAmount:Float):Unit", "kind" : "def"}, {"label" : "setScoreOfAbsEli", "tail" : "(absEli: Eli, newScoreR: Float, updateInHeap: Boolean): Unit", "member" : "solving.SingleSolverThreadData.setScoreOfAbsEli", "link" : "solving\/SingleSolverThreadData.html#setScoreOfAbsEli(absEli:sharedDefs.Eli,newScoreR:Float,updateInHeap:Boolean):Unit", "kind" : "def"}, {"label" : "updateBinOfAbsEliInUnassignedAbsEliBinSet", "tail" : "(absEli: Eli, newScore: Float): Unit", "member" : "solving.SingleSolverThreadData.updateBinOfAbsEliInUnassignedAbsEliBinSet", "link" : "solving\/SingleSolverThreadData.html#updateBinOfAbsEliInUnassignedAbsEliBinSet(absEli:sharedDefs.Eli,newScore:Float):Unit", "kind" : "def"}, {"label" : "getBinFromScoreForFreeEliSearchApproach15", "tail" : "(score: Double): Int", "member" : "solving.SingleSolverThreadData.getBinFromScoreForFreeEliSearchApproach15", "link" : "solving\/SingleSolverThreadData.html#getBinFromScoreForFreeEliSearchApproach15(score:Double):Int", "kind" : "def"}, {"label" : "generateNogoodReducibleFromNogoodClarkOrSpecial", "tail" : "(nogoodAddr: NogoodReducible, nogoodSize: Eli, beforeSolvingstarted: Boolean): NogoodReducible", "member" : "solving.SingleSolverThreadData.generateNogoodReducibleFromNogoodClarkOrSpecial", "link" : "solving\/SingleSolverThreadData.html#generateNogoodReducibleFromNogoodClarkOrSpecial(nogoodAddr:sharedDefs.NogoodReducible,nogoodSize:sharedDefs.Eli,beforeSolvingstarted:Boolean):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "initializeReducibleBitsetExt4", "tail" : "(addr: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.initializeReducibleBitsetExt4", "link" : "solving\/SingleSolverThreadData.html#initializeReducibleBitsetExt4(addr:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "initializeReducibleBitsetExt35", "tail" : "(addr: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.initializeReducibleBitsetExt35", "link" : "solving\/SingleSolverThreadData.html#initializeReducibleBitsetExt35(addr:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "reserveReducibleSpace", "tail" : "(minimumRequiredReducibleSpaceSizeInNoOfInts: Int): NogoodReducible", "member" : "solving.SingleSolverThreadData.reserveReducibleSpace", "link" : "solving\/SingleSolverThreadData.html#reserveReducibleSpace(minimumRequiredReducibleSpaceSizeInNoOfInts:Int):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "makeNogoodSpaceAvailable", "tail" : "(reducible: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.makeNogoodSpaceAvailable", "link" : "solving\/SingleSolverThreadData.html#makeNogoodSpaceAvailable(reducible:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "findSpaceForLearnedNogoodReducibleForFreeMemoryApproach0", "tail" : "(requiredSize: Int): (NogoodReducible, Int)", "member" : "solving.SingleSolverThreadData.findSpaceForLearnedNogoodReducibleForFreeMemoryApproach0", "link" : "solving\/SingleSolverThreadData.html#findSpaceForLearnedNogoodReducibleForFreeMemoryApproach0(requiredSize:Int):(sharedDefs.NogoodReducible,Int)", "kind" : "def"}, {"label" : "setItemIndicExt2", "tail" : "(addr: NogoodReducible, item: Eli, pivotEliToReducibles: NogoodReduciblesSequenceUnsafe, pivotIndexInReduciblesSeqAddr: Long): Eli", "member" : "solving.SingleSolverThreadData.setItemIndicExt2", "link" : "solving\/SingleSolverThreadData.html#setItemIndicExt2(addr:sharedDefs.NogoodReducible,item:sharedDefs.Eli,pivotEliToReducibles:solving.NogoodReduciblesSequenceUnsafe,pivotIndexInReduciblesSeqAddr:Long):sharedDefs.Eli", "kind" : "def"}, {"label" : "setupNewReducibleForExt1", "tail" : "(newReducible: NogoodReducible, beforeSolvingstarted: Boolean): Unit", "member" : "solving.SingleSolverThreadData.setupNewReducibleForExt1", "link" : "solving\/SingleSolverThreadData.html#setupNewReducibleForExt1(newReducible:sharedDefs.NogoodReducible,beforeSolvingstarted:Boolean):Unit", "kind" : "def"}, {"label" : "setupNewReducibleForExt2", "tail" : "(newReducible: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.setupNewReducibleForExt2", "link" : "solving\/SingleSolverThreadData.html#setupNewReducibleForExt2(newReducible:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "unSetItemExt01", "tail" : "(reducible: NogoodReducible, item: Eli): Unit", "member" : "solving.SingleSolverThreadData.unSetItemExt01", "link" : "solving\/SingleSolverThreadData.html#unSetItemExt01(reducible:sharedDefs.NogoodReducible,item:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "getNogoodReducibleScore", "tail" : "(nogoodReducible: NogoodReducible, scoringForRemovalOfLearnedNogoods: Int): Double", "member" : "solving.SingleSolverThreadData.getNogoodReducibleScore", "link" : "solving\/SingleSolverThreadData.html#getNogoodReducibleScore(nogoodReducible:sharedDefs.NogoodReducible,scoringForRemovalOfLearnedNogoods:Int):Double", "kind" : "def"}, {"label" : "bumpNogoodReducibleActivity", "tail" : "(nogoodReducible: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.bumpNogoodReducibleActivity", "link" : "solving\/SingleSolverThreadData.html#bumpNogoodReducibleActivity(nogoodReducible:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "setLearnedNogoodReducibleActivity", "tail" : "(nogoodReducible: NogoodReducible, newActivity: Float): Unit", "member" : "solving.SingleSolverThreadData.setLearnedNogoodReducibleActivity", "link" : "solving\/SingleSolverThreadData.html#setLearnedNogoodReducibleActivity(nogoodReducible:sharedDefs.NogoodReducible,newActivity:Float):Unit", "kind" : "def"}, {"label" : "getLearnedNogoodReducibleActivity", "tail" : "(nogoodReducible: NogoodReducible): Float", "member" : "solving.SingleSolverThreadData.getLearnedNogoodReducibleActivity", "link" : "solving\/SingleSolverThreadData.html#getLearnedNogoodReducibleActivity(nogoodReducible:sharedDefs.NogoodReducible):Float", "kind" : "def"}, {"label" : "lbdNogoodScore", "tail" : "(nogoodReducible: NogoodReducible): Double", "member" : "solving.SingleSolverThreadData.lbdNogoodScore", "link" : "solving\/SingleSolverThreadData.html#lbdNogoodScore(nogoodReducible:sharedDefs.NogoodReducible):Double", "kind" : "def"}, {"label" : "computeLBD", "tail" : "(nogoodReducible: NogoodReducible): Eli", "member" : "solving.SingleSolverThreadData.computeLBD", "link" : "solving\/SingleSolverThreadData.html#computeLBD(nogoodReducible:sharedDefs.NogoodReducible):sharedDefs.Eli", "kind" : "def"}, {"label" : "absEliBasedNogoodScore", "tail" : "(nogoodReducible: NogoodReducible): Double", "member" : "solving.SingleSolverThreadData.absEliBasedNogoodScore", "link" : "solving\/SingleSolverThreadData.html#absEliBasedNogoodScore(nogoodReducible:sharedDefs.NogoodReducible):Double", "kind" : "def"}, {"label" : "setItemIndicExt1", "tail" : "(addr: NogoodReducible, item: Eli): Eli", "member" : "solving.SingleSolverThreadData.setItemIndicExt1", "link" : "solving\/SingleSolverThreadData.html#setItemIndicExt1(addr:sharedDefs.NogoodReducible,item:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "isClarkReducible", "tail" : "(reducible: NogoodReducible): Boolean", "member" : "solving.SingleSolverThreadData.isClarkReducible", "link" : "solving\/SingleSolverThreadData.html#isClarkReducible(reducible:sharedDefs.NogoodReducible):Boolean", "kind" : "def"}, {"label" : "fillUpW", "tail" : "(addr: NogoodReducible, index: Eli, oldWContent: Eli): Eli", "member" : "solving.SingleSolverThreadData.fillUpW", "link" : "solving\/SingleSolverThreadData.html#fillUpW(addr:sharedDefs.NogoodReducible,index:sharedDefs.Eli,oldWContent:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "findEliInUnitReducibleExt4", "tail" : "(addr: NogoodReducible): Eli", "member" : "solving.SingleSolverThreadData.findEliInUnitReducibleExt4", "link" : "solving\/SingleSolverThreadData.html#findEliInUnitReducibleExt4(addr:sharedDefs.NogoodReducible):sharedDefs.Eli", "kind" : "def"}, {"label" : "findEliInUnitReducibleBitsetExt3", "tail" : "(addr: NogoodReducible, eliInRequiredLong: Eli): Eli", "member" : "solving.SingleSolverThreadData.findEliInUnitReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#findEliInUnitReducibleBitsetExt3(addr:sharedDefs.NogoodReducible,eliInRequiredLong:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "checkUnitReducibleBitsetExt3", "tail" : "(addr: NogoodReducible): Eli", "member" : "solving.SingleSolverThreadData.checkUnitReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#checkUnitReducibleBitsetExt3(addr:sharedDefs.NogoodReducible):sharedDefs.Eli", "kind" : "def"}, {"label" : "isConflictingReducibleBitsetExt3", "tail" : "(addr: NogoodReducible): Boolean", "member" : "solving.SingleSolverThreadData.isConflictingReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#isConflictingReducibleBitsetExt3(addr:sharedDefs.NogoodReducible):Boolean", "kind" : "def"}, {"label" : "increaseLengthInReducibleExt4", "tail" : "(addr: NogoodReducible, eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.increaseLengthInReducibleExt4", "link" : "solving\/SingleSolverThreadData.html#increaseLengthInReducibleExt4(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "reduceLengthInReducibleExt4", "tail" : "(addr: NogoodReducible, eli: Eli): Eli", "member" : "solving.SingleSolverThreadData.reduceLengthInReducibleExt4", "link" : "solving\/SingleSolverThreadData.html#reduceLengthInReducibleExt4(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "setProductForExt5", "tail" : "(addr: NogoodReducible, newProduct: NogoodReducible): Eli", "member" : "solving.SingleSolverThreadData.setProductForExt5", "link" : "solving\/SingleSolverThreadData.html#setProductForExt5(addr:sharedDefs.NogoodReducible,newProduct:sharedDefs.NogoodReducible):sharedDefs.Eli", "kind" : "def"}, {"label" : "unsetBitInReducibleBitsetExt3", "tail" : "(addr: NogoodReducible, eli: Eli): (Eli, Boolean)", "member" : "solving.SingleSolverThreadData.unsetBitInReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#unsetBitInReducibleBitsetExt3(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):(sharedDefs.Eli,Boolean)", "kind" : "def"}, {"label" : "countUnsetsInPassInNogood", "tail" : "(red: NogoodReducible): Eli", "member" : "solving.SingleSolverThreadData.countUnsetsInPassInNogood", "link" : "solving\/SingleSolverThreadData.html#countUnsetsInPassInNogood(red:sharedDefs.NogoodReducible):sharedDefs.Eli", "kind" : "def"}, {"label" : "getUnsetLengthInReducibleBitsetExt3", "tail" : "(addr: NogoodReducible): Eli", "member" : "solving.SingleSolverThreadData.getUnsetLengthInReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#getUnsetLengthInReducibleBitsetExt3(addr:sharedDefs.NogoodReducible):sharedDefs.Eli", "kind" : "def"}, {"label" : "multiplyByFactorOrSetBitInReducibleBitsetExt5", "tail" : "(addr: NogoodReducible, eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.multiplyByFactorOrSetBitInReducibleBitsetExt5", "link" : "solving\/SingleSolverThreadData.html#multiplyByFactorOrSetBitInReducibleBitsetExt5(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "setBitInReducibleBitsetExt3", "tail" : "(addr: NogoodReducible, eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.setBitInReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#setBitInReducibleBitsetExt3(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "isBitSetInReducibleBitsetExt3", "tail" : "(addr: NogoodReducible, eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.isBitSetInReducibleBitsetExt3", "link" : "solving\/SingleSolverThreadData.html#isBitSetInReducibleBitsetExt3(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "printInfoAboutReducible", "tail" : "(addr: NogoodReducible, metaOnly: Boolean): Unit", "member" : "solving.SingleSolverThreadData.printInfoAboutReducible", "link" : "solving\/SingleSolverThreadData.html#printInfoAboutReducible(addr:sharedDefs.NogoodReducible,metaOnly:Boolean):Unit", "kind" : "def"}, {"label" : "nogoodInReducibleToString", "tail" : "(addr: NogoodReducible): String", "member" : "solving.SingleSolverThreadData.nogoodInReducibleToString", "link" : "solving\/SingleSolverThreadData.html#nogoodInReducibleToString(addr:sharedDefs.NogoodReducible):String", "kind" : "def"}, {"label" : "psOfElisInNogoodInReducible", "tail" : "(addr: NogoodReducible): NogoodReducible", "member" : "solving.SingleSolverThreadData.psOfElisInNogoodInReducible", "link" : "solving\/SingleSolverThreadData.html#psOfElisInNogoodInReducible(addr:sharedDefs.NogoodReducible):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "generateRefToNogoodInReducible", "tail" : "(addr: NogoodReducible): NogoodReducible", "member" : "solving.SingleSolverThreadData.generateRefToNogoodInReducible", "link" : "solving\/SingleSolverThreadData.html#generateRefToNogoodInReducible(addr:sharedDefs.NogoodReducible):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "forEachEliInNogood", "tail" : "(addr: NogoodReducible, what: (Eli) => Unit): Unit", "member" : "solving.SingleSolverThreadData.forEachEliInNogood", "link" : "solving\/SingleSolverThreadData.html#forEachEliInNogood(addr:sharedDefs.NogoodReducible,what:sharedDefs.Eli=>Unit):Unit", "kind" : "def"}, {"label" : "intersectionCountNogoodsInReducibles", "tail" : "(red1: NogoodReducible, red2: NogoodReducible): Int", "member" : "solving.SingleSolverThreadData.intersectionCountNogoodsInReducibles", "link" : "solving\/SingleSolverThreadData.html#intersectionCountNogoodsInReducibles(red1:sharedDefs.NogoodReducible,red2:sharedDefs.NogoodReducible):Int", "kind" : "def"}, {"label" : "countInNogoodInReducible", "tail" : "(addr: NogoodReducible, p: (Eli) => Boolean): Eli", "member" : "solving.SingleSolverThreadData.countInNogoodInReducible", "link" : "solving\/SingleSolverThreadData.html#countInNogoodInReducible(addr:sharedDefs.NogoodReducible,p:sharedDefs.Eli=>Boolean):sharedDefs.Eli", "kind" : "def"}, {"label" : "nogoodInReducibleContainsAbs", "tail" : "(addr: NogoodReducible, eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.nogoodInReducibleContainsAbs", "link" : "solving\/SingleSolverThreadData.html#nogoodInReducibleContainsAbs(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "nogoodInReducibleContains", "tail" : "(addr: NogoodReducible, eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.nogoodInReducibleContains", "link" : "solving\/SingleSolverThreadData.html#nogoodInReducibleContains(addr:sharedDefs.NogoodReducible,eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "setLBDInReducible", "tail" : "(addr: NogoodReducible, lbd: Int): Unit", "member" : "solving.SingleSolverThreadData.setLBDInReducible", "link" : "solving\/SingleSolverThreadData.html#setLBDInReducible(addr:sharedDefs.NogoodReducible,lbd:Int):Unit", "kind" : "def"}, {"label" : "getLBDFromReducible", "tail" : "(addr: NogoodReducible): Int", "member" : "solving.SingleSolverThreadData.getLBDFromReducible", "link" : "solving\/SingleSolverThreadData.html#getLBDFromReducible(addr:sharedDefs.NogoodReducible):Int", "kind" : "def"}, {"label" : "setNogoodSizeInReducible", "tail" : "(addr: NogoodReducible, newSize: Int): Unit", "member" : "solving.SingleSolverThreadData.setNogoodSizeInReducible", "link" : "solving\/SingleSolverThreadData.html#setNogoodSizeInReducible(addr:sharedDefs.NogoodReducible,newSize:Int):Unit", "kind" : "def"}, {"label" : "cloneNogoodInReducibleTo", "tail" : "(addr: NogoodReducible, targetArrayUnsafe: IntArrayUnsafeS): Unit", "member" : "solving.SingleSolverThreadData.cloneNogoodInReducibleTo", "link" : "solving\/SingleSolverThreadData.html#cloneNogoodInReducibleTo(addr:sharedDefs.NogoodReducible,targetArrayUnsafe:utils.IntArrayUnsafeS):Unit", "kind" : "def"}, {"label" : "cloneNogoodReducible", "tail" : "(addr: NogoodReducible): NogoodReducible", "member" : "solving.SingleSolverThreadData.cloneNogoodReducible", "link" : "solving\/SingleSolverThreadData.html#cloneNogoodReducible(addr:sharedDefs.NogoodReducible):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "getTotalSizeOfReducibleInBytes", "tail" : "(addr: NogoodReducible): Int", "member" : "solving.SingleSolverThreadData.getTotalSizeOfReducibleInBytes", "link" : "solving\/SingleSolverThreadData.html#getTotalSizeOfReducibleInBytes(addr:sharedDefs.NogoodReducible):Int", "kind" : "def"}, {"label" : "getNogoodSizeFromReducible", "tail" : "(addr: NogoodReducible): Int", "member" : "solving.SingleSolverThreadData.getNogoodSizeFromReducible", "link" : "solving\/SingleSolverThreadData.html#getNogoodSizeFromReducible(addr:sharedDefs.NogoodReducible):Int", "kind" : "def"}, {"label" : "updateEliInNogoodInReducible", "tail" : "(addr: NogoodReducible, eliIndexInNogood: Int, value: Eli): Unit", "member" : "solving.SingleSolverThreadData.updateEliInNogoodInReducible", "link" : "solving\/SingleSolverThreadData.html#updateEliInNogoodInReducible(addr:sharedDefs.NogoodReducible,eliIndexInNogood:Int,value:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "getEliFromNogoodInReducible", "tail" : "(addr: NogoodReducible, eliIndexInNogood: Int): Eli", "member" : "solving.SingleSolverThreadData.getEliFromNogoodInReducible", "link" : "solving\/SingleSolverThreadData.html#getEliFromNogoodInReducible(addr:sharedDefs.NogoodReducible,eliIndexInNogood:Int):sharedDefs.Eli", "kind" : "def"}, {"label" : "getAddrOfNogoodInReducible", "tail" : "(addr: NogoodReducible): NogoodReducible", "member" : "solving.SingleSolverThreadData.getAddrOfNogoodInReducible", "link" : "solving\/SingleSolverThreadData.html#getAddrOfNogoodInReducible(addr:sharedDefs.NogoodReducible):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "updateFloatInReducible", "tail" : "(addr: NogoodReducible, intIndex: Int, value: Float): Unit", "member" : "solving.SingleSolverThreadData.updateFloatInReducible", "link" : "solving\/SingleSolverThreadData.html#updateFloatInReducible(addr:sharedDefs.NogoodReducible,intIndex:Int,value:Float):Unit", "kind" : "def"}, {"label" : "getFloatFromReducible", "tail" : "(addr: NogoodReducible, index: Int): Float", "member" : "solving.SingleSolverThreadData.getFloatFromReducible", "link" : "solving\/SingleSolverThreadData.html#getFloatFromReducible(addr:sharedDefs.NogoodReducible,index:Int):Float", "kind" : "def"}, {"label" : "updateLongInReducible", "tail" : "(addr: NogoodReducible, intIndex: Int, value: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.updateLongInReducible", "link" : "solving\/SingleSolverThreadData.html#updateLongInReducible(addr:sharedDefs.NogoodReducible,intIndex:Int,value:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "getLongFromReducible", "tail" : "(addr: NogoodReducible, intIndex: Int): NogoodReducible", "member" : "solving.SingleSolverThreadData.getLongFromReducible", "link" : "solving\/SingleSolverThreadData.html#getLongFromReducible(addr:sharedDefs.NogoodReducible,intIndex:Int):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "updateIntInReducible", "tail" : "(addr: NogoodReducible, index: Int, value: Int): Unit", "member" : "solving.SingleSolverThreadData.updateIntInReducible", "link" : "solving\/SingleSolverThreadData.html#updateIntInReducible(addr:sharedDefs.NogoodReducible,index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "getIntFromReducible", "tail" : "(addr: NogoodReducible, index: Int): Int", "member" : "solving.SingleSolverThreadData.getIntFromReducible", "link" : "solving\/SingleSolverThreadData.html#getIntFromReducible(addr:sharedDefs.NogoodReducible,index:Int):Int", "kind" : "def"}, {"label" : "setDecisionLevelTo", "tail" : "(newDl: Int): Unit", "member" : "solving.SingleSolverThreadData.setDecisionLevelTo", "link" : "solving\/SingleSolverThreadData.html#setDecisionLevelTo(newDl:Int):Unit", "kind" : "def"}, {"label" : "unassignInPass", "tail" : "(eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.unassignInPass", "link" : "solving\/SingleSolverThreadData.html#unassignInPass(eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "unsetInPass", "tail" : "(eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.unsetInPass", "link" : "solving\/SingleSolverThreadData.html#unsetInPass(eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "setInPass", "tail" : "(eli: Eli): Unit", "member" : "solving.SingleSolverThreadData.setInPass", "link" : "solving\/SingleSolverThreadData.html#setInPass(eli:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "isPosOrNegSetInPass", "tail" : "(eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.isPosOrNegSetInPass", "link" : "solving\/SingleSolverThreadData.html#isPosOrNegSetInPass(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "isNotAbsSetInPass", "tail" : "(eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.isNotAbsSetInPass", "link" : "solving\/SingleSolverThreadData.html#isNotAbsSetInPass(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "isNegSetInPass", "tail" : "(eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.isNegSetInPass", "link" : "solving\/SingleSolverThreadData.html#isNegSetInPass(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "isNotSetInPass", "tail" : "(eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.isNotSetInPass", "link" : "solving\/SingleSolverThreadData.html#isNotSetInPass(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "isSetInPass", "tail" : "(eli: Eli): Boolean", "member" : "solving.SingleSolverThreadData.isSetInPass", "link" : "solving\/SingleSolverThreadData.html#isSetInPass(eli:sharedDefs.Eli):Boolean", "kind" : "def"}, {"label" : "setThreadParams", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.setThreadParams", "link" : "solving\/SingleSolverThreadData.html#setThreadParams():Unit", "kind" : "def"}, {"label" : "nii", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.nii", "link" : "solving\/SingleSolverThreadData.html#nii:Int", "kind" : "var"}, {"label" : "noOfReducibleSpaceRequestsMisses", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfReducibleSpaceRequestsMisses", "link" : "solving\/SingleSolverThreadData.html#noOfReducibleSpaceRequestsMisses:Int", "kind" : "var"}, {"label" : "noOfReducibleSpaceRequests", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfReducibleSpaceRequests", "link" : "solving\/SingleSolverThreadData.html#noOfReducibleSpaceRequests:Int", "kind" : "var"}, {"label" : "nogi", "tail" : ": Nogi", "member" : "solving.SingleSolverThreadData.nogi", "link" : "solving\/SingleSolverThreadData.html#nogi:sharedDefs.Nogi", "kind" : "var"}, {"label" : "noOfSharedNogoods", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfSharedNogoods", "link" : "solving\/SingleSolverThreadData.html#noOfSharedNogoods:Int", "kind" : "var"}, {"label" : "ngActivityCMAn", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.ngActivityCMAn", "link" : "solving\/SingleSolverThreadData.html#ngActivityCMAn:Int", "kind" : "var"}, {"label" : "ngActivityCMA", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.ngActivityCMA", "link" : "solving\/SingleSolverThreadData.html#ngActivityCMA:Float", "kind" : "var"}, {"label" : "thresholdForRemovalOfNogoods", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.thresholdForRemovalOfNogoods", "link" : "solving\/SingleSolverThreadData.html#thresholdForRemovalOfNogoods:Double", "kind" : "var"}, {"label" : "noOfRecycledLearnedNogoodsFromTotal", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfRecycledLearnedNogoodsFromTotal", "link" : "solving\/SingleSolverThreadData.html#noOfRecycledLearnedNogoodsFromTotal:Int", "kind" : "var"}, {"label" : "noOfDeletedLearnedNogoods", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfDeletedLearnedNogoods", "link" : "solving\/SingleSolverThreadData.html#noOfDeletedLearnedNogoods:Int", "kind" : "var"}, {"label" : "noOfCurrentlyKeptLearnedNogoods", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfCurrentlyKeptLearnedNogoods", "link" : "solving\/SingleSolverThreadData.html#noOfCurrentlyKeptLearnedNogoods:Int", "kind" : "var"}, {"label" : "learnedNogoodReduciblesListTotal", "tail" : ": ArrayValExtensibleLongUnsafe", "member" : "solving.SingleSolverThreadData.learnedNogoodReduciblesListTotal", "link" : "solving\/SingleSolverThreadData.html#learnedNogoodReduciblesListTotal:utils.ArrayValExtensibleLongUnsafe", "kind" : "val"}, {"label" : "learnedNogoodReduciblesListCurrent", "tail" : ": ArrayValExtensibleLongUnsafe", "member" : "solving.SingleSolverThreadData.learnedNogoodReduciblesListCurrent", "link" : "solving\/SingleSolverThreadData.html#learnedNogoodReduciblesListCurrent:utils.ArrayValExtensibleLongUnsafe", "kind" : "val"}, {"label" : "hashSetForComputeLBD", "tail" : ": IntOpenHashSet", "member" : "solving.SingleSolverThreadData.hashSetForComputeLBD", "link" : "solving\/SingleSolverThreadData.html#hashSetForComputeLBD:it.unimi.dsi.fastutil.ints.IntOpenHashSet", "kind" : "val"}, {"label" : "alpha", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.alpha", "link" : "solving\/SingleSolverThreadData.html#alpha:Float", "kind" : "var"}, {"label" : "loopNogoodsForEmitClauses", "tail" : ": ObjectArrayList[IntArrayUnsafeS]", "member" : "solving.SingleSolverThreadData.loopNogoodsForEmitClauses", "link" : "solving\/SingleSolverThreadData.html#loopNogoodsForEmitClauses:it.unimi.dsi.fastutil.objects.ObjectArrayList[utils.IntArrayUnsafeS]", "kind" : "val"}, {"label" : "absEliScoreScaleBaseAdaptive", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.absEliScoreScaleBaseAdaptive", "link" : "solving\/SingleSolverThreadData.html#absEliScoreScaleBaseAdaptive:Float", "kind" : "var"}, {"label" : "threadmxBean", "tail" : ": ThreadMXBean", "member" : "solving.SingleSolverThreadData.threadmxBean", "link" : "solving\/SingleSolverThreadData.html#threadmxBean:java.lang.management.ThreadMXBean", "kind" : "val"}, {"label" : "avgNormProgress", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.avgNormProgress", "link" : "solving\/SingleSolverThreadData.html#avgNormProgress:Double", "kind" : "var"}, {"label" : "queueOffHeapGarbageInSingleSolver", "tail" : "(): Unit", "member" : "solving.SingleSolverThreadData.queueOffHeapGarbageInSingleSolver", "link" : "solving\/SingleSolverThreadData.html#queueOffHeapGarbageInSingleSolver:Unit", "kind" : "def"}, {"label" : "fmStackThreadLocal", "tail" : ": ArrayValExtensibleLongUnsafe", "member" : "solving.SingleSolverThreadData.fmStackThreadLocal", "link" : "solving\/SingleSolverThreadData.html#fmStackThreadLocal:utils.ArrayValExtensibleLongUnsafe", "kind" : "val"}, {"label" : "fmStackThreadLocalInitialCapacity", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.fmStackThreadLocalInitialCapacity", "link" : "solving\/SingleSolverThreadData.html#fmStackThreadLocalInitialCapacity:Int", "kind" : "val"}, {"label" : "occupiedNogoodReducibleMemoryMap", "tail" : ": Long2IntRBTreeMap", "member" : "solving.SingleSolverThreadData.occupiedNogoodReducibleMemoryMap", "link" : "solving\/SingleSolverThreadData.html#occupiedNogoodReducibleMemoryMap:it.unimi.dsi.fastutil.longs.Long2IntRBTreeMap", "kind" : "val"}, {"label" : "freeNogoodReducibleMemoryMap", "tail" : ": Int2ObjectRBTreeMap[LongArrayList]", "member" : "solving.SingleSolverThreadData.freeNogoodReducibleMemoryMap", "link" : "solving\/SingleSolverThreadData.html#freeNogoodReducibleMemoryMap:it.unimi.dsi.fastutil.ints.Int2ObjectRBTreeMap[it.unimi.dsi.fastutil.longs.LongArrayList]", "kind" : "val"}, {"label" : "nogoodRemovalThreshAdapted", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.nogoodRemovalThreshAdapted", "link" : "solving\/SingleSolverThreadData.html#nogoodRemovalThreshAdapted:Double", "kind" : "var"}, {"label" : "keptByPreFilterForNogoods", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.keptByPreFilterForNogoods", "link" : "solving\/SingleSolverThreadData.html#keptByPreFilterForNogoods:Int", "kind" : "var"}, {"label" : "omittedByPreFilterForNogoods", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.omittedByPreFilterForNogoods", "link" : "solving\/SingleSolverThreadData.html#omittedByPreFilterForNogoods:Int", "kind" : "var"}, {"label" : "totalAbsEliScoreForDebugging", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.totalAbsEliScoreForDebugging", "link" : "solving\/SingleSolverThreadData.html#totalAbsEliScoreForDebugging:Double", "kind" : "var"}, {"label" : "rescalingsAbsEliScores", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.rescalingsAbsEliScores", "link" : "solving\/SingleSolverThreadData.html#rescalingsAbsEliScores:Int", "kind" : "var"}, {"label" : "scheduleRescaleAbsElis", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.scheduleRescaleAbsElis", "link" : "solving\/SingleSolverThreadData.html#scheduleRescaleAbsElis:Boolean", "kind" : "var"}, {"label" : "noOfRestarts", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfRestarts", "link" : "solving\/SingleSolverThreadData.html#noOfRestarts:Int", "kind" : "var"}, {"label" : "timeOfLastRestartNs", "tail" : ": NogoodReducible", "member" : "solving.SingleSolverThreadData.timeOfLastRestartNs", "link" : "solving\/SingleSolverThreadData.html#timeOfLastRestartNs:sharedDefs.NogoodReducible", "kind" : "var"}, {"label" : "noOfWeakRephasings", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfWeakRephasings", "link" : "solving\/SingleSolverThreadData.html#noOfWeakRephasings:Int", "kind" : "var"}, {"label" : "noOfRephasingsUsingSLS", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfRephasingsUsingSLS", "link" : "solving\/SingleSolverThreadData.html#noOfRephasingsUsingSLS:Int", "kind" : "var"}, {"label" : "noOfRephasings", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfRephasings", "link" : "solving\/SingleSolverThreadData.html#noOfRephasings:Int", "kind" : "var"}, {"label" : "noOfProgressChecks", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfProgressChecks", "link" : "solving\/SingleSolverThreadData.html#noOfProgressChecks:Int", "kind" : "var"}, {"label" : "lbdEmaFast", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.lbdEmaFast", "link" : "solving\/SingleSolverThreadData.html#lbdEmaFast:Double", "kind" : "var"}, {"label" : "lbdEmaSlow", "tail" : ": Double", "member" : "solving.SingleSolverThreadData.lbdEmaSlow", "link" : "solving\/SingleSolverThreadData.html#lbdEmaSlow:Double", "kind" : "var"}, {"label" : "noOfConflictsAfterLastRephasing", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfConflictsAfterLastRephasing", "link" : "solving\/SingleSolverThreadData.html#noOfConflictsAfterLastRephasing:Int", "kind" : "var"}, {"label" : "getNoOfConflictsForERWA", "tail" : "(): Int", "member" : "solving.SingleSolverThreadData.getNoOfConflictsForERWA", "link" : "solving\/SingleSolverThreadData.html#getNoOfConflictsForERWA:Int", "kind" : "def"}, {"label" : "reducibleSlotSizeEnlargementsEMA", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.reducibleSlotSizeEnlargementsEMA", "link" : "solving\/SingleSolverThreadData.html#reducibleSlotSizeEnlargementsEMA:Float", "kind" : "var"}, {"label" : "noOfConflictsAfterRestart", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfConflictsAfterRestart", "link" : "solving\/SingleSolverThreadData.html#noOfConflictsAfterRestart:Int", "kind" : "var"}, {"label" : "noOfConflictsTotal", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfConflictsTotal", "link" : "solving\/SingleSolverThreadData.html#noOfConflictsTotal:Int", "kind" : "var"}, {"label" : "totalNoElisInLearnedNogoods", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.totalNoElisInLearnedNogoods", "link" : "solving\/SingleSolverThreadData.html#totalNoElisInLearnedNogoods:Int", "kind" : "var"}, {"label" : "noOfProgressUpdatesPrinted", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfProgressUpdatesPrinted", "link" : "solving\/SingleSolverThreadData.html#noOfProgressUpdatesPrinted:Int", "kind" : "var"}, {"label" : "avgNoPropagationsPerSecond", "tail" : ": NogoodReducible", "member" : "solving.SingleSolverThreadData.avgNoPropagationsPerSecond", "link" : "solving\/SingleSolverThreadData.html#avgNoPropagationsPerSecond:sharedDefs.NogoodReducible", "kind" : "var"}, {"label" : "noOfPropagationsSinceLastProgressPrinted", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfPropagationsSinceLastProgressPrinted", "link" : "solving\/SingleSolverThreadData.html#noOfPropagationsSinceLastProgressPrinted:Int", "kind" : "var"}, {"label" : "timeAtLastProgressPrintedNs", "tail" : ": NogoodReducible", "member" : "solving.SingleSolverThreadData.timeAtLastProgressPrintedNs", "link" : "solving\/SingleSolverThreadData.html#timeAtLastProgressPrintedNs:sharedDefs.NogoodReducible", "kind" : "var"}, {"label" : "violatedNogoodReducible", "tail" : ": NogoodReducible", "member" : "solving.SingleSolverThreadData.violatedNogoodReducible", "link" : "solving\/SingleSolverThreadData.html#violatedNogoodReducible:sharedDefs.NogoodReducible", "kind" : "var"}, {"label" : "dl", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.dl", "link" : "solving\/SingleSolverThreadData.html#dl:Int", "kind" : "var"}, {"label" : "orderNumber", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.orderNumber", "link" : "solving\/SingleSolverThreadData.html#orderNumber:Int", "kind" : "var"}, {"label" : "dtaIndexOfMaxScoredInUnassignedAbsEliSet", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.dtaIndexOfMaxScoredInUnassignedAbsEliSet", "link" : "solving\/SingleSolverThreadData.html#dtaIndexOfMaxScoredInUnassignedAbsEliSet:Int", "kind" : "var"}, {"label" : "helperReducibleBuffer", "tail" : ": IntArrayUnsafeS", "member" : "solving.SingleSolverThreadData.helperReducibleBuffer", "link" : "solving\/SingleSolverThreadData.html#helperReducibleBuffer:utils.IntArrayUnsafeS", "kind" : "val"}, {"label" : "helperReducibleBufferMaxSize", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.helperReducibleBufferMaxSize", "link" : "solving\/SingleSolverThreadData.html#helperReducibleBufferMaxSize:Int", "kind" : "val"}, {"label" : "absElisSeqArranged", "tail" : ": IntArrayUnsafeS", "member" : "solving.SingleSolverThreadData.absElisSeqArranged", "link" : "solving\/SingleSolverThreadData.html#absElisSeqArranged:utils.IntArrayUnsafeS", "kind" : "val"}, {"label" : "unassignedAbsEliBinSet", "tail" : ": Array[DualIndexedIntSet]", "member" : "solving.SingleSolverThreadData.unassignedAbsEliBinSet", "link" : "solving\/SingleSolverThreadData.html#unassignedAbsEliBinSet:Array[utils.DualIndexedIntSet]", "kind" : "val"}, {"label" : "unassignedAbsEliSet", "tail" : ": DualIndexedIntSet", "member" : "solving.SingleSolverThreadData.unassignedAbsEliSet", "link" : "solving\/SingleSolverThreadData.html#unassignedAbsEliSet:utils.DualIndexedIntSet", "kind" : "var"}, {"label" : "unassignedScoredAbsElisPriorityQueue", "tail" : ": AbsElisPriorityQueue", "member" : "solving.SingleSolverThreadData.unassignedScoredAbsElisPriorityQueue", "link" : "solving\/SingleSolverThreadData.html#unassignedScoredAbsElisPriorityQueue:SingleSolverThreadData.this.AbsElisPriorityQueue", "kind" : "val"}, {"label" : "unassignedScoredAbsEliTreeSet", "tail" : ": IntRBTreeSet", "member" : "solving.SingleSolverThreadData.unassignedScoredAbsEliTreeSet", "link" : "solving\/SingleSolverThreadData.html#unassignedScoredAbsEliTreeSet:it.unimi.dsi.fastutil.ints.IntRBTreeSet", "kind" : "val"}, {"label" : "AbsElisPriorityQueue", "tail" : "", "member" : "solving.SingleSolverThreadData.AbsElisPriorityQueue", "link" : "solving\/SingleSolverThreadData.html#AbsElisPriorityQueueextendsIntHeapIndirectPriorityQueue", "kind" : "class"}, {"label" : "absEliComparator", "tail" : ": IntComparator", "member" : "solving.SingleSolverThreadData.absEliComparator", "link" : "solving\/SingleSolverThreadData.html#absEliComparator:it.unimi.dsi.fastutil.ints.IntComparator", "kind" : "val"}, {"label" : "getReasonedAbsEli", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.getReasonedAbsEli", "link" : "solving\/SingleSolverThreadData.html#getReasonedAbsEli(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "incReasonedAbsEli", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.incReasonedAbsEli", "link" : "solving\/SingleSolverThreadData.html#incReasonedAbsEli(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "updateReasonedAbsEli", "tail" : "(absEli: Eli, newValue: Int): Unit", "member" : "solving.SingleSolverThreadData.updateReasonedAbsEli", "link" : "solving\/SingleSolverThreadData.html#updateReasonedAbsEli(absEli:sharedDefs.Eli,newValue:Int):Unit", "kind" : "def"}, {"label" : "getConflictsAtDecisionLevel", "tail" : "(decLevel: Int): Eli", "member" : "solving.SingleSolverThreadData.getConflictsAtDecisionLevel", "link" : "solving\/SingleSolverThreadData.html#getConflictsAtDecisionLevel(decLevel:Int):sharedDefs.Eli", "kind" : "def"}, {"label" : "updateConflictsAtDecisionLevel", "tail" : "(decLevel: Int, newValue: Int): Unit", "member" : "solving.SingleSolverThreadData.updateConflictsAtDecisionLevel", "link" : "solving\/SingleSolverThreadData.html#updateConflictsAtDecisionLevel(decLevel:Int,newValue:Int):Unit", "kind" : "def"}, {"label" : "getDecisionAbsEliSeqForRTR", "tail" : "(decLevel: Int): Eli", "member" : "solving.SingleSolverThreadData.getDecisionAbsEliSeqForRTR", "link" : "solving\/SingleSolverThreadData.html#getDecisionAbsEliSeqForRTR(decLevel:Int):sharedDefs.Eli", "kind" : "def"}, {"label" : "updateDecisionAbsEliSeqForRTR", "tail" : "(decLevel: Int, newValue: Eli): Unit", "member" : "solving.SingleSolverThreadData.updateDecisionAbsEliSeqForRTR", "link" : "solving\/SingleSolverThreadData.html#updateDecisionAbsEliSeqForRTR(decLevel:Int,newValue:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "incAbsEliScoreUpdates", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.incAbsEliScoreUpdates", "link" : "solving\/SingleSolverThreadData.html#incAbsEliScoreUpdates(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "getParticipatedAbsEli", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.getParticipatedAbsEli", "link" : "solving\/SingleSolverThreadData.html#getParticipatedAbsEli(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "incParticipatedAbsEli", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.incParticipatedAbsEli", "link" : "solving\/SingleSolverThreadData.html#incParticipatedAbsEli(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "updateParticipatedAbsEli", "tail" : "(absEli: Eli, newValue: Eli): Unit", "member" : "solving.SingleSolverThreadData.updateParticipatedAbsEli", "link" : "solving\/SingleSolverThreadData.html#updateParticipatedAbsEli(absEli:sharedDefs.Eli,newValue:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "getLastConflictOfAbsEli", "tail" : "(absEli: Eli): Eli", "member" : "solving.SingleSolverThreadData.getLastConflictOfAbsEli", "link" : "solving\/SingleSolverThreadData.html#getLastConflictOfAbsEli(absEli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "updateLastConflictOfAbsEli", "tail" : "(absEli: Eli, newValue: Eli): Unit", "member" : "solving.SingleSolverThreadData.updateLastConflictOfAbsEli", "link" : "solving\/SingleSolverThreadData.html#updateLastConflictOfAbsEli(absEli:sharedDefs.Eli,newValue:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "updateAbsEliScore", "tail" : "(absEli: Eli, newScore: Double): Unit", "member" : "solving.SingleSolverThreadData.updateAbsEliScore", "link" : "solving\/SingleSolverThreadData.html#updateAbsEliScore(absEli:sharedDefs.Eli,newScore:Double):Unit", "kind" : "def"}, {"label" : "getAbsEliScore", "tail" : "(absEli: Eli): Float", "member" : "solving.SingleSolverThreadData.getAbsEliScore", "link" : "solving\/SingleSolverThreadData.html#getAbsEliScore(absEli:sharedDefs.Eli):Float", "kind" : "def"}, {"label" : "updateAbsEliToDl", "tail" : "(eli: Eli, dl: Eli): Unit", "member" : "solving.SingleSolverThreadData.updateAbsEliToDl", "link" : "solving\/SingleSolverThreadData.html#updateAbsEliToDl(eli:sharedDefs.Eli,dl:sharedDefs.Eli):Unit", "kind" : "def"}, {"label" : "decisionLevelOfEli", "tail" : "(eli: Eli): Eli", "member" : "solving.SingleSolverThreadData.decisionLevelOfEli", "link" : "solving\/SingleSolverThreadData.html#decisionLevelOfEli(eli:sharedDefs.Eli):sharedDefs.Eli", "kind" : "def"}, {"label" : "getReasonOfEli", "tail" : "(eli: Eli): NogoodReducible", "member" : "solving.SingleSolverThreadData.getReasonOfEli", "link" : "solving\/SingleSolverThreadData.html#getReasonOfEli(eli:sharedDefs.Eli):sharedDefs.NogoodReducible", "kind" : "def"}, {"label" : "updateReasonOfEli", "tail" : "(eli: Eli, reason: NogoodReducible): Unit", "member" : "solving.SingleSolverThreadData.updateReasonOfEli", "link" : "solving\/SingleSolverThreadData.html#updateReasonOfEli(eli:sharedDefs.Eli,reason:sharedDefs.NogoodReducible):Unit", "kind" : "def"}, {"label" : "getFromPhasePreviousForAbsElis", "tail" : "(absEli: Eli): Byte", "member" : "solving.SingleSolverThreadData.getFromPhasePreviousForAbsElis", "link" : "solving\/SingleSolverThreadData.html#getFromPhasePreviousForAbsElis(absEli:sharedDefs.Eli):Byte", "kind" : "def"}, {"label" : "updateInPhasePreviousForAbsElis", "tail" : "(absEli: Eli, newValue: Byte): Unit", "member" : "solving.SingleSolverThreadData.updateInPhasePreviousForAbsElis", "link" : "solving\/SingleSolverThreadData.html#updateInPhasePreviousForAbsElis(absEli:sharedDefs.Eli,newValue:Byte):Unit", "kind" : "def"}, {"label" : "getFromSeen", "tail" : "(absEli: Eli): Byte", "member" : "solving.SingleSolverThreadData.getFromSeen", "link" : "solving\/SingleSolverThreadData.html#getFromSeen(absEli:sharedDefs.Eli):Byte", "kind" : "def"}, {"label" : "updateInSeen", "tail" : "(absEli: Eli, newValue: Byte): Unit", "member" : "solving.SingleSolverThreadData.updateInSeen", "link" : "solving\/SingleSolverThreadData.html#updateInSeen(absEli:sharedDefs.Eli,newValue:Byte):Unit", "kind" : "def"}, {"label" : "varsSpace", "tail" : ": Long", "member" : "solving.SingleSolverThreadData.varsSpace", "link" : "solving\/SingleSolverThreadData.html#varsSpace:Long", "kind" : "val"}, {"label" : "varsSpace_", "tail" : ": Long", "member" : "solving.SingleSolverThreadData.varsSpace_", "link" : "solving\/SingleSolverThreadData.html#varsSpace_:Long", "kind" : "var"}, {"label" : "sizeVarsSpace_", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.sizeVarsSpace_", "link" : "solving\/SingleSolverThreadData.html#sizeVarsSpace_:Int", "kind" : "val"}, {"label" : "alignmentVarsSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.alignmentVarsSpace", "link" : "solving\/SingleSolverThreadData.html#alignmentVarsSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForConflictsAtDecisionLevel", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForConflictsAtDecisionLevel", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForConflictsAtDecisionLevel:Int", "kind" : "val"}, {"label" : "offsetInBytesForDecisionAbsEliSeqForRTR", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForDecisionAbsEliSeqForRTR", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForDecisionAbsEliSeqForRTR:Int", "kind" : "val"}, {"label" : "offsetInBytesForSeenInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForSeenInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForSeenInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForPhasePreviousForAbsElisInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForPhasePreviousForAbsElisInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForPhasePreviousForAbsElisInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForDecisionLevelInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForDecisionLevelInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForDecisionLevelInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForParticipatedAbsEliInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForParticipatedAbsEliInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForParticipatedAbsEliInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForLastConflictOfAbsEliInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForLastConflictOfAbsEliInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForLastConflictOfAbsEliInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForAbsEliScoreUpdatesInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForAbsEliScoreUpdatesInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForAbsEliScoreUpdatesInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForAbsEliScoreInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForAbsEliScoreInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForAbsEliScoreInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForReasonInVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForReasonInVarSpace", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForReasonInVarSpace:Int", "kind" : "val"}, {"label" : "offsetInBytesForReasonedAbsEli", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.offsetInBytesForReasonedAbsEli", "link" : "solving\/SingleSolverThreadData.html#offsetInBytesForReasonedAbsEli:Int", "kind" : "val"}, {"label" : "noOfBytesVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.noOfBytesVarSpace", "link" : "solving\/SingleSolverThreadData.html#noOfBytesVarSpace:Int", "kind" : "val"}, {"label" : "powerOf2ForNoOfBytesPerVarSpace", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.powerOf2ForNoOfBytesPerVarSpace", "link" : "solving\/SingleSolverThreadData.html#powerOf2ForNoOfBytesPerVarSpace:Int", "kind" : "val"}, {"label" : "updateInlPass", "tail" : "(eli: Eli, value: Byte): Unit", "member" : "solving.SingleSolverThreadData.updateInlPass", "link" : "solving\/SingleSolverThreadData.html#updateInlPass(eli:sharedDefs.Eli,value:Byte):Unit", "kind" : "def"}, {"label" : "getFromlPass", "tail" : "(eli: Eli): Int", "member" : "solving.SingleSolverThreadData.getFromlPass", "link" : "solving\/SingleSolverThreadData.html#getFromlPass(eli:sharedDefs.Eli):Int", "kind" : "def"}, {"label" : "lPassBoundary", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.lPassBoundary", "link" : "solving\/SingleSolverThreadData.html#lPassBoundary:Int", "kind" : "val"}, {"label" : "lPass", "tail" : ": ByteArrayUnsafeS", "member" : "solving.SingleSolverThreadData.lPass", "link" : "solving\/SingleSolverThreadData.html#lPass:utils.ByteArrayUnsafeS", "kind" : "val"}, {"label" : "absEli", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.absEli", "link" : "solving\/SingleSolverThreadData.html#absEli:Int", "kind" : "var"}, {"label" : "getEstimatedNoOfNogoodsPerAbsEli", "tail" : "(absEli: Eli, forFull: Boolean): Eli", "member" : "solving.SingleSolverThreadData.getEstimatedNoOfNogoodsPerAbsEli", "link" : "solving\/SingleSolverThreadData.html#getEstimatedNoOfNogoodsPerAbsEli(absEli:sharedDefs.Eli,forFull:Boolean):sharedDefs.Eli", "kind" : "def"}, {"label" : "eliToReduciblesDeficitResto", "tail" : ": Array[NogoodReduciblesSequenceUnsafe]", "member" : "solving.SingleSolverThreadData.eliToReduciblesDeficitResto", "link" : "solving\/SingleSolverThreadData.html#eliToReduciblesDeficitResto:Array[solving.NogoodReduciblesSequenceUnsafe]", "kind" : "val"}, {"label" : "eliToReduciblesClark", "tail" : ": Array[NogoodReduciblesSequenceUnsafe]", "member" : "solving.SingleSolverThreadData.eliToReduciblesClark", "link" : "solving\/SingleSolverThreadData.html#eliToReduciblesClark:Array[solving.NogoodReduciblesSequenceUnsafe]", "kind" : "val"}, {"label" : "eliWatchedToReducibles", "tail" : ": Array[NogoodReduciblesSequenceUnsafe]", "member" : "solving.SingleSolverThreadData.eliWatchedToReducibles", "link" : "solving\/SingleSolverThreadData.html#eliWatchedToReducibles:Array[solving.NogoodReduciblesSequenceUnsafe]", "kind" : "val"}, {"label" : "reasonsForRmiStoreForNoHeap", "tail" : ": LongArrayUnsafeS", "member" : "solving.SingleSolverThreadData.reasonsForRmiStoreForNoHeap", "link" : "solving\/SingleSolverThreadData.html#reasonsForRmiStoreForNoHeap:utils.LongArrayUnsafeS", "kind" : "val"}, {"label" : "ri", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.ri", "link" : "solving\/SingleSolverThreadData.html#ri:Int", "kind" : "var"}, {"label" : "rmiStorePosOld", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.rmiStorePosOld", "link" : "solving\/SingleSolverThreadData.html#rmiStorePosOld:sharedDefs.Eli", "kind" : "var"}, {"label" : "rmiStorePos", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.rmiStorePos", "link" : "solving\/SingleSolverThreadData.html#rmiStorePos:sharedDefs.Eli", "kind" : "var"}, {"label" : "rmiStoreG", "tail" : ": IntArrayUnsafeS", "member" : "solving.SingleSolverThreadData.rmiStoreG", "link" : "solving\/SingleSolverThreadData.html#rmiStoreG:utils.IntArrayUnsafeS", "kind" : "var"}, {"label" : "maxBCPPush", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.maxBCPPush", "link" : "solving\/SingleSolverThreadData.html#maxBCPPush:sharedDefs.Eli", "kind" : "var"}, {"label" : "ignoreParamVariables", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.ignoreParamVariables", "link" : "solving\/SingleSolverThreadData.html#ignoreParamVariables:Boolean", "kind" : "val"}, {"label" : "deficitOrderedUncertainLiteralsHalf", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.deficitOrderedUncertainLiteralsHalf", "link" : "solving\/SingleSolverThreadData.html#deficitOrderedUncertainLiteralsHalf:sharedDefs.Eli", "kind" : "val"}, {"label" : "usedUpInLevel", "tail" : ": IntArrayUnsafeS", "member" : "solving.SingleSolverThreadData.usedUpInLevel", "link" : "solving\/SingleSolverThreadData.html#usedUpInLevel:utils.IntArrayUnsafeS", "kind" : "val"}, {"label" : "nogiClarkToNogoodReducible", "tail" : ": LongArrayUnsafeS", "member" : "solving.SingleSolverThreadData.nogiClarkToNogoodReducible", "link" : "solving\/SingleSolverThreadData.html#nogiClarkToNogoodReducible:utils.LongArrayUnsafeS", "kind" : "val"}, {"label" : "allViolatedNogoodsSoFarInSLS", "tail" : ": RandomLongSet", "member" : "solving.SingleSolverThreadData.allViolatedNogoodsSoFarInSLS", "link" : "solving\/SingleSolverThreadData.html#allViolatedNogoodsSoFarInSLS:utils.RandomLongSet", "kind" : "val"}, {"label" : "violatedNogoodsInSLS", "tail" : ": RandomLongSet", "member" : "solving.SingleSolverThreadData.violatedNogoodsInSLS", "link" : "solving\/SingleSolverThreadData.html#violatedNogoodsInSLS:utils.RandomLongSet", "kind" : "val"}, {"label" : "bestPhasesQueue", "tail" : ": FiniteQueue[ByteArrayUnsafeS]", "member" : "solving.SingleSolverThreadData.bestPhasesQueue", "link" : "solving\/SingleSolverThreadData.html#bestPhasesQueue:utils.FiniteQueue[utils.ByteArrayUnsafeS]", "kind" : "val"}, {"label" : "absEliClusteredLocal", "tail" : ": Array[Array[Eli]]", "member" : "solving.SingleSolverThreadData.absEliClusteredLocal", "link" : "solving\/SingleSolverThreadData.html#absEliClusteredLocal:Array[Array[sharedDefs.Eli]]", "kind" : "val"}, {"label" : "playStackStartOrderNumber", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.playStackStartOrderNumber", "link" : "solving\/SingleSolverThreadData.html#playStackStartOrderNumber:Int", "kind" : "var"}, {"label" : "allowSwitchFreeEliSearchApproach", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.allowSwitchFreeEliSearchApproach", "link" : "solving\/SingleSolverThreadData.html#allowSwitchFreeEliSearchApproach:Boolean", "kind" : "val"}, {"label" : "useLBD", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.useLBD", "link" : "solving\/SingleSolverThreadData.html#useLBD:Boolean", "kind" : "var"}, {"label" : "scoringForRemovalOfLearnedNogoods", "tail" : ": Eli", "member" : "solving.SingleSolverThreadData.scoringForRemovalOfLearnedNogoods", "link" : "solving\/SingleSolverThreadData.html#scoringForRemovalOfLearnedNogoods:sharedDefs.Eli", "kind" : "val"}, {"label" : "enforceLBDemaComputation", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.enforceLBDemaComputation", "link" : "solving\/SingleSolverThreadData.html#enforceLBDemaComputation:Boolean", "kind" : "var"}, {"label" : "forceRestart", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.forceRestart", "link" : "solving\/SingleSolverThreadData.html#forceRestart:Boolean", "kind" : "var"}, {"label" : "reusedTrailRestarts", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.reusedTrailRestarts", "link" : "solving\/SingleSolverThreadData.html#reusedTrailRestarts:Boolean", "kind" : "val"}, {"label" : "freeEliSearchApproach11or14or15", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.freeEliSearchApproach11or14or15", "link" : "solving\/SingleSolverThreadData.html#freeEliSearchApproach11or14or15:Boolean", "kind" : "val"}, {"label" : "glucoseRestarts", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.glucoseRestarts", "link" : "solving\/SingleSolverThreadData.html#glucoseRestarts:Boolean", "kind" : "val"}, {"label" : "useSLSinPhaseMemoRephasing", "tail" : ": Boolean", "member" : "solving.SingleSolverThreadData.useSLSinPhaseMemoRephasing", "link" : "solving\/SingleSolverThreadData.html#useSLSinPhaseMemoRephasing:Boolean", "kind" : "val"}, {"label" : "restartsFactModifier", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.restartsFactModifier", "link" : "solving\/SingleSolverThreadData.html#restartsFactModifier:Float", "kind" : "val"}, {"label" : "restartTriggerConf", "tail" : ": (Int, Int, Double)", "member" : "solving.SingleSolverThreadData.restartTriggerConf", "link" : "solving\/SingleSolverThreadData.html#restartTriggerConf:(Int,Int,Double)", "kind" : "val"}, {"label" : "sccCache", "tail" : ": HashMap[Seq[Eli], ArrayBuffer[ArrayBuffer[Eli]]]", "member" : "solving.SingleSolverThreadData.sccCache", "link" : "solving\/SingleSolverThreadData.html#sccCache:scala.collection.mutable.HashMap[scala.collection.mutable.Seq[sharedDefs.Eli],scala.collection.mutable.ArrayBuffer[scala.collection.mutable.ArrayBuffer[sharedDefs.Eli]]]", "kind" : "val"}, {"label" : "rndmBranchProb", "tail" : ": Float", "member" : "solving.SingleSolverThreadData.rndmBranchProb", "link" : "solving\/SingleSolverThreadData.html#rndmBranchProb:Float", "kind" : "var"}, {"label" : "rngLocal", "tail" : ": RandomGenSuperclass", "member" : "solving.SingleSolverThreadData.rngLocal", "link" : "solving\/SingleSolverThreadData.html#rngLocal:sharedDefs.RandomGenSuperclass", "kind" : "val"}, {"label" : "solverTimer", "tail" : ": Long", "member" : "solving.SingleSolverThreadData.solverTimer", "link" : "solving\/SingleSolverThreadData.html#solverTimer:Long", "kind" : "val"}, {"label" : "minUnassignedThisThread", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.minUnassignedThisThread", "link" : "solving\/SingleSolverThreadData.html#minUnassignedThisThread:Int", "kind" : "var"}, {"label" : "workingReducibleSizeInConflictAnalysisAutoValueInNoOfInts", "tail" : ": Int", "member" : "solving.SingleSolverThreadData.workingReducibleSizeInConflictAnalysisAutoValueInNoOfInts", "link" : "solving\/SingleSolverThreadData.html#workingReducibleSizeInConflictAnalysisAutoValueInNoOfInts:Int", "kind" : "var"}, {"member" : "solving.SingleSolverThreadData#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/SingleSolverThreadData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/SingleSolverThreadData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/SingleSolverThreadData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/SingleSolverThreadData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/SingleSolverThreadData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/SingleSolverThreadData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/SingleSolverThreadData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SingleSolverThreadData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SingleSolverThreadData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SingleSolverThreadData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/SingleSolverThreadData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/SingleSolverThreadData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "solving\/SingleSolverThreadData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/SingleSolverThreadData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "solving\/SingleSolverThreadData.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "solving\/SingleSolverThreadData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/SingleSolverThreadData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/SingleSolverThreadData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/SingleSolverThreadData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "solving\/SingleSolverThreadData.html", "kind" : "class"}, {"name" : "solving.SolverMulti", "shortDescription" : "Main multimodel solver and propositional model sampling class.", "members_class" : [{"label" : "sampleSingleRacing", "tail" : "(collectOffHeapGarbage: Boolean, maxSamplingTimeMs: Long, reentrySingleSolverThreadDataOpt: Option[SingleSolverThreadData]): (Option[(Array[Eli], IntOpenHashSet)], Option[SingleSolverThreadData])", "member" : "solving.SolverMulti.sampleSingleRacing", "link" : "solving\/SolverMulti.html#sampleSingleRacing(collectOffHeapGarbage:Boolean,maxSamplingTimeMs:Long,reentrySingleSolverThreadDataOpt:Option[solving.SingleSolverThreadData]):(Option[(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet)],Option[solving.SingleSolverThreadData])", "kind" : "def"}, {"label" : "offHeapGarbageCollectionFreeGarbage", "tail" : "(): Unit", "member" : "solving.SolverMulti.offHeapGarbageCollectionFreeGarbage", "link" : "solving\/SolverMulti.html#offHeapGarbageCollectionFreeGarbage:Unit", "kind" : "def"}, {"label" : "sampleMulti", "tail" : "(sampleMultiConf: SampleMultiModelsConf): SamplingResult", "member" : "solving.SolverMulti.sampleMulti", "link" : "solving\/SolverMulti.html#sampleMulti(sampleMultiConf:SolverMulti.this.SampleMultiModelsConf):solving.SamplingResult", "kind" : "def"}, {"label" : "updateMeasuredAtomsFreqsAndComputeCost", "tail" : "(mOpt: Option[IntOpenHashSet], measuredAtomElis: Array[Eli], sampledModels: ArrayBuffer[(Array[Eli], IntOpenHashSet)], costFctsInner: Array[DifferentialFunction[DoubleReal]], fromScratch: Boolean, computeCosts: Boolean): Option[(Double, Array[Double])]", "member" : "solving.SolverMulti.updateMeasuredAtomsFreqsAndComputeCost", "link" : "solving\/SolverMulti.html#updateMeasuredAtomsFreqsAndComputeCost(mOpt:Option[it.unimi.dsi.fastutil.ints.IntOpenHashSet],measuredAtomElis:Array[sharedDefs.Eli],sampledModels:scala.collection.mutable.ArrayBuffer[(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet)],costFctsInner:Array[com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]],fromScratch:Boolean,computeCosts:Boolean):Option[(Double,Array[Double])]", "kind" : "def"}, {"label" : "predictTotalCostWithHypotheticalModel", "tail" : "(newModel: IntOpenHashSet, measuredAtomElis: Array[Eli]): Double", "member" : "solving.SolverMulti.predictTotalCostWithHypotheticalModel", "link" : "solving\/SolverMulti.html#predictTotalCostWithHypotheticalModel(newModel:it.unimi.dsi.fastutil.ints.IntOpenHashSet,measuredAtomElis:Array[sharedDefs.Eli]):Double", "kind" : "def"}, {"label" : "tempUpdMeasuredAtomsFreqs", "tail" : "(appending: Boolean, newModel: IntOpenHashSet, measuredAtomElis: Array[Eli], modelsCount: Int): Unit", "member" : "solving.SolverMulti.tempUpdMeasuredAtomsFreqs", "link" : "solving\/SolverMulti.html#tempUpdMeasuredAtomsFreqs(appending:Boolean,newModel:it.unimi.dsi.fastutil.ints.IntOpenHashSet,measuredAtomElis:Array[sharedDefs.Eli],modelsCount:Int):Unit", "kind" : "def"}, {"label" : "updateAtomsFreqs", "tail" : "(mOpt: Option[IntOpenHashSet], measuredAtomElis: Array[Eli], sampledModels: ArrayBuffer[(Array[Eli], IntOpenHashSet)], fromScratch: Boolean): Unit", "member" : "solving.SolverMulti.updateAtomsFreqs", "link" : "solving\/SolverMulti.html#updateAtomsFreqs(mOpt:Option[it.unimi.dsi.fastutil.ints.IntOpenHashSet],measuredAtomElis:Array[sharedDefs.Eli],sampledModels:scala.collection.mutable.ArrayBuffer[(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet)],fromScratch:Boolean):Unit", "kind" : "def"}, {"label" : "currentCosts", "tail" : "(costFctsInner: Array[DifferentialFunction[DoubleReal]]): (Double, Array[Double])", "member" : "solving.SolverMulti.currentCosts", "link" : "solving\/SolverMulti.html#currentCosts(costFctsInner:Array[com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]]):(Double,Array[Double])", "kind" : "def"}, {"label" : "uncertainAtomsUpdateExecutorService", "tail" : ": ThreadPoolExecutor", "member" : "solving.SolverMulti.uncertainAtomsUpdateExecutorService", "link" : "solving\/SolverMulti.html#uncertainAtomsUpdateExecutorService:java.util.concurrent.ThreadPoolExecutor", "kind" : "val"}, {"label" : "optimalSingleSolverConfOpt", "tail" : ": Option[SolverThreadSpecificSettings]", "member" : "solving.SolverMulti.optimalSingleSolverConfOpt", "link" : "solving\/SolverMulti.html#optimalSingleSolverConfOpt:Option[solving.SolverThreadSpecificSettings]", "kind" : "var"}, {"label" : "threadConfs", "tail" : ": Array[SolverThreadSpecificSettings]", "member" : "solving.SolverMulti.threadConfs", "link" : "solving\/SolverMulti.html#threadConfs:Array[solving.SolverThreadSpecificSettings]", "kind" : "val"}, {"label" : "maxCompetingSolverThreads", "tail" : ": Int", "member" : "solving.SolverMulti.maxCompetingSolverThreads", "link" : "solving\/SolverMulti.html#maxCompetingSolverThreads:Int", "kind" : "var"}, {"label" : "sampledModels", "tail" : ": ArrayBuffer[(Array[Eli], IntOpenHashSet)]", "member" : "solving.SolverMulti.sampledModels", "link" : "solving\/SolverMulti.html#sampledModels:scala.collection.mutable.ArrayBuffer[(Array[sharedDefs.Eli],it.unimi.dsi.fastutil.ints.IntOpenHashSet)]", "kind" : "val"}, {"label" : "parallelBCPThreadPool", "tail" : ": ExecutorService", "member" : "solving.SolverMulti.parallelBCPThreadPool", "link" : "solving\/SolverMulti.html#parallelBCPThreadPool:java.util.concurrent.ExecutorService", "kind" : "val"}, {"label" : "localSingleSamplerThreadPool", "tail" : ": ThreadPoolExecutor", "member" : "solving.SolverMulti.localSingleSamplerThreadPool", "link" : "solving\/SolverMulti.html#localSingleSamplerThreadPool:java.util.concurrent.ThreadPoolExecutor", "kind" : "val"}, {"label" : "SampleMultiModelsConf", "tail" : "", "member" : "solving.SolverMulti.SampleMultiModelsConf", "link" : "solving\/SolverMulti.html#SampleMultiModelsConfextendsProductwithSerializable", "kind" : "case class"}, {"member" : "solving.SolverMulti#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/SolverMulti.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/SolverMulti.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/SolverMulti.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/SolverMulti.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/SolverMulti.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/SolverMulti.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/SolverMulti.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SolverMulti.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SolverMulti.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SolverMulti.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/SolverMulti.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/SolverMulti.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "solving\/SolverMulti.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/SolverMulti.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "solving\/SolverMulti.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "solving\/SolverMulti.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/SolverMulti.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/SolverMulti.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/SolverMulti.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "solving\/SolverMulti.html", "kind" : "class"}, {"name" : "solving.SolverThreadSpecificSettings", "shortDescription" : "Includes only those settings which can be different across individual solver threads, includingall settings whose names end with ...P in sharedDefs.scala", "members_case class" : [{"member" : "solving.SolverThreadSpecificSettings#<init>", "error" : "unsupported entity"}, {"label" : "localRestarts", "tail" : ": Boolean", "member" : "solving.SolverThreadSpecificSettings.localRestarts", "link" : "solving\/SolverThreadSpecificSettings.html#localRestarts:Boolean", "kind" : "val"}, {"label" : "noisePhaseMemoR", "tail" : ": Float", "member" : "solving.SolverThreadSpecificSettings.noisePhaseMemoR", "link" : "solving\/SolverThreadSpecificSettings.html#noisePhaseMemoR:Float", "kind" : "val"}, {"label" : "nogoodRemovalThreshInit", "tail" : ": Int", "member" : "solving.SolverThreadSpecificSettings.nogoodRemovalThreshInit", "link" : "solving\/SolverThreadSpecificSettings.html#nogoodRemovalThreshInit:Int", "kind" : "val"}, {"label" : "absEliScoringApproach", "tail" : ": Int", "member" : "solving.SolverThreadSpecificSettings.absEliScoringApproach", "link" : "solving\/SolverThreadSpecificSettings.html#absEliScoringApproach:Int", "kind" : "val"}, {"label" : "nogoodRemovalThreshRatio", "tail" : ": Double", "member" : "solving.SolverThreadSpecificSettings.nogoodRemovalThreshRatio", "link" : "solving\/SolverThreadSpecificSettings.html#nogoodRemovalThreshRatio:Double", "kind" : "val"}, {"label" : "useSLSinPhaseMemoRephasingR", "tail" : ": Boolean", "member" : "solving.SolverThreadSpecificSettings.useSLSinPhaseMemoRephasingR", "link" : "solving\/SolverThreadSpecificSettings.html#useSLSinPhaseMemoRephasingR:Boolean", "kind" : "val"}, {"label" : "restartFrequencyModifierFactorR", "tail" : ": Float", "member" : "solving.SolverThreadSpecificSettings.restartFrequencyModifierFactorR", "link" : "solving\/SolverThreadSpecificSettings.html#restartFrequencyModifierFactorR:Float", "kind" : "val"}, {"label" : "seed", "tail" : ": Long", "member" : "solving.SolverThreadSpecificSettings.seed", "link" : "solving\/SolverThreadSpecificSettings.html#seed:Long", "kind" : "val"}, {"label" : "prep", "tail" : ": Preparation", "member" : "solving.SolverThreadSpecificSettings.prep", "link" : "solving\/SolverThreadSpecificSettings.html#prep:solving.Preparation", "kind" : "val"}, {"label" : "initAbsElisArrangement", "tail" : ": Int", "member" : "solving.SolverThreadSpecificSettings.initAbsElisArrangement", "link" : "solving\/SolverThreadSpecificSettings.html#initAbsElisArrangement:Int", "kind" : "val"}, {"label" : "traverseReduciblesUpwardsInUnitProp", "tail" : ": Boolean", "member" : "solving.SolverThreadSpecificSettings.traverseReduciblesUpwardsInUnitProp", "link" : "solving\/SolverThreadSpecificSettings.html#traverseReduciblesUpwardsInUnitProp:Boolean", "kind" : "val"}, {"label" : "restartTriggerConfR", "tail" : ": (Int, Int, Double)", "member" : "solving.SolverThreadSpecificSettings.restartTriggerConfR", "link" : "solving\/SolverThreadSpecificSettings.html#restartTriggerConfR:(Int,Int,Double)", "kind" : "val"}, {"label" : "freeEliSearchApproach", "tail" : ": Int", "member" : "solving.SolverThreadSpecificSettings.freeEliSearchApproach", "link" : "solving\/SolverThreadSpecificSettings.html#freeEliSearchApproach:Int", "kind" : "var"}, {"label" : "assureProgIsTight", "tail" : ": Boolean", "member" : "solving.SolverThreadSpecificSettings.assureProgIsTight", "link" : "solving\/SolverThreadSpecificSettings.html#assureProgIsTight:Boolean", "kind" : "val"}, {"label" : "positiveDependencyGraph", "tail" : ": Int2ObjectOpenHashMap[List[Eli]]", "member" : "solving.SolverThreadSpecificSettings.positiveDependencyGraph", "link" : "solving\/SolverThreadSpecificSettings.html#positiveDependencyGraph:it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap[List[sharedDefs.Eli]]", "kind" : "val"}, {"label" : "threadNo", "tail" : ": Int", "member" : "solving.SolverThreadSpecificSettings.threadNo", "link" : "solving\/SolverThreadSpecificSettings.html#threadNo:Int", "kind" : "var"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "solving\/SolverThreadSpecificSettings.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/SolverThreadSpecificSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/SolverThreadSpecificSettings.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/SolverThreadSpecificSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/SolverThreadSpecificSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/SolverThreadSpecificSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/SolverThreadSpecificSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/SolverThreadSpecificSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SolverThreadSpecificSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SolverThreadSpecificSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/SolverThreadSpecificSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/SolverThreadSpecificSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/SolverThreadSpecificSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/SolverThreadSpecificSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/SolverThreadSpecificSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/SolverThreadSpecificSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/SolverThreadSpecificSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "solving\/SolverThreadSpecificSettings.html", "kind" : "case class"}, {"name" : "solving.StochasticLocalSearch", "shortDescription" : "To test this approach in isolation, use command line options like this:", "object" : "solving\/StochasticLocalSearch$.html", "members_object" : [{"label" : "stochasticLocalSearch", "tail" : "(singleSolverThreadData: SingleSolverThreadData, solverThreadSpecificSettings: SolverThreadSpecificSettings, sharedAmongSingleSolverThreads: SharedAmongSingleSolverThreads, preparation: Preparation): Int", "member" : "solving.StochasticLocalSearch.stochasticLocalSearch", "link" : "solving\/StochasticLocalSearch$.html#stochasticLocalSearch(singleSolverThreadData:solving.SingleSolverThreadData,solverThreadSpecificSettings:solving.SolverThreadSpecificSettings,sharedAmongSingleSolverThreads:solving.SharedAmongSingleSolverThreads,preparation:solving.Preparation):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "solving\/StochasticLocalSearch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "solving\/StochasticLocalSearch$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "solving\/StochasticLocalSearch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "solving\/StochasticLocalSearch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "solving\/StochasticLocalSearch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "solving\/StochasticLocalSearch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "solving\/StochasticLocalSearch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/StochasticLocalSearch$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/StochasticLocalSearch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "solving\/StochasticLocalSearch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "solving\/StochasticLocalSearch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "solving\/StochasticLocalSearch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "solving\/StochasticLocalSearch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "solving\/StochasticLocalSearch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "solving\/StochasticLocalSearch$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "solving\/StochasticLocalSearch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "solving\/StochasticLocalSearch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "solving\/StochasticLocalSearch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "solving\/StochasticLocalSearch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "input" : [{"name" : "input.AspifOrDIMACSPlainParserResult", "shortDescription" : "Result of the aspif or dimacs parser.", "members_case class" : [{"member" : "input.AspifOrDIMACSPlainParserResult#<init>", "error" : "unsupported entity"}, {"label" : "aspifRulesOpt", "tail" : ": Option[ArrayBuffer[AspifRule]]", "member" : "input.AspifOrDIMACSPlainParserResult.aspifRulesOpt", "link" : "input\/AspifOrDIMACSPlainParserResult.html#aspifRulesOpt:Option[scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule]]", "kind" : "val"}, {"label" : "aspifEliToSymbolOpt", "tail" : ": Option[HashMap[AspifEli, Pred]]", "member" : "input.AspifOrDIMACSPlainParserResult.aspifEliToSymbolOpt", "link" : "input\/AspifOrDIMACSPlainParserResult.html#aspifEliToSymbolOpt:Option[scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,aspIOutils.Pred]]", "kind" : "val"}, {"label" : "additionalUncertainAtomsInnerCostsStrs", "tail" : ": (Array[String], Array[String], Array[String])", "member" : "input.AspifOrDIMACSPlainParserResult.additionalUncertainAtomsInnerCostsStrs", "link" : "input\/AspifOrDIMACSPlainParserResult.html#additionalUncertainAtomsInnerCostsStrs:(Array[String],Array[String],Array[String])", "kind" : "val"}, {"label" : "symbolToEliOpt", "tail" : ": Option[Map[String, Eli]]", "member" : "input.AspifOrDIMACSPlainParserResult.symbolToEliOpt", "link" : "input\/AspifOrDIMACSPlainParserResult.html#symbolToEliOpt:Option[Map[String,sharedDefs.Eli]]", "kind" : "val"}, {"label" : "clausesForChecksOpt", "tail" : ": Option[Array[Array[Int]]]", "member" : "input.AspifOrDIMACSPlainParserResult.clausesForChecksOpt", "link" : "input\/AspifOrDIMACSPlainParserResult.html#clausesForChecksOpt:Option[Array[Array[Int]]]", "kind" : "val"}, {"label" : "emptyBodyBlit", "tail" : ": Int", "member" : "input.AspifOrDIMACSPlainParserResult.emptyBodyBlit", "link" : "input\/AspifOrDIMACSPlainParserResult.html#emptyBodyBlit:Int", "kind" : "val"}, {"label" : "assumptionElis", "tail" : ": Seq[Eli]", "member" : "input.AspifOrDIMACSPlainParserResult.assumptionElis", "link" : "input\/AspifOrDIMACSPlainParserResult.html#assumptionElis:Seq[sharedDefs.Eli]", "kind" : "val"}, {"label" : "externalAtomElis", "tail" : ": Seq[Eli]", "member" : "input.AspifOrDIMACSPlainParserResult.externalAtomElis", "link" : "input\/AspifOrDIMACSPlainParserResult.html#externalAtomElis:Seq[sharedDefs.Eli]", "kind" : "val"}, {"label" : "noOfDummySymbols", "tail" : ": Int", "member" : "input.AspifOrDIMACSPlainParserResult.noOfDummySymbols", "link" : "input\/AspifOrDIMACSPlainParserResult.html#noOfDummySymbols:Int", "kind" : "val"}, {"label" : "noOfPosBlits", "tail" : ": Int", "member" : "input.AspifOrDIMACSPlainParserResult.noOfPosBlits", "link" : "input\/AspifOrDIMACSPlainParserResult.html#noOfPosBlits:Int", "kind" : "val"}, {"label" : "rulesOrClauseNogoods", "tail" : ": Either[ArrayBuffer[Rule], Array[IntArrayUnsafeS]]", "member" : "input.AspifOrDIMACSPlainParserResult.rulesOrClauseNogoods", "link" : "input\/AspifOrDIMACSPlainParserResult.html#rulesOrClauseNogoods:Either[scala.collection.mutable.ArrayBuffer[sharedDefs.Rule],Array[utils.IntArrayUnsafeS]]", "kind" : "val"}, {"label" : "symbols", "tail" : ": Array[String]", "member" : "input.AspifOrDIMACSPlainParserResult.symbols", "link" : "input\/AspifOrDIMACSPlainParserResult.html#symbols:Array[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/AspifOrDIMACSPlainParserResult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/AspifOrDIMACSPlainParserResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/AspifOrDIMACSPlainParserResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/AspifOrDIMACSPlainParserResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/AspifOrDIMACSPlainParserResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/AspifOrDIMACSPlainParserResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/AspifOrDIMACSPlainParserResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/AspifOrDIMACSPlainParserResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/AspifOrDIMACSPlainParserResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/AspifOrDIMACSPlainParserResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/AspifOrDIMACSPlainParserResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/AspifOrDIMACSPlainParserResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/AspifOrDIMACSPlainParserResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/AspifOrDIMACSPlainParserResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/AspifOrDIMACSPlainParserResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/AspifOrDIMACSPlainParserResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/AspifOrDIMACSPlainParserResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/AspifOrDIMACSPlainParserResult.html", "kind" : "case class"}, {"name" : "input.AspifPlainParser", "shortDescription" : "Parser for a subset of the ASP Intermediate Format (aspif), enhanced with support for probabilistic rules.", "object" : "input\/AspifPlainParser$.html", "members_object" : [{"label" : "aspifRulesToEliRules", "tail" : "(symbols: Array[String], aspifRules: ArrayBuffer[AspifRule], aspifEliToSymbolOpt: Option[HashMap[AspifEli, String]], assumptionAspifElis: Seq[AspifEli]): (ArrayBuffer[Rule], Int, Int, Map[String, AspifEli], (Array[String], Array[String], Array[String]), Seq[Eli])", "member" : "input.AspifPlainParser.aspifRulesToEliRules", "link" : "input\/AspifPlainParser$.html#aspifRulesToEliRules(symbols:Array[String],aspifRules:scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule],aspifEliToSymbolOpt:Option[scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,String]],assumptionAspifElis:Seq[input.AspifPlainParser.AspifEli]):(scala.collection.mutable.ArrayBuffer[sharedDefs.Rule],Int,Int,Map[String,input.AspifPlainParser.AspifEli],(Array[String],Array[String],Array[String]),Seq[sharedDefs.Eli])", "kind" : "def"}, {"label" : "addAspifRules", "tail" : "(bodyGivenPosAspifLits: Array[AspifEli], bodyGivenNegAspifLits: Array[AspifEli], aspifElisFromDoubleNegatedInBody: Set[AspifEli], headGivenPosAspifLits: Array[AspifEli], headGivenNegAspifLits: Array[AspifEli], weightBodyOpt: Option[(Int, Seq[(Int, AspifEli)])], choiceHeadOpt: Option[Seq[AspifEli]], aspifRulesBuffer: ArrayBuffer[AspifRule], aspifEliToSymbol: HashMap[AspifEli, Pred], probabilityOpt: Option[Double]): Unit", "member" : "input.AspifPlainParser.addAspifRules", "link" : "input\/AspifPlainParser$.html#addAspifRules(bodyGivenPosAspifLits:Array[input.AspifPlainParser.AspifEli],bodyGivenNegAspifLits:Array[input.AspifPlainParser.AspifEli],aspifElisFromDoubleNegatedInBody:scala.collection.Set[input.AspifPlainParser.AspifEli],headGivenPosAspifLits:Array[input.AspifPlainParser.AspifEli],headGivenNegAspifLits:Array[input.AspifPlainParser.AspifEli],weightBodyOpt:Option[(Int,Seq[(Int,input.AspifPlainParser.AspifEli)])],choiceHeadOpt:Option[Seq[input.AspifPlainParser.AspifEli]],aspifRulesBuffer:scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule],aspifEliToSymbol:scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,aspIOutils.Pred],probabilityOpt:Option[Double]):Unit", "kind" : "def"}, {"label" : "resolveDisjunctiveHead", "tail" : "(maxNoOfUnfolds: Int, aspifRules: ArrayBuffer[AspifRule]): ArrayBuffer[AspifRule]", "member" : "input.AspifPlainParser.resolveDisjunctiveHead", "link" : "input\/AspifPlainParser$.html#resolveDisjunctiveHead(maxNoOfUnfolds:Int,aspifRules:scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule]):scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule]", "kind" : "def"}, {"label" : "parseAspif", "tail" : "(aspifStr: String, shiftAndUnfoldForDisjunctions: Boolean, maxNoOfUnfolds: Int): AspifOrDIMACSPlainParserResult", "member" : "input.AspifPlainParser.parseAspif", "link" : "input\/AspifPlainParser$.html#parseAspif(aspifStr:String,shiftAndUnfoldForDisjunctions:Boolean,maxNoOfUnfolds:Int):input.AspifOrDIMACSPlainParserResult", "kind" : "def"}, {"label" : "pseudoBlitOffs", "tail" : ": Int", "member" : "input.AspifPlainParser.pseudoBlitOffs", "link" : "input\/AspifPlainParser$.html#pseudoBlitOffs:Int", "kind" : "val"}, {"label" : "timerParserNs", "tail" : ": Long", "member" : "input.AspifPlainParser.timerParserNs", "link" : "input\/AspifPlainParser$.html#timerParserNs:Long", "kind" : "val"}, {"label" : "AspifRule", "tail" : "", "member" : "input.AspifPlainParser.AspifRule", "link" : "input\/AspifPlainParser$.html#AspifRuleextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "AspifEli", "tail" : "", "member" : "input.AspifPlainParser.AspifEli", "link" : "input\/AspifPlainParser$.html#AspifEli=Int", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/AspifPlainParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/AspifPlainParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/AspifPlainParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/AspifPlainParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/AspifPlainParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/AspifPlainParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/AspifPlainParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/AspifPlainParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/AspifPlainParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/AspifPlainParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/AspifPlainParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/AspifPlainParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "input\/AspifPlainParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/AspifPlainParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "input\/AspifPlainParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "input\/AspifPlainParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/AspifPlainParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/AspifPlainParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/AspifPlainParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "input.BooleanClause", "shortDescription" : "A disjunctive set of literals (hard clause)", "members_case class" : [{"member" : "input.BooleanClause#<init>", "error" : "unsupported entity"}, {"label" : "literals", "tail" : ": Set[BooleanLiteral]", "member" : "input.BooleanClause.literals", "link" : "input\/BooleanClause.html#literals:Set[input.BooleanLiteral]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/BooleanClause.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/BooleanClause.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/BooleanClause.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/BooleanClause.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/BooleanClause.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/BooleanClause.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/BooleanClause.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/BooleanClause.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/BooleanClause.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/BooleanClause.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/BooleanClause.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/BooleanClause.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/BooleanClause.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/BooleanClause.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/BooleanClause.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/BooleanClause.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/BooleanClause.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/BooleanClause.html", "kind" : "case class"}, {"name" : "input.BooleanFormulaWithCosts", "shortDescription" : "A collection of probabilistic and\/or non-probabilistic Boolean clauses (disjunctions of literals)", "members_case class" : [{"label" : "solve", "tail" : "(solverParametersOverlay: SolverParametersOverlay, paramAtomsAndInnerCostsStrOpt: Option[String]): SamplingResult", "member" : "input.BooleanFormulaWithCosts.solve", "link" : "input\/BooleanFormulaWithCosts.html#solve(solverParametersOverlay:input.SolverParametersOverlay,paramAtomsAndInnerCostsStrOpt:Option[String]):solving.SamplingResult", "kind" : "def"}, {"label" : "directClauseNogoods", "tail" : ": Array[IntArrayUnsafeS]", "member" : "input.BooleanFormulaWithCosts.directClauseNogoods", "link" : "input\/BooleanFormulaWithCosts.html#directClauseNogoods:Array[utils.IntArrayUnsafeS]", "kind" : "val"}, {"label" : "originalMaxVar", "tail" : ": Int", "member" : "input.BooleanFormulaWithCosts.originalMaxVar", "link" : "input\/BooleanFormulaWithCosts.html#originalMaxVar:Int", "kind" : "val"}, {"label" : "costsFromProbabilisticClauses", "tail" : ": ArrayBuffer[String]", "member" : "input.BooleanFormulaWithCosts.costsFromProbabilisticClauses", "link" : "input\/BooleanFormulaWithCosts.html#costsFromProbabilisticClauses:scala.collection.mutable.ArrayBuffer[String]", "kind" : "val"}, {"label" : "patsFromProbabilisticClauses", "tail" : ": ArrayBuffer[Pred]", "member" : "input.BooleanFormulaWithCosts.patsFromProbabilisticClauses", "link" : "input\/BooleanFormulaWithCosts.html#patsFromProbabilisticClauses:scala.collection.mutable.ArrayBuffer[aspIOutils.Pred]", "kind" : "val"}, {"member" : "input.BooleanFormulaWithCosts#<init>", "error" : "unsupported entity"}, {"label" : "maxVar", "tail" : ": Int", "member" : "input.BooleanFormulaWithCosts.maxVar", "link" : "input\/BooleanFormulaWithCosts.html#maxVar:Int", "kind" : "var"}, {"label" : "clauses", "tail" : ": Set[Clause]", "member" : "input.BooleanFormulaWithCosts.clauses", "link" : "input\/BooleanFormulaWithCosts.html#clauses:Set[input.Clause]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/BooleanFormulaWithCosts.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/BooleanFormulaWithCosts.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/BooleanFormulaWithCosts.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/BooleanFormulaWithCosts.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/BooleanFormulaWithCosts.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/BooleanFormulaWithCosts.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/BooleanFormulaWithCosts.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/BooleanFormulaWithCosts.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/BooleanFormulaWithCosts.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/BooleanFormulaWithCosts.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/BooleanFormulaWithCosts.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/BooleanFormulaWithCosts.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/BooleanFormulaWithCosts.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/BooleanFormulaWithCosts.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/BooleanFormulaWithCosts.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/BooleanFormulaWithCosts.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/BooleanFormulaWithCosts.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/BooleanFormulaWithCosts.html", "kind" : "case class"}, {"name" : "input.BooleanLiteral", "shortDescription" : "A literal, represented as a positive or negative integer value.", "members_case class" : [{"member" : "input.BooleanLiteral#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Int", "member" : "input.BooleanLiteral.value", "link" : "input\/BooleanLiteral.html#value:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/BooleanLiteral.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "input\/BooleanLiteral.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "input\/BooleanLiteral.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/BooleanLiteral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/BooleanLiteral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "input\/BooleanLiteral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "input\/BooleanLiteral.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "input\/BooleanLiteral.html", "kind" : "case class"}, {"name" : "input.Clause", "shortDescription" : "", "members_class" : [{"member" : "input.Clause#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/Clause.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/Clause.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/Clause.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/Clause.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/Clause.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/Clause.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/Clause.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/Clause.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/Clause.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/Clause.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/Clause.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/Clause.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "input\/Clause.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/Clause.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "input\/Clause.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "input\/Clause.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/Clause.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/Clause.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/Clause.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "input\/Clause.html", "kind" : "class"}, {"name" : "input.diffSAT", "shortDescription" : "", "object" : "input\/diffSAT$.html", "members_object" : [{"label" : "queryAndPrintSolverResult", "tail" : "(showauxInASPmode: Boolean, satMode: Boolean, samplingResult: SamplingResult, parserResultForSanityChecksOpt: Option[AspifOrDIMACSPlainParserResult], adHocConjunctiveQueries: Seq[Seq[Pred]], adHocDisjunctiveQueries: Seq[Seq[Pred]], adHocSimpleGroundRuleQueries: Seq[(Pred, Seq[Pred])], adHocConjunctionOfSimpleGroundRulesQuery: Seq[(Pred, Seq[Pred])], printAnswers: Boolean, printAdHocQueryResults: Boolean): (Seq[Array[Pred]], Seq[(String, Double)], Seq[(String, Double)], Seq[(String, Double)], Seq[(String, Double)])", "member" : "input.diffSAT.queryAndPrintSolverResult", "link" : "input\/diffSAT$.html#queryAndPrintSolverResult(showauxInASPmode:Boolean,satMode:Boolean,samplingResult:solving.SamplingResult,parserResultForSanityChecksOpt:Option[input.AspifOrDIMACSPlainParserResult],adHocConjunctiveQueries:Seq[Seq[aspIOutils.Pred]],adHocDisjunctiveQueries:Seq[Seq[aspIOutils.Pred]],adHocSimpleGroundRuleQueries:Seq[(aspIOutils.Pred,Seq[aspIOutils.Pred])],adHocConjunctionOfSimpleGroundRulesQuery:Seq[(aspIOutils.Pred,Seq[aspIOutils.Pred])],printAnswers:Boolean,printAdHocQueryResults:Boolean):(scala.collection.mutable.Seq[Array[aspIOutils.Pred]],Seq[(String,Double)],Seq[(String,Double)],Seq[(String,Double)],Seq[(String,Double)])", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "input.diffSAT.main", "link" : "input\/diffSAT$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "parseArgs", "tail" : "(args: Array[String]): (ArgsList, HashMap[(String, Int), String])", "member" : "input.diffSAT.parseArgs", "link" : "input\/diffSAT$.html#parseArgs(args:Array[String]):(input.diffSAT.ArgsList,scala.collection.mutable.HashMap[(String,Int),String])", "kind" : "def"}, {"label" : "ArgsList", "tail" : "", "member" : "input.diffSAT.ArgsList", "link" : "input\/diffSAT$.html#ArgsList=List[(Symbol,List[String])]", "kind" : "type"}, {"label" : "invokeSampler", "tail" : "(inputData: InputData, advancedSolverParametersOverlay: SolverParametersOverlay, baseSettingsForBatchTestsOpt: Option[Array[(String, AnyRef)]], satMode: Boolean): (SamplingResult, AspifOrDIMACSPlainParserResult)", "member" : "input.diffSAT.invokeSampler", "link" : "input\/diffSAT$.html#invokeSampler(inputData:input.InputData,advancedSolverParametersOverlay:input.SolverParametersOverlay,baseSettingsForBatchTestsOpt:Option[Array[(String,AnyRef)]],satMode:Boolean):(solving.SamplingResult,input.AspifOrDIMACSPlainParserResult)", "kind" : "def"}, {"label" : "obtainInputFromText", "tail" : "(fileNameOpt: Either[Option[String], String], mseInCommandLineOpt: Option[Boolean]): (InputData, Boolean, Option[(HashMap[Symbol, List[String]], HashMap[(String, Int), String])], (Boolean, Boolean), Option[(Double, Iterator[(String, Double)])], Option[Array[Array[Pred]]], Option[Array[Array[Pred]]])", "member" : "input.diffSAT.obtainInputFromText", "link" : "input\/diffSAT$.html#obtainInputFromText(fileNameOpt:Either[Option[String],String],mseInCommandLineOpt:Option[Boolean]):(input.InputData,Boolean,Option[(scala.collection.mutable.HashMap[Symbol,List[String]],scala.collection.mutable.HashMap[(String,Int),String])],(Boolean,Boolean),Option[(Double,Iterator[(String,Double)])],Option[Array[Array[aspIOutils.Pred]]],Option[Array[Array[aspIOutils.Pred]]])", "kind" : "def"}, {"label" : "parseDouble", "tail" : "(s: String): Option[Double]", "member" : "input.diffSAT.parseDouble", "link" : "input\/diffSAT$.html#parseDouble(s:String):Option[Double]", "kind" : "def"}, {"label" : "diffSATGlobalLock", "tail" : ": ReentrantLock", "member" : "input.diffSAT.diffSATGlobalLock", "link" : "input\/diffSAT$.html#diffSATGlobalLock:java.util.concurrent.locks.ReentrantLock", "kind" : "val"}, {"label" : "stats", "tail" : ": Stats", "member" : "input.diffSAT.stats", "link" : "input\/diffSAT$.html#stats:utils.Stats", "kind" : "var"}, {"label" : "fileNameOpt", "tail" : ": Option[String]", "member" : "input.diffSAT.fileNameOpt", "link" : "input\/diffSAT$.html#fileNameOpt:Option[String]", "kind" : "var"}, {"label" : "stomp", "tail" : "(code: Int, additionalInfo: String): Unit", "member" : "input.diffSAT.stomp", "link" : "input\/diffSAT$.html#stomp(code:Int,additionalInfo:String):Unit", "kind" : "def"}, {"label" : "stompMessages", "tail" : ": Map[Int, (String, diffSAT.MessageTypes.Value)]", "member" : "input.diffSAT.stompMessages", "link" : "input\/diffSAT$.html#stompMessages:scala.collection.immutable.Map[Int,(String,input.diffSAT.MessageTypes.Value)]", "kind" : "val"}, {"label" : "MessageTypes", "tail" : "", "member" : "input.diffSAT.MessageTypes", "link" : "input\/diffSAT$.html#MessageTypes", "kind" : "object"}, {"label" : "changeConsoleWidthUnderWin", "tail" : "(): Boolean", "member" : "input.diffSAT.changeConsoleWidthUnderWin", "link" : "input\/diffSAT$.html#changeConsoleWidthUnderWin:Boolean", "kind" : "def"}, {"label" : "osWin", "tail" : "(): Boolean", "member" : "input.diffSAT.osWin", "link" : "input\/diffSAT$.html#osWin:Boolean", "kind" : "def"}, {"label" : "helpText", "tail" : ": String", "member" : "input.diffSAT.helpText", "link" : "input\/diffSAT$.html#helpText:String", "kind" : "val"}, {"label" : "thirdPartyLibs", "tail" : ": String", "member" : "input.diffSAT.thirdPartyLibs", "link" : "input\/diffSAT$.html#thirdPartyLibs:String", "kind" : "val"}, {"label" : "defaultCmdlOffHeapGarbageCollectionModeR", "tail" : ": String", "member" : "input.diffSAT.defaultCmdlOffHeapGarbageCollectionModeR", "link" : "input\/diffSAT$.html#defaultCmdlOffHeapGarbageCollectionModeR:String", "kind" : "val"}, {"label" : "defaultCmdlNoOfModelsStr", "tail" : ": String", "member" : "input.diffSAT.defaultCmdlNoOfModelsStr", "link" : "input\/diffSAT$.html#defaultCmdlNoOfModelsStr:String", "kind" : "val"}, {"label" : "copyrightAndVersionText", "tail" : ": String", "member" : "input.diffSAT.copyrightAndVersionText", "link" : "input\/diffSAT$.html#copyrightAndVersionText:String", "kind" : "val"}, {"label" : "copyright", "tail" : ": String", "member" : "input.diffSAT.copyright", "link" : "input\/diffSAT$.html#copyright:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "input.diffSAT.version", "link" : "input\/diffSAT$.html#version:String", "kind" : "val"}, {"label" : "runAllAPITests", "tail" : "(): Unit", "member" : "userAPItests.APITests.runAllAPITests", "link" : "input\/diffSAT$.html#runAllAPITests:Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/diffSAT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/diffSAT$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/diffSAT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/diffSAT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/diffSAT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/diffSAT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/diffSAT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/diffSAT$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/diffSAT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/diffSAT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/diffSAT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/diffSAT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "input\/diffSAT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/diffSAT$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "input\/diffSAT$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "input\/diffSAT$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/diffSAT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/diffSAT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/diffSAT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "input.DIMACPlainSparser", "shortDescription" : "Parser for DIMACS-CNF and PCNF (probabilistic CNF).", "object" : "input\/DIMACPlainSparser$.html", "members_object" : [{"label" : "createExtraClausesNogoodsFromProbabilisticClauseNogood", "tail" : "(llcn: ArrayValExtensibleIntUnsafe, clauseHandleVar: Int, weightStr: String): (ArrayValExtensibleIntUnsafe, Array[ArrayValExtensibleIntUnsafe], String)", "member" : "input.DIMACPlainSparser.createExtraClausesNogoodsFromProbabilisticClauseNogood", "link" : "input\/DIMACPlainSparser$.html#createExtraClausesNogoodsFromProbabilisticClauseNogood(llcn:utils.ArrayValExtensibleIntUnsafe,clauseHandleVar:Int,weightStr:String):(utils.ArrayValExtensibleIntUnsafe,Array[utils.ArrayValExtensibleIntUnsafe],String)", "kind" : "def"}, {"label" : "parseDIMACS", "tail" : "(dimacs_CNF_Pr: String): AspifOrDIMACSPlainParserResult", "member" : "input.DIMACPlainSparser.parseDIMACS", "link" : "input\/DIMACPlainSparser$.html#parseDIMACS(dimacs_CNF_Pr:String):input.AspifOrDIMACSPlainParserResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/DIMACPlainSparser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/DIMACPlainSparser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/DIMACPlainSparser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/DIMACPlainSparser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/DIMACPlainSparser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/DIMACPlainSparser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/DIMACPlainSparser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/DIMACPlainSparser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/DIMACPlainSparser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/DIMACPlainSparser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/DIMACPlainSparser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/DIMACPlainSparser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "input\/DIMACPlainSparser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/DIMACPlainSparser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "input\/DIMACPlainSparser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "input\/DIMACPlainSparser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/DIMACPlainSparser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/DIMACPlainSparser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/DIMACPlainSparser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "input.GroundSymbolicASPRule", "shortDescription" : "As input.SymbolicASPRule, but without variables.", "members_case class" : [{"label" : "translateSymbolicRuleToSetsOfAspifElis", "tail" : "(aspifEliToSymbol: HashMap[AspifEli, String], symbolsSet: HashMap[Pred, AspifEli]): (Array[AspifEli], Array[AspifEli], Array[AspifEli], Set[AspifEli], Array[AspifEli], Option[(Int, Seq[(Int, AspifEli)])], Option[Seq[AspifEli]], Option[Double])", "member" : "input.GroundSymbolicASPRule.translateSymbolicRuleToSetsOfAspifElis", "link" : "input\/GroundSymbolicASPRule.html#translateSymbolicRuleToSetsOfAspifElis(aspifEliToSymbol:scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,String],symbolsSet:scala.collection.mutable.HashMap[aspIOutils.Pred,input.AspifPlainParser.AspifEli]):(Array[input.AspifPlainParser.AspifEli],Array[input.AspifPlainParser.AspifEli],Array[input.AspifPlainParser.AspifEli],scala.collection.Set[input.AspifPlainParser.AspifEli],Array[input.AspifPlainParser.AspifEli],Option[(Int,Seq[(Int,input.AspifPlainParser.AspifEli)])],Option[Seq[input.AspifPlainParser.AspifEli]],Option[Double])", "kind" : "def"}, {"label" : "translateSymbolicAtomToAspifEli", "tail" : "(symbolicAtomR: Pred, aspifEliToSymbol: HashMap[AspifEli, String], symbolsSet: HashMap[Pred, AspifEli]): (AspifEli, Boolean)", "member" : "input.GroundSymbolicASPRule.translateSymbolicAtomToAspifEli", "link" : "input\/GroundSymbolicASPRule.html#translateSymbolicAtomToAspifEli(symbolicAtomR:aspIOutils.Pred,aspifEliToSymbol:scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,String],symbolsSet:scala.collection.mutable.HashMap[aspIOutils.Pred,input.AspifPlainParser.AspifEli]):(input.AspifPlainParser.AspifEli,Boolean)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "input.GroundSymbolicASPRule.toString", "link" : "input\/GroundSymbolicASPRule.html#toString():String", "kind" : "def"}, {"member" : "input.GroundSymbolicASPRule#<init>", "error" : "unsupported entity"}, {"label" : "probabilityOpt", "tail" : ": Option[Double]", "member" : "input.GroundSymbolicASPRule.probabilityOpt", "link" : "input\/GroundSymbolicASPRule.html#probabilityOpt:Option[Double]", "kind" : "val"}, {"label" : "weightBodySymbolicOpt", "tail" : ": Option[(Int, Seq[(Int, Pred)])]", "member" : "input.GroundSymbolicASPRule.weightBodySymbolicOpt", "link" : "input\/GroundSymbolicASPRule.html#weightBodySymbolicOpt:Option[(Int,Seq[(Int,aspIOutils.Pred)])]", "kind" : "val"}, {"label" : "choiceHeadOpt", "tail" : ": Option[Seq[Pred]]", "member" : "input.GroundSymbolicASPRule.choiceHeadOpt", "link" : "input\/GroundSymbolicASPRule.html#choiceHeadOpt:Option[Seq[aspIOutils.Pred]]", "kind" : "val"}, {"label" : "bodyLiterals", "tail" : ": Set[Pred]", "member" : "input.GroundSymbolicASPRule.bodyLiterals", "link" : "input\/GroundSymbolicASPRule.html#bodyLiterals:scala.collection.Set[aspIOutils.Pred]", "kind" : "val"}, {"label" : "headLiterals", "tail" : ": Set[Pred]", "member" : "input.GroundSymbolicASPRule.headLiterals", "link" : "input\/GroundSymbolicASPRule.html#headLiterals:scala.collection.Set[aspIOutils.Pred]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/GroundSymbolicASPRule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/GroundSymbolicASPRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/GroundSymbolicASPRule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/GroundSymbolicASPRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/GroundSymbolicASPRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/GroundSymbolicASPRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/GroundSymbolicASPRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/GroundSymbolicASPRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/GroundSymbolicASPRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/GroundSymbolicASPRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/GroundSymbolicASPRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/GroundSymbolicASPRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/GroundSymbolicASPRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/GroundSymbolicASPRule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/GroundSymbolicASPRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/GroundSymbolicASPRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/GroundSymbolicASPRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/GroundSymbolicASPRule.html", "kind" : "case class"}, {"name" : "input.InputData", "shortDescription" : "Input data for the sampler\/solver", "members_case class" : [{"member" : "input.InputData#<init>", "error" : "unsupported entity"}, {"label" : "costsOpt", "tail" : ": Option[UncertainAtomsSeprt]", "member" : "input.InputData.costsOpt", "link" : "input\/InputData.html#costsOpt:Option[diff.UncertainAtomsSeprt]", "kind" : "val"}, {"label" : "aspifOrDIMACSPlainParserResult", "tail" : ": AspifOrDIMACSPlainParserResult", "member" : "input.InputData.aspifOrDIMACSPlainParserResult", "link" : "input\/InputData.html#aspifOrDIMACSPlainParserResult:input.AspifOrDIMACSPlainParserResult", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/InputData.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/InputData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/InputData.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/InputData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/InputData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/InputData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/InputData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/InputData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/InputData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/InputData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/InputData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/InputData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/InputData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/InputData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/InputData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/InputData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/InputData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/InputData.html", "kind" : "case class"}, {"name" : "input.ParseOptimizationTerms", "shortDescription" : "", "object" : "input\/ParseOptimizationTerms$.html", "members_object" : [{"label" : "parseOptimizationTerms", "tail" : "(mse: Boolean, paramAtomsAndInnerCostsStrOpt: Option[String], satMode: Boolean, aspifOrDIMACSParserResult: AspifOrDIMACSPlainParserResult): (InputData, Boolean)", "member" : "input.ParseOptimizationTerms.parseOptimizationTerms", "link" : "input\/ParseOptimizationTerms$.html#parseOptimizationTerms(mse:Boolean,paramAtomsAndInnerCostsStrOpt:Option[String],satMode:Boolean,aspifOrDIMACSParserResult:input.AspifOrDIMACSPlainParserResult):(input.InputData,Boolean)", "kind" : "def"}, {"label" : "convertToDfNEW", "tail" : "(tokensQueue: LinkedList[AnyRef], measuredAtomsSet: HashSet[Pred], aspifOrDIMACSParserResult: AspifOrDIMACSPlainParserResult, eliToVariableInCostFunctions: HashMap[Int, Variable[DoubleReal]], satMode: Boolean): DifferentialFunction[DoubleReal]", "member" : "input.ParseOptimizationTerms.convertToDfNEW", "link" : "input\/ParseOptimizationTerms$.html#convertToDfNEW(tokensQueue:java.util.LinkedList[Object],measuredAtomsSet:scala.collection.mutable.HashSet[aspIOutils.Pred],aspifOrDIMACSParserResult:input.AspifOrDIMACSPlainParserResult,eliToVariableInCostFunctions:scala.collection.mutable.HashMap[Int,com.accelad.math.nilgiri.autodiff.Variable[com.accelad.math.nilgiri.DoubleReal]],satMode:Boolean):com.accelad.math.nilgiri.autodiff.DifferentialFunction[com.accelad.math.nilgiri.DoubleReal]", "kind" : "def"}, {"label" : "unmangleMeasuredAtomName", "tail" : "(measuredAtom: String): String", "member" : "input.ParseOptimizationTerms.unmangleMeasuredAtomName", "link" : "input\/ParseOptimizationTerms$.html#unmangleMeasuredAtomName(measuredAtom:String):String", "kind" : "def"}, {"label" : "generateMeasuredAtomVariableInCost", "tail" : "(weightedAtomStr: String, dFFactory: DifferentialFunctionFactoryStasp, aspifOrDIMACSParserResult: AspifOrDIMACSPlainParserResult, eliToVariableInCostFunctions: HashMap[Int, Variable[DoubleReal]]): Variable[DoubleReal]", "member" : "input.ParseOptimizationTerms.generateMeasuredAtomVariableInCost", "link" : "input\/ParseOptimizationTerms$.html#generateMeasuredAtomVariableInCost(weightedAtomStr:String,dFFactory:diff.DifferentialFunctionFactoryStasp,aspifOrDIMACSParserResult:input.AspifOrDIMACSPlainParserResult,eliToVariableInCostFunctions:scala.collection.mutable.HashMap[Int,com.accelad.math.nilgiri.autodiff.Variable[com.accelad.math.nilgiri.DoubleReal]]):com.accelad.math.nilgiri.autodiff.Variable[com.accelad.math.nilgiri.DoubleReal]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/ParseOptimizationTerms$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/ParseOptimizationTerms$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/ParseOptimizationTerms$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/ParseOptimizationTerms$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/ParseOptimizationTerms$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/ParseOptimizationTerms$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/ParseOptimizationTerms$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ParseOptimizationTerms$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ParseOptimizationTerms$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ParseOptimizationTerms$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/ParseOptimizationTerms$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/ParseOptimizationTerms$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "input\/ParseOptimizationTerms$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/ParseOptimizationTerms$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "input\/ParseOptimizationTerms$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "input\/ParseOptimizationTerms$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/ParseOptimizationTerms$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/ParseOptimizationTerms$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/ParseOptimizationTerms$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "input.ProbabilisticAnswerSetProgram", "shortDescription" : "User API representation of a probabilistic or non-probabilistic ASP ground program,consisting of a set of input.GroundSymbolicASPRule rules (for the User API for probabilistic Boolean clauses, see input.BooleanFormulaWithCosts).", "members_case class" : [{"label" : "solve", "tail" : "(solverParametersOverlay: SolverParametersOverlay, paramAtomsAndInnerCostsStrOpt: Option[String]): SamplingResult", "member" : "input.ProbabilisticAnswerSetProgram.solve", "link" : "input\/ProbabilisticAnswerSetProgram.html#solve(solverParametersOverlay:input.SolverParametersOverlay,paramAtomsAndInnerCostsStrOpt:Option[String]):solving.SamplingResult", "kind" : "def"}, {"label" : "assumptionElis", "tail" : ": Seq[Eli]", "member" : "input.ProbabilisticAnswerSetProgram.assumptionElis", "link" : "input\/ProbabilisticAnswerSetProgram.html#assumptionElis:Seq[sharedDefs.Eli]", "kind" : "val"}, {"label" : "additionalUncertainAtomsInnerCostsStrs", "tail" : ": (Array[String], Array[String], Array[String])", "member" : "input.ProbabilisticAnswerSetProgram.additionalUncertainAtomsInnerCostsStrs", "link" : "input\/ProbabilisticAnswerSetProgram.html#additionalUncertainAtomsInnerCostsStrs:(Array[String],Array[String],Array[String])", "kind" : "val"}, {"label" : "symbolToEli", "tail" : ": Map[String, Eli]", "member" : "input.ProbabilisticAnswerSetProgram.symbolToEli", "link" : "input\/ProbabilisticAnswerSetProgram.html#symbolToEli:Map[String,sharedDefs.Eli]", "kind" : "val"}, {"label" : "emptyBodyBlit", "tail" : ": Int", "member" : "input.ProbabilisticAnswerSetProgram.emptyBodyBlit", "link" : "input\/ProbabilisticAnswerSetProgram.html#emptyBodyBlit:Int", "kind" : "val"}, {"label" : "noOfPosBlits", "tail" : ": Int", "member" : "input.ProbabilisticAnswerSetProgram.noOfPosBlits", "link" : "input\/ProbabilisticAnswerSetProgram.html#noOfPosBlits:Int", "kind" : "val"}, {"label" : "rules", "tail" : ": ArrayBuffer[Rule]", "member" : "input.ProbabilisticAnswerSetProgram.rules", "link" : "input\/ProbabilisticAnswerSetProgram.html#rules:scala.collection.mutable.ArrayBuffer[sharedDefs.Rule]", "kind" : "val"}, {"label" : "symbols", "tail" : ": Array[String]", "member" : "input.ProbabilisticAnswerSetProgram.symbols", "link" : "input\/ProbabilisticAnswerSetProgram.html#symbols:Array[String]", "kind" : "val"}, {"label" : "aspifRulesAfterShiftUnfold", "tail" : ": ArrayBuffer[AspifRule]", "member" : "input.ProbabilisticAnswerSetProgram.aspifRulesAfterShiftUnfold", "link" : "input\/ProbabilisticAnswerSetProgram.html#aspifRulesAfterShiftUnfold:scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule]", "kind" : "val"}, {"label" : "aspifRulesBeforeShiftUnfold", "tail" : ": ArrayBuffer[AspifRule]", "member" : "input.ProbabilisticAnswerSetProgram.aspifRulesBeforeShiftUnfold", "link" : "input\/ProbabilisticAnswerSetProgram.html#aspifRulesBeforeShiftUnfold:scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule]", "kind" : "val"}, {"label" : "symbolsSet", "tail" : ": HashMap[Pred, AspifEli]", "member" : "input.ProbabilisticAnswerSetProgram.symbolsSet", "link" : "input\/ProbabilisticAnswerSetProgram.html#symbolsSet:scala.collection.mutable.HashMap[aspIOutils.Pred,input.AspifPlainParser.AspifEli]", "kind" : "val"}, {"label" : "initialAspifRules", "tail" : ": ArrayBuffer[AspifRule]", "member" : "input.ProbabilisticAnswerSetProgram.initialAspifRules", "link" : "input\/ProbabilisticAnswerSetProgram.html#initialAspifRules:scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule]", "kind" : "val"}, {"label" : "aspifEliToSymbol", "tail" : ": HashMap[AspifEli, Pred]", "member" : "input.ProbabilisticAnswerSetProgram.aspifEliToSymbol", "link" : "input\/ProbabilisticAnswerSetProgram.html#aspifEliToSymbol:scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,aspIOutils.Pred]", "kind" : "val"}, {"label" : "inputDataFromBackgroundProgOpt", "tail" : ": Option[(HashMap[AspifEli, Pred], ArrayBuffer[AspifRule], Array[String])]", "member" : "input.ProbabilisticAnswerSetProgram.inputDataFromBackgroundProgOpt", "link" : "input\/ProbabilisticAnswerSetProgram.html#inputDataFromBackgroundProgOpt:Option[(scala.collection.mutable.HashMap[input.AspifPlainParser.AspifEli,aspIOutils.Pred],scala.collection.mutable.ArrayBuffer[input.AspifPlainParser.AspifRule],Array[String])]", "kind" : "val"}, {"member" : "input.ProbabilisticAnswerSetProgram#<init>", "error" : "unsupported entity"}, {"label" : "backgroundProgramAspifOpt", "tail" : ": Option[String]", "member" : "input.ProbabilisticAnswerSetProgram.backgroundProgramAspifOpt", "link" : "input\/ProbabilisticAnswerSetProgram.html#backgroundProgramAspifOpt:Option[String]", "kind" : "val"}, {"label" : "groundSymbolicASPRules", "tail" : ": Set[GroundSymbolicASPRule]", "member" : "input.ProbabilisticAnswerSetProgram.groundSymbolicASPRules", "link" : "input\/ProbabilisticAnswerSetProgram.html#groundSymbolicASPRules:scala.collection.Set[input.GroundSymbolicASPRule]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/ProbabilisticAnswerSetProgram.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/ProbabilisticAnswerSetProgram.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/ProbabilisticAnswerSetProgram.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/ProbabilisticAnswerSetProgram.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/ProbabilisticAnswerSetProgram.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/ProbabilisticAnswerSetProgram.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/ProbabilisticAnswerSetProgram.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/ProbabilisticAnswerSetProgram.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ProbabilisticAnswerSetProgram.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ProbabilisticAnswerSetProgram.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ProbabilisticAnswerSetProgram.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/ProbabilisticAnswerSetProgram.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/ProbabilisticAnswerSetProgram.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/ProbabilisticAnswerSetProgram.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/ProbabilisticAnswerSetProgram.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/ProbabilisticAnswerSetProgram.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/ProbabilisticAnswerSetProgram.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/ProbabilisticAnswerSetProgram.html", "kind" : "case class"}, {"name" : "input.ProbabilisticBooleanClause", "shortDescription" : "A disjunctive set of literals, annotated with a probability (soft clause).", "members_case class" : [{"member" : "input.ProbabilisticBooleanClause#<init>", "error" : "unsupported entity"}, {"label" : "probability", "tail" : ": Double", "member" : "input.ProbabilisticBooleanClause.probability", "link" : "input\/ProbabilisticBooleanClause.html#probability:Double", "kind" : "val"}, {"label" : "literals", "tail" : ": Set[BooleanLiteral]", "member" : "input.ProbabilisticBooleanClause.literals", "link" : "input\/ProbabilisticBooleanClause.html#literals:Set[input.BooleanLiteral]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/ProbabilisticBooleanClause.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/ProbabilisticBooleanClause.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/ProbabilisticBooleanClause.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/ProbabilisticBooleanClause.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/ProbabilisticBooleanClause.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/ProbabilisticBooleanClause.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/ProbabilisticBooleanClause.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/ProbabilisticBooleanClause.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ProbabilisticBooleanClause.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ProbabilisticBooleanClause.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/ProbabilisticBooleanClause.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/ProbabilisticBooleanClause.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/ProbabilisticBooleanClause.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/ProbabilisticBooleanClause.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/ProbabilisticBooleanClause.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/ProbabilisticBooleanClause.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/ProbabilisticBooleanClause.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/ProbabilisticBooleanClause.html", "kind" : "case class"}, {"name" : "input.SolverParametersOverlay", "shortDescription" : "Solver and sampling settings.", "members_case class" : [{"member" : "input.SolverParametersOverlay#<init>", "error" : "unsupported entity"}, {"label" : "advancedSolverArgs", "tail" : ": HashMap[(String, Int), String]", "member" : "input.SolverParametersOverlay.advancedSolverArgs", "link" : "input\/SolverParametersOverlay.html#advancedSolverArgs:scala.collection.mutable.HashMap[(String,Int),String]", "kind" : "val"}, {"label" : "showauxInSATmode", "tail" : ": Boolean", "member" : "input.SolverParametersOverlay.showauxInSATmode", "link" : "input\/SolverParametersOverlay.html#showauxInSATmode:Boolean", "kind" : "val"}, {"label" : "assureMSE", "tail" : ": Boolean", "member" : "input.SolverParametersOverlay.assureMSE", "link" : "input\/SolverParametersOverlay.html#assureMSE:Boolean", "kind" : "val"}, {"label" : "thresholdOpt", "tail" : ": Option[Double]", "member" : "input.SolverParametersOverlay.thresholdOpt", "link" : "input\/SolverParametersOverlay.html#thresholdOpt:Option[Double]", "kind" : "val"}, {"label" : "offHeapGarbageCollectionModeR", "tail" : ": Int", "member" : "input.SolverParametersOverlay.offHeapGarbageCollectionModeR", "link" : "input\/SolverParametersOverlay.html#offHeapGarbageCollectionModeR:Int", "kind" : "val"}, {"label" : "noOfSecondaryModels", "tail" : ": Int", "member" : "input.SolverParametersOverlay.noOfSecondaryModels", "link" : "input\/SolverParametersOverlay.html#noOfSecondaryModels:Int", "kind" : "val"}, {"label" : "noOfModels", "tail" : ": Int", "member" : "input.SolverParametersOverlay.noOfModels", "link" : "input\/SolverParametersOverlay.html#noOfModels:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/SolverParametersOverlay.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/SolverParametersOverlay.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/SolverParametersOverlay.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/SolverParametersOverlay.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/SolverParametersOverlay.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/SolverParametersOverlay.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/SolverParametersOverlay.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/SolverParametersOverlay.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/SolverParametersOverlay.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/SolverParametersOverlay.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/SolverParametersOverlay.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/SolverParametersOverlay.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/SolverParametersOverlay.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/SolverParametersOverlay.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/SolverParametersOverlay.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/SolverParametersOverlay.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/SolverParametersOverlay.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/SolverParametersOverlay.html", "kind" : "case class"}, {"name" : "input.SymbolicASPRule", "shortDescription" : "Allows to represent all fundamental rule types in Answer Set Programming except weak rules :~.", "members_case class" : [{"label" : "genGroundInstancesRec", "tail" : "(): Seq[SymbolicASPRule]", "member" : "input.SymbolicASPRule.genGroundInstancesRec", "link" : "input\/SymbolicASPRule.html#genGroundInstancesRec:Seq[input.SymbolicASPRule]", "kind" : "def"}, {"label" : "genGroundInstances", "tail" : "(): Seq[GroundSymbolicASPRule]", "member" : "input.SymbolicASPRule.genGroundInstances", "link" : "input\/SymbolicASPRule.html#genGroundInstances:Seq[input.GroundSymbolicASPRule]", "kind" : "def"}, {"label" : "anyVariableNameRegex", "tail" : ": Regex", "member" : "input.SymbolicASPRule.anyVariableNameRegex", "link" : "input\/SymbolicASPRule.html#anyVariableNameRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "input.SymbolicASPRule.toString", "link" : "input\/SymbolicASPRule.html#toString():String", "kind" : "def"}, {"member" : "input.SymbolicASPRule#<init>", "error" : "unsupported entity"}, {"label" : "distrPrOverGroundings", "tail" : ": Boolean", "member" : "input.SymbolicASPRule.distrPrOverGroundings", "link" : "input\/SymbolicASPRule.html#distrPrOverGroundings:Boolean", "kind" : "val"}, {"label" : "domainAtoms", "tail" : ": Seq[String]", "member" : "input.SymbolicASPRule.domainAtoms", "link" : "input\/SymbolicASPRule.html#domainAtoms:Seq[String]", "kind" : "val"}, {"label" : "variableBindings", "tail" : ": Seq[(String, String)]", "member" : "input.SymbolicASPRule.variableBindings", "link" : "input\/SymbolicASPRule.html#variableBindings:Seq[(String,String)]", "kind" : "val"}, {"label" : "probabilityOpt", "tail" : ": Option[Double]", "member" : "input.SymbolicASPRule.probabilityOpt", "link" : "input\/SymbolicASPRule.html#probabilityOpt:Option[Double]", "kind" : "val"}, {"label" : "weightBodySymbolicOpt", "tail" : ": Option[(Int, Seq[(Int, Pred)])]", "member" : "input.SymbolicASPRule.weightBodySymbolicOpt", "link" : "input\/SymbolicASPRule.html#weightBodySymbolicOpt:Option[(Int,Seq[(Int,aspIOutils.Pred)])]", "kind" : "val"}, {"label" : "choiceHeadOpt", "tail" : ": Option[Seq[Pred]]", "member" : "input.SymbolicASPRule.choiceHeadOpt", "link" : "input\/SymbolicASPRule.html#choiceHeadOpt:Option[Seq[aspIOutils.Pred]]", "kind" : "val"}, {"label" : "bodyLiterals", "tail" : ": Set[Pred]", "member" : "input.SymbolicASPRule.bodyLiterals", "link" : "input\/SymbolicASPRule.html#bodyLiterals:scala.collection.Set[aspIOutils.Pred]", "kind" : "val"}, {"label" : "headLiterals", "tail" : ": Set[Pred]", "member" : "input.SymbolicASPRule.headLiterals", "link" : "input\/SymbolicASPRule.html#headLiterals:scala.collection.Set[aspIOutils.Pred]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "input\/SymbolicASPRule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "input\/SymbolicASPRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "input\/SymbolicASPRule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "input\/SymbolicASPRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "input\/SymbolicASPRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "input\/SymbolicASPRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "input\/SymbolicASPRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "input\/SymbolicASPRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/SymbolicASPRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/SymbolicASPRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "input\/SymbolicASPRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "input\/SymbolicASPRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "input\/SymbolicASPRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "input\/SymbolicASPRule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "input\/SymbolicASPRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "input\/SymbolicASPRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "input\/SymbolicASPRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "input\/SymbolicASPRule.html", "kind" : "case class"}], "utils" : [{"name" : "utils.ArrayValExtensibleIntUnsafe", "shortDescription" : "Unsafe low-level non-boxing replacement for a growable-only ArrayBuffer.", "members_class" : [{"label" : "addToGarbageBuffer", "tail" : "(): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.addToGarbageBuffer", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#addToGarbageBuffer():Unit", "kind" : "def"}, {"label" : "freeBuffer", "tail" : "(): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.freeBuffer", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#freeBuffer():Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Eli", "member" : "utils.ArrayValExtensibleIntUnsafe.size", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#size():sharedDefs.Eli", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.clear", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#clear():Unit", "kind" : "def"}, {"label" : "appendNoExpansion", "tail" : "(item: Int): Boolean", "member" : "utils.ArrayValExtensibleIntUnsafe.appendNoExpansion", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#appendNoExpansion(item:Int):Boolean", "kind" : "def"}, {"label" : "append", "tail" : "(item: Int): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.append", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#append(item:Int):Unit", "kind" : "def"}, {"label" : "indexOf", "tail" : "(item: Int): Int", "member" : "utils.ArrayValExtensibleIntUnsafe.indexOf", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#indexOf(item:Int):Int", "kind" : "def"}, {"label" : "containsBy", "tail" : "(item: Int, until: Int, by: (Int) => Int): Boolean", "member" : "utils.ArrayValExtensibleIntUnsafe.containsBy", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#containsBy(item:Int,until:Int,by:Int=>Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(item: Int, until: Int): Boolean", "member" : "utils.ArrayValExtensibleIntUnsafe.contains", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#contains(item:Int,until:Int):Boolean", "kind" : "def"}, {"label" : "traverseUntil", "tail" : "(itemOp: (Int) => Boolean): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.traverseUntil", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#traverseUntil(itemOp:Int=>Boolean):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "utils.ArrayValExtensibleIntUnsafe.isEmpty", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "removeByItem", "tail" : "(item: Int): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.removeByItem", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#removeByItem(item:Int):Unit", "kind" : "def"}, {"label" : "removeByIndex", "tail" : "(index: Int): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.removeByIndex", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#removeByIndex(index:Int):Unit", "kind" : "def"}, {"label" : "popLast", "tail" : "(): Int", "member" : "utils.ArrayValExtensibleIntUnsafe.popLast", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#popLast:Int", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Int): Unit", "member" : "utils.ArrayValExtensibleIntUnsafe.update", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#update(index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Int", "member" : "utils.ArrayValExtensibleIntUnsafe.get", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#get(index:Long):Int", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Int", "member" : "utils.ArrayValExtensibleIntUnsafe.get", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#get(index:Int):Int", "kind" : "def"}, {"label" : "bufferSize", "tail" : "(): Int", "member" : "utils.ArrayValExtensibleIntUnsafe.bufferSize", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#bufferSize:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "utils.ArrayValExtensibleIntUnsafe.length", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#length:Int", "kind" : "def"}, {"label" : "getContentUnsafe", "tail" : "(): IntArrayUnsafeS", "member" : "utils.ArrayValExtensibleIntUnsafe.getContentUnsafe", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#getContentUnsafe:utils.IntArrayUnsafeS", "kind" : "def"}, {"label" : "getContent", "tail" : "(): Array[Int]", "member" : "utils.ArrayValExtensibleIntUnsafe.getContent", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#getContent:Array[Int]", "kind" : "def"}, {"label" : "contentLen", "tail" : ": Int", "member" : "utils.ArrayValExtensibleIntUnsafe.contentLen", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#contentLen:Int", "kind" : "var"}, {"member" : "utils.ArrayValExtensibleIntUnsafe#<init>", "error" : "unsupported entity"}, {"label" : "buffer", "tail" : ": IntArrayUnsafeS", "member" : "utils.ArrayValExtensibleIntUnsafe.buffer", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#buffer:utils.IntArrayUnsafeS", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/ArrayValExtensibleIntUnsafe.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/ArrayValExtensibleIntUnsafe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/ArrayValExtensibleIntUnsafe.html", "kind" : "class"}, {"name" : "utils.ArrayValExtensibleLongUnsafe", "shortDescription" : "Unsafe low-level non-boxing replacement for a growable-only ArrayBuffer.", "members_class" : [{"label" : "addToGarbageBuffer", "tail" : "(): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.addToGarbageBuffer", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#addToGarbageBuffer():Unit", "kind" : "def"}, {"label" : "freeBuffer", "tail" : "(): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.freeBuffer", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#freeBuffer():Unit", "kind" : "def"}, {"label" : "sort", "tail" : "(by: (Long) => Double): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.sort", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#sort(by:Long=>Double):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.ArrayValExtensibleLongUnsafe.size", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#size():Int", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.clear", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#clear():Unit", "kind" : "def"}, {"label" : "appendNoExpansion", "tail" : "(item: Long): Boolean", "member" : "utils.ArrayValExtensibleLongUnsafe.appendNoExpansion", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#appendNoExpansion(item:Long):Boolean", "kind" : "def"}, {"label" : "append", "tail" : "(item: Long): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.append", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#append(item:Long):Unit", "kind" : "def"}, {"label" : "indexOf", "tail" : "(item: Long): Int", "member" : "utils.ArrayValExtensibleLongUnsafe.indexOf", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#indexOf(item:Long):Int", "kind" : "def"}, {"label" : "containsBy", "tail" : "(item: Long, until: Int, by: (Long) => Int): Boolean", "member" : "utils.ArrayValExtensibleLongUnsafe.containsBy", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#containsBy(item:Long,until:Int,by:Long=>Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(item: Long, until: Int): Boolean", "member" : "utils.ArrayValExtensibleLongUnsafe.contains", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#contains(item:Long,until:Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(item: Long): Boolean", "member" : "utils.ArrayValExtensibleLongUnsafe.contains", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#contains(item:Long):Boolean", "kind" : "def"}, {"label" : "traverseUntil", "tail" : "(itemOp: (Long) => Boolean): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.traverseUntil", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#traverseUntil(itemOp:Long=>Boolean):Unit", "kind" : "def"}, {"label" : "setSize", "tail" : "(newSize: Int): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.setSize", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#setSize(newSize:Int):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "utils.ArrayValExtensibleLongUnsafe.isEmpty", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "removeByItem", "tail" : "(item: Long): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.removeByItem", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#removeByItem(item:Long):Unit", "kind" : "def"}, {"label" : "removeByIndex", "tail" : "(index: Int): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.removeByIndex", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#removeByIndex(index:Int):Unit", "kind" : "def"}, {"label" : "popLast", "tail" : "(): Long", "member" : "utils.ArrayValExtensibleLongUnsafe.popLast", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#popLast:Long", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Long): Unit", "member" : "utils.ArrayValExtensibleLongUnsafe.update", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#update(index:Int,value:Long):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Long", "member" : "utils.ArrayValExtensibleLongUnsafe.get", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#get(index:Long):Long", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Long", "member" : "utils.ArrayValExtensibleLongUnsafe.get", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#get(index:Int):Long", "kind" : "def"}, {"label" : "bufferSize", "tail" : "(): Int", "member" : "utils.ArrayValExtensibleLongUnsafe.bufferSize", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#bufferSize:Int", "kind" : "def"}, {"label" : "contentLen", "tail" : ": Int", "member" : "utils.ArrayValExtensibleLongUnsafe.contentLen", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#contentLen:Int", "kind" : "var"}, {"member" : "utils.ArrayValExtensibleLongUnsafe#<init>", "error" : "unsupported entity"}, {"label" : "buffer", "tail" : ": LongArrayUnsafeS", "member" : "utils.ArrayValExtensibleLongUnsafe.buffer", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#buffer:utils.LongArrayUnsafeS", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/ArrayValExtensibleLongUnsafe.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/ArrayValExtensibleLongUnsafe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/ArrayValExtensibleLongUnsafe.html", "kind" : "class"}, {"name" : "utils.ByteArrayUnsafeS", "shortDescription" : "This is not a general-purpose unsafe byte array class - designed for use in project diff-SAT only!", "object" : "utils\/ByteArrayUnsafeS$.html", "members_class" : [{"label" : "clone", "tail" : "(padding: Int): ByteArrayUnsafeS", "member" : "utils.ByteArrayUnsafeS.clone", "link" : "utils\/ByteArrayUnsafeS.html#clone(padding:Int):utils.ByteArrayUnsafeS", "kind" : "def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.ByteArrayUnsafeS.getAddr", "link" : "utils\/ByteArrayUnsafeS.html#getAddr:Long", "kind" : "def"}, {"label" : "toBitStringLocal", "tail" : "(): String", "member" : "utils.ByteArrayUnsafeS.toBitStringLocal", "link" : "utils\/ByteArrayUnsafeS.html#toBitStringLocal:String", "kind" : "def"}, {"label" : "toBitString", "tail" : "(): String", "member" : "utils.ByteArrayUnsafeS.toBitString", "link" : "utils\/ByteArrayUnsafeS.html#toBitString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "utils.ByteArrayUnsafeS.toString", "link" : "utils\/ByteArrayUnsafeS.html#toString():String", "kind" : "def"}, {"label" : "toArray", "tail" : "(from: Int, until: Int): Array[Byte]", "member" : "utils.ByteArrayUnsafeS.toArray", "link" : "utils\/ByteArrayUnsafeS.html#toArray(from:Int,until:Int):Array[Byte]", "kind" : "def"}, {"label" : "toArray", "tail" : "(l: Int): Array[Byte]", "member" : "utils.ByteArrayUnsafeS.toArray", "link" : "utils\/ByteArrayUnsafeS.html#toArray(l:Int):Array[Byte]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Byte]", "member" : "utils.ByteArrayUnsafeS.toArray", "link" : "utils\/ByteArrayUnsafeS.html#toArray:Array[Byte]", "kind" : "def"}, {"label" : "update", "tail" : "(index: Long, value: Byte): Unit", "member" : "utils.ByteArrayUnsafeS.update", "link" : "utils\/ByteArrayUnsafeS.html#update(index:Long,value:Byte):Unit", "kind" : "def"}, {"label" : "updateMid", "tail" : "(index: Int, value: Byte): Unit", "member" : "utils.ByteArrayUnsafeS.updateMid", "link" : "utils\/ByteArrayUnsafeS.html#updateMid(index:Int,value:Byte):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Byte): Unit", "member" : "utils.ByteArrayUnsafeS.update", "link" : "utils\/ByteArrayUnsafeS.html#update(index:Int,value:Byte):Unit", "kind" : "def"}, {"label" : "first", "tail" : "(): Byte", "member" : "utils.ByteArrayUnsafeS.first", "link" : "utils\/ByteArrayUnsafeS.html#first:Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "utils.ByteArrayUnsafeS.getBoolean", "link" : "utils\/ByteArrayUnsafeS.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Byte", "member" : "utils.ByteArrayUnsafeS.get", "link" : "utils\/ByteArrayUnsafeS.html#get(index:Long):Byte", "kind" : "def"}, {"label" : "getMid", "tail" : "(index: Int): Byte", "member" : "utils.ByteArrayUnsafeS.getMid", "link" : "utils\/ByteArrayUnsafeS.html#getMid(index:Int):Byte", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Byte", "member" : "utils.ByteArrayUnsafeS.get", "link" : "utils\/ByteArrayUnsafeS.html#get(index:Int):Byte", "kind" : "def"}, {"label" : "setFromUnsafeByteArray", "tail" : "(values: ByteArrayUnsafeS): Unit", "member" : "utils.ByteArrayUnsafeS.setFromUnsafeByteArray", "link" : "utils\/ByteArrayUnsafeS.html#setFromUnsafeByteArray(values:utils.ByteArrayUnsafeS):Unit", "kind" : "def"}, {"label" : "setFromArray", "tail" : "(values: Array[Byte]): Unit", "member" : "utils.ByteArrayUnsafeS.setFromArray", "link" : "utils\/ByteArrayUnsafeS.html#setFromArray(values:Array[Byte]):Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "utils.ByteArrayUnsafeS.equals", "link" : "utils\/ByteArrayUnsafeS.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "utils.ByteArrayUnsafeS.hashCode", "link" : "utils\/ByteArrayUnsafeS.html#hashCode():Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.ByteArrayUnsafeS.size", "link" : "utils\/ByteArrayUnsafeS.html#size():Int", "kind" : "def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "utils.ByteArrayUnsafeS.addToGarbage", "link" : "utils\/ByteArrayUnsafeS.html#addToGarbage():Unit", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.ByteArrayUnsafeS.free", "link" : "utils\/ByteArrayUnsafeS.html#free():Unit", "kind" : "def"}, {"label" : "fill", "tail" : "(value: Byte, length: Int): Unit", "member" : "utils.ByteArrayUnsafeS.fill", "link" : "utils\/ByteArrayUnsafeS.html#fill(value:Byte,length:Int):Unit", "kind" : "def"}, {"member" : "utils.ByteArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.ByteArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.ByteArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"label" : "sizev", "tail" : ": Int", "member" : "utils.ByteArrayUnsafeS.sizev", "link" : "utils\/ByteArrayUnsafeS.html#sizev:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/ByteArrayUnsafeS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/ByteArrayUnsafeS.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/ByteArrayUnsafeS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/ByteArrayUnsafeS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/ByteArrayUnsafeS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/ByteArrayUnsafeS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/ByteArrayUnsafeS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ByteArrayUnsafeS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ByteArrayUnsafeS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ByteArrayUnsafeS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/ByteArrayUnsafeS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/ByteArrayUnsafeS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/ByteArrayUnsafeS.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/ByteArrayUnsafeS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/ByteArrayUnsafeS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/ByteArrayUnsafeS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getUnsafe", "tail" : "(): Unsafe", "member" : "utils.ByteArrayUnsafeS.getUnsafe", "link" : "utils\/ByteArrayUnsafeS$.html#getUnsafe:sun.misc.Unsafe", "kind" : "def"}, {"label" : "init", "tail" : "(us: Unsafe): Unit", "member" : "utils.ByteArrayUnsafeS.init", "link" : "utils\/ByteArrayUnsafeS$.html#init(us:sun.misc.Unsafe):Unit", "kind" : "def"}, {"label" : "byteArrayOffset", "tail" : ": Long", "member" : "utils.ByteArrayUnsafeS.byteArrayOffset", "link" : "utils\/ByteArrayUnsafeS$.html#byteArrayOffset:Long", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/ByteArrayUnsafeS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/ByteArrayUnsafeS$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/ByteArrayUnsafeS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/ByteArrayUnsafeS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/ByteArrayUnsafeS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/ByteArrayUnsafeS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/ByteArrayUnsafeS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ByteArrayUnsafeS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ByteArrayUnsafeS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/ByteArrayUnsafeS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/ByteArrayUnsafeS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/ByteArrayUnsafeS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/ByteArrayUnsafeS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/ByteArrayUnsafeS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/ByteArrayUnsafeS$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/ByteArrayUnsafeS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/ByteArrayUnsafeS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/ByteArrayUnsafeS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/ByteArrayUnsafeS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/ByteArrayUnsafeS.html", "kind" : "class"}, {"name" : "utils.DoubleArrayUnsafeS", "shortDescription" : "This is not a general-purpose unsafe array class - designed for use in project diff-SAT only!", "object" : "utils\/DoubleArrayUnsafeS$.html", "members_class" : [{"label" : "clone", "tail" : "(padding: Int): DoubleArrayUnsafeS", "member" : "utils.DoubleArrayUnsafeS.clone", "link" : "utils\/DoubleArrayUnsafeS.html#clone(padding:Int):utils.DoubleArrayUnsafeS", "kind" : "def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.DoubleArrayUnsafeS.getAddr", "link" : "utils\/DoubleArrayUnsafeS.html#getAddr:Long", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "utils.DoubleArrayUnsafeS.toString", "link" : "utils\/DoubleArrayUnsafeS.html#toString():String", "kind" : "def"}, {"label" : "toArray", "tail" : "(from: Int, until: Int): Array[Double]", "member" : "utils.DoubleArrayUnsafeS.toArray", "link" : "utils\/DoubleArrayUnsafeS.html#toArray(from:Int,until:Int):Array[Double]", "kind" : "def"}, {"label" : "toArray", "tail" : "(l: Int): Array[Double]", "member" : "utils.DoubleArrayUnsafeS.toArray", "link" : "utils\/DoubleArrayUnsafeS.html#toArray(l:Int):Array[Double]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "utils.DoubleArrayUnsafeS.toArray", "link" : "utils\/DoubleArrayUnsafeS.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "mulBy", "tail" : "(index: Int, by: Double): Unit", "member" : "utils.DoubleArrayUnsafeS.mulBy", "link" : "utils\/DoubleArrayUnsafeS.html#mulBy(index:Int,by:Double):Unit", "kind" : "final def"}, {"label" : "incBy", "tail" : "(index: Int, by: Double): Double", "member" : "utils.DoubleArrayUnsafeS.incBy", "link" : "utils\/DoubleArrayUnsafeS.html#incBy(index:Int,by:Double):Double", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Long, value: Double): Unit", "member" : "utils.DoubleArrayUnsafeS.update", "link" : "utils\/DoubleArrayUnsafeS.html#update(index:Long,value:Double):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Double): Unit", "member" : "utils.DoubleArrayUnsafeS.update", "link" : "utils\/DoubleArrayUnsafeS.html#update(index:Int,value:Double):Unit", "kind" : "def"}, {"label" : "first", "tail" : "(): Double", "member" : "utils.DoubleArrayUnsafeS.first", "link" : "utils\/DoubleArrayUnsafeS.html#first:Double", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Double", "member" : "utils.DoubleArrayUnsafeS.get", "link" : "utils\/DoubleArrayUnsafeS.html#get(index:Long):Double", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Double", "member" : "utils.DoubleArrayUnsafeS.get", "link" : "utils\/DoubleArrayUnsafeS.html#get(index:Int):Double", "kind" : "def"}, {"label" : "setFromArray", "tail" : "(values: Array[Double]): Unit", "member" : "utils.DoubleArrayUnsafeS.setFromArray", "link" : "utils\/DoubleArrayUnsafeS.html#setFromArray(values:Array[Double]):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.DoubleArrayUnsafeS.size", "link" : "utils\/DoubleArrayUnsafeS.html#size():Int", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.DoubleArrayUnsafeS.free", "link" : "utils\/DoubleArrayUnsafeS.html#free():Unit", "kind" : "def"}, {"member" : "utils.DoubleArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.DoubleArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.DoubleArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"label" : "sizev", "tail" : ": Int", "member" : "utils.DoubleArrayUnsafeS.sizev", "link" : "utils\/DoubleArrayUnsafeS.html#sizev:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/DoubleArrayUnsafeS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/DoubleArrayUnsafeS.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/DoubleArrayUnsafeS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/DoubleArrayUnsafeS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/DoubleArrayUnsafeS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/DoubleArrayUnsafeS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/DoubleArrayUnsafeS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DoubleArrayUnsafeS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DoubleArrayUnsafeS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DoubleArrayUnsafeS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/DoubleArrayUnsafeS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/DoubleArrayUnsafeS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/DoubleArrayUnsafeS.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/DoubleArrayUnsafeS.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/DoubleArrayUnsafeS.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/DoubleArrayUnsafeS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/DoubleArrayUnsafeS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/DoubleArrayUnsafeS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getUnsafe", "tail" : "(): Unsafe", "member" : "utils.DoubleArrayUnsafeS.getUnsafe", "link" : "utils\/DoubleArrayUnsafeS$.html#getUnsafe:sun.misc.Unsafe", "kind" : "def"}, {"label" : "init", "tail" : "(us: Unsafe): Unit", "member" : "utils.DoubleArrayUnsafeS.init", "link" : "utils\/DoubleArrayUnsafeS$.html#init(us:sun.misc.Unsafe):Unit", "kind" : "def"}, {"label" : "doubleArrayOffs", "tail" : ": Int", "member" : "utils.DoubleArrayUnsafeS.doubleArrayOffs", "link" : "utils\/DoubleArrayUnsafeS$.html#doubleArrayOffs:Int", "kind" : "var"}, {"label" : "internalPaddingFact", "tail" : ": Int", "member" : "utils.DoubleArrayUnsafeS.internalPaddingFact", "link" : "utils\/DoubleArrayUnsafeS$.html#internalPaddingFact:Int", "kind" : "var"}, {"label" : "alignment", "tail" : ": Int", "member" : "utils.DoubleArrayUnsafeS.alignment", "link" : "utils\/DoubleArrayUnsafeS$.html#alignment:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/DoubleArrayUnsafeS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/DoubleArrayUnsafeS$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/DoubleArrayUnsafeS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/DoubleArrayUnsafeS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/DoubleArrayUnsafeS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/DoubleArrayUnsafeS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/DoubleArrayUnsafeS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DoubleArrayUnsafeS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DoubleArrayUnsafeS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DoubleArrayUnsafeS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/DoubleArrayUnsafeS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/DoubleArrayUnsafeS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/DoubleArrayUnsafeS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/DoubleArrayUnsafeS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/DoubleArrayUnsafeS$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/DoubleArrayUnsafeS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/DoubleArrayUnsafeS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/DoubleArrayUnsafeS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/DoubleArrayUnsafeS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/DoubleArrayUnsafeS.html", "kind" : "class"}, {"name" : "utils.DualIndexedIntSet", "shortDescription" : "Set of positive integers, using a dual index structure for looking up the index of an elementin O(1) (O(1) add (unsorted), O(1) remove).", "members_class" : [{"label" : "isEmpty", "tail" : "(): Boolean", "member" : "utils.DualIndexedIntSet.isEmpty", "link" : "utils\/DualIndexedIntSet.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.DualIndexedIntSet.size", "link" : "utils\/DualIndexedIntSet.html#size():Int", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, item: Int): Unit", "member" : "utils.DualIndexedIntSet.update", "link" : "utils\/DualIndexedIntSet.html#update(index:Int,item:Int):Unit", "kind" : "def"}, {"label" : "removeLast", "tail" : "(): Unit", "member" : "utils.DualIndexedIntSet.removeLast", "link" : "utils\/DualIndexedIntSet.html#removeLast():Unit", "kind" : "def"}, {"label" : "getRemoveLast", "tail" : "(): Int", "member" : "utils.DualIndexedIntSet.getRemoveLast", "link" : "utils\/DualIndexedIntSet.html#getRemoveLast():Int", "kind" : "def"}, {"label" : "getRemoveRandom", "tail" : "(): Int", "member" : "utils.DualIndexedIntSet.getRemoveRandom", "link" : "utils\/DualIndexedIntSet.html#getRemoveRandom():Int", "kind" : "def"}, {"label" : "getLast", "tail" : "(): Int", "member" : "utils.DualIndexedIntSet.getLast", "link" : "utils\/DualIndexedIntSet.html#getLast():Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(): Int", "member" : "utils.DualIndexedIntSet.getFirst", "link" : "utils\/DualIndexedIntSet.html#getFirst():Int", "kind" : "def"}, {"label" : "getRandomOpt", "tail" : "(): Option[Int]", "member" : "utils.DualIndexedIntSet.getRandomOpt", "link" : "utils\/DualIndexedIntSet.html#getRandomOpt():Option[Int]", "kind" : "def"}, {"label" : "getRandom", "tail" : "(): Int", "member" : "utils.DualIndexedIntSet.getRandom", "link" : "utils\/DualIndexedIntSet.html#getRandom():Int", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Int", "member" : "utils.DualIndexedIntSet.get", "link" : "utils\/DualIndexedIntSet.html#get(index:Int):Int", "kind" : "def"}, {"label" : "removeNR", "tail" : "(item: Int): Unit", "member" : "utils.DualIndexedIntSet.removeNR", "link" : "utils\/DualIndexedIntSet.html#removeNR(item:Int):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(item: Int): Boolean", "member" : "utils.DualIndexedIntSet.remove", "link" : "utils\/DualIndexedIntSet.html#remove(item:Int):Boolean", "kind" : "def"}, {"label" : "removeAt", "tail" : "(index: Int): Int", "member" : "utils.DualIndexedIntSet.removeAt", "link" : "utils\/DualIndexedIntSet.html#removeAt(index:Int):Int", "kind" : "def"}, {"label" : "lastItem", "tail" : ": Int", "member" : "utils.DualIndexedIntSet.lastItem", "link" : "utils\/DualIndexedIntSet.html#lastItem:Int", "kind" : "var"}, {"label" : "item", "tail" : ": Int", "member" : "utils.DualIndexedIntSet.item", "link" : "utils\/DualIndexedIntSet.html#item:Int", "kind" : "var"}, {"label" : "sort", "tail" : "(): Unit", "member" : "utils.DualIndexedIntSet.sort", "link" : "utils\/DualIndexedIntSet.html#sort():Unit", "kind" : "def"}, {"label" : "removeSorted", "tail" : "(item: Int): Boolean", "member" : "utils.DualIndexedIntSet.removeSorted", "link" : "utils\/DualIndexedIntSet.html#removeSorted(item:Int):Boolean", "kind" : "def"}, {"label" : "updateScoreSorted", "tail" : "(item: Int, newScore: Double): Unit", "member" : "utils.DualIndexedIntSet.updateScoreSorted", "link" : "utils\/DualIndexedIntSet.html#updateScoreSorted(item:Int,newScore:Double):Unit", "kind" : "def"}, {"label" : "nudgeDownSorted_", "tail" : "(item: Int, indexOfItem: Int): Unit", "member" : "utils.DualIndexedIntSet.nudgeDownSorted_", "link" : "utils\/DualIndexedIntSet.html#nudgeDownSorted_(item:Int,indexOfItem:Int):Unit", "kind" : "def"}, {"label" : "nudgeUpSorted_", "tail" : "(item: Int, indexOfItem: Int): Unit", "member" : "utils.DualIndexedIntSet.nudgeUpSorted_", "link" : "utils\/DualIndexedIntSet.html#nudgeUpSorted_(item:Int,indexOfItem:Int):Unit", "kind" : "def"}, {"label" : "findIndexSorted_", "tail" : "(item: Int, bracketL: Int, bracketR: Int): Int", "member" : "utils.DualIndexedIntSet.findIndexSorted_", "link" : "utils\/DualIndexedIntSet.html#findIndexSorted_(item:Int,bracketL:Int,bracketR:Int):Int", "kind" : "def"}, {"label" : "findIndexSorted", "tail" : "(item: Int): Int", "member" : "utils.DualIndexedIntSet.findIndexSorted", "link" : "utils\/DualIndexedIntSet.html#findIndexSorted(item:Int):Int", "kind" : "def"}, {"label" : "findInsertionIndexSorted_", "tail" : "(item: Int, fromIndex: Int, toIndex: Int): Int", "member" : "utils.DualIndexedIntSet.findInsertionIndexSorted_", "link" : "utils\/DualIndexedIntSet.html#findInsertionIndexSorted_(item:Int,fromIndex:Int,toIndex:Int):Int", "kind" : "def"}, {"label" : "addItemSorted_", "tail" : "(item: Int, fromIndex: Int, toIndex: Int): Boolean", "member" : "utils.DualIndexedIntSet.addItemSorted_", "link" : "utils\/DualIndexedIntSet.html#addItemSorted_(item:Int,fromIndex:Int,toIndex:Int):Boolean", "kind" : "def"}, {"label" : "addSorted", "tail" : "(item: Int): Boolean", "member" : "utils.DualIndexedIntSet.addSorted", "link" : "utils\/DualIndexedIntSet.html#addSorted(item:Int):Boolean", "kind" : "def"}, {"label" : "isSorted", "tail" : "(startIndex: Int): Boolean", "member" : "utils.DualIndexedIntSet.isSorted", "link" : "utils\/DualIndexedIntSet.html#isSorted(startIndex:Int):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(item: Int): Unit", "member" : "utils.DualIndexedIntSet.add", "link" : "utils\/DualIndexedIntSet.html#add(item:Int):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(item: Int): Boolean", "member" : "utils.DualIndexedIntSet.contains", "link" : "utils\/DualIndexedIntSet.html#contains(item:Int):Boolean", "kind" : "def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "utils.DualIndexedIntSet.addToGarbage", "link" : "utils\/DualIndexedIntSet.html#addToGarbage():Unit", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.DualIndexedIntSet.free", "link" : "utils\/DualIndexedIntSet.html#free():Unit", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "utils.DualIndexedIntSet.clear", "link" : "utils\/DualIndexedIntSet.html#clear():Unit", "kind" : "def"}, {"label" : "dtaLength", "tail" : ": Int", "member" : "utils.DualIndexedIntSet.dtaLength", "link" : "utils\/DualIndexedIntSet.html#dtaLength:Int", "kind" : "var"}, {"label" : "idx", "tail" : ": IntArrayUnsafeS", "member" : "utils.DualIndexedIntSet.idx", "link" : "utils\/DualIndexedIntSet.html#idx:utils.IntArrayUnsafeS", "kind" : "var"}, {"label" : "dta", "tail" : ": IntArrayUnsafeS", "member" : "utils.DualIndexedIntSet.dta", "link" : "utils\/DualIndexedIntSet.html#dta:utils.IntArrayUnsafeS", "kind" : "var"}, {"member" : "utils.DualIndexedIntSet#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/DualIndexedIntSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/DualIndexedIntSet.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/DualIndexedIntSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/DualIndexedIntSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/DualIndexedIntSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/DualIndexedIntSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/DualIndexedIntSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DualIndexedIntSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DualIndexedIntSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/DualIndexedIntSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/DualIndexedIntSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/DualIndexedIntSet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/DualIndexedIntSet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/DualIndexedIntSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/DualIndexedIntSet.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/DualIndexedIntSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/DualIndexedIntSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/DualIndexedIntSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/DualIndexedIntSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/DualIndexedIntSet.html", "kind" : "class"}, {"name" : "utils.FiniteQueue", "shortDescription" : "", "members_class" : [{"label" : "dequeue", "tail" : "(): A", "member" : "utils.FiniteQueue.dequeue", "link" : "utils\/FiniteQueue.html#dequeue:A", "kind" : "def"}, {"label" : "randomElement", "tail" : "(limit: Int): A", "member" : "utils.FiniteQueue.randomElement", "link" : "utils\/FiniteQueue.html#randomElement(limit:Int):A", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "utils.FiniteQueue.isEmpty", "link" : "utils\/FiniteQueue.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.FiniteQueue.size", "link" : "utils\/FiniteQueue.html#size:Int", "kind" : "def"}, {"label" : "front", "tail" : "(): A", "member" : "utils.FiniteQueue.front", "link" : "utils\/FiniteQueue.html#front:A", "kind" : "def"}, {"label" : "enqueueFinite", "tail" : "(elem: A, maxSize: Int): Queue[A]", "member" : "utils.FiniteQueue.enqueueFinite", "link" : "utils\/FiniteQueue.html#enqueueFinite(elem:A,maxSize:Int):scala.collection.mutable.Queue[A]", "kind" : "def"}, {"member" : "utils.FiniteQueue#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/FiniteQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/FiniteQueue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/FiniteQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/FiniteQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/FiniteQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/FiniteQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/FiniteQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FiniteQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FiniteQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FiniteQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/FiniteQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/FiniteQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/FiniteQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/FiniteQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/FiniteQueue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/FiniteQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/FiniteQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/FiniteQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/FiniteQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/FiniteQueue.html", "kind" : "class"}, {"name" : "utils.FloatArrayUnsafeS", "shortDescription" : "This is not a general-purpose unsafe array class - designed for use in project diff-SAT only!", "object" : "utils\/FloatArrayUnsafeS$.html", "members_class" : [{"label" : "clone", "tail" : "(padding: Int): FloatArrayUnsafeS", "member" : "utils.FloatArrayUnsafeS.clone", "link" : "utils\/FloatArrayUnsafeS.html#clone(padding:Int):utils.FloatArrayUnsafeS", "kind" : "def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.FloatArrayUnsafeS.getAddr", "link" : "utils\/FloatArrayUnsafeS.html#getAddr:Long", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "utils.FloatArrayUnsafeS.toString", "link" : "utils\/FloatArrayUnsafeS.html#toString():String", "kind" : "def"}, {"label" : "toArray", "tail" : "(from: Int, until: Int): Array[Float]", "member" : "utils.FloatArrayUnsafeS.toArray", "link" : "utils\/FloatArrayUnsafeS.html#toArray(from:Int,until:Int):Array[Float]", "kind" : "def"}, {"label" : "toArray", "tail" : "(l: Int): Array[Float]", "member" : "utils.FloatArrayUnsafeS.toArray", "link" : "utils\/FloatArrayUnsafeS.html#toArray(l:Int):Array[Float]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Float]", "member" : "utils.FloatArrayUnsafeS.toArray", "link" : "utils\/FloatArrayUnsafeS.html#toArray:Array[Float]", "kind" : "def"}, {"label" : "mulBy", "tail" : "(index: Int, by: Float): Unit", "member" : "utils.FloatArrayUnsafeS.mulBy", "link" : "utils\/FloatArrayUnsafeS.html#mulBy(index:Int,by:Float):Unit", "kind" : "final def"}, {"label" : "incBy", "tail" : "(index: Int, by: Float): Float", "member" : "utils.FloatArrayUnsafeS.incBy", "link" : "utils\/FloatArrayUnsafeS.html#incBy(index:Int,by:Float):Float", "kind" : "final def"}, {"label" : "update", "tail" : "(index: Long, value: Float): Unit", "member" : "utils.FloatArrayUnsafeS.update", "link" : "utils\/FloatArrayUnsafeS.html#update(index:Long,value:Float):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Float): Unit", "member" : "utils.FloatArrayUnsafeS.update", "link" : "utils\/FloatArrayUnsafeS.html#update(index:Int,value:Float):Unit", "kind" : "def"}, {"label" : "first", "tail" : "(): Float", "member" : "utils.FloatArrayUnsafeS.first", "link" : "utils\/FloatArrayUnsafeS.html#first:Float", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Float", "member" : "utils.FloatArrayUnsafeS.get", "link" : "utils\/FloatArrayUnsafeS.html#get(index:Long):Float", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Float", "member" : "utils.FloatArrayUnsafeS.get", "link" : "utils\/FloatArrayUnsafeS.html#get(index:Int):Float", "kind" : "def"}, {"label" : "setFromArray", "tail" : "(values: Array[Float]): Unit", "member" : "utils.FloatArrayUnsafeS.setFromArray", "link" : "utils\/FloatArrayUnsafeS.html#setFromArray(values:Array[Float]):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.FloatArrayUnsafeS.size", "link" : "utils\/FloatArrayUnsafeS.html#size():Int", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.FloatArrayUnsafeS.free", "link" : "utils\/FloatArrayUnsafeS.html#free():Unit", "kind" : "def"}, {"member" : "utils.FloatArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.FloatArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.FloatArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"label" : "sizev", "tail" : ": Int", "member" : "utils.FloatArrayUnsafeS.sizev", "link" : "utils\/FloatArrayUnsafeS.html#sizev:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/FloatArrayUnsafeS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/FloatArrayUnsafeS.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/FloatArrayUnsafeS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/FloatArrayUnsafeS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/FloatArrayUnsafeS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/FloatArrayUnsafeS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/FloatArrayUnsafeS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FloatArrayUnsafeS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FloatArrayUnsafeS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FloatArrayUnsafeS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/FloatArrayUnsafeS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/FloatArrayUnsafeS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/FloatArrayUnsafeS.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/FloatArrayUnsafeS.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/FloatArrayUnsafeS.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/FloatArrayUnsafeS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/FloatArrayUnsafeS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/FloatArrayUnsafeS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getUnsafe", "tail" : "(): Unsafe", "member" : "utils.FloatArrayUnsafeS.getUnsafe", "link" : "utils\/FloatArrayUnsafeS$.html#getUnsafe:sun.misc.Unsafe", "kind" : "def"}, {"label" : "init", "tail" : "(us: Unsafe): Unit", "member" : "utils.FloatArrayUnsafeS.init", "link" : "utils\/FloatArrayUnsafeS$.html#init(us:sun.misc.Unsafe):Unit", "kind" : "def"}, {"label" : "floatArrayOffs", "tail" : ": Int", "member" : "utils.FloatArrayUnsafeS.floatArrayOffs", "link" : "utils\/FloatArrayUnsafeS$.html#floatArrayOffs:Int", "kind" : "var"}, {"label" : "internalPaddingFact", "tail" : ": Int", "member" : "utils.FloatArrayUnsafeS.internalPaddingFact", "link" : "utils\/FloatArrayUnsafeS$.html#internalPaddingFact:Int", "kind" : "var"}, {"label" : "alignment", "tail" : ": Int", "member" : "utils.FloatArrayUnsafeS.alignment", "link" : "utils\/FloatArrayUnsafeS$.html#alignment:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/FloatArrayUnsafeS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/FloatArrayUnsafeS$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/FloatArrayUnsafeS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/FloatArrayUnsafeS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/FloatArrayUnsafeS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/FloatArrayUnsafeS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/FloatArrayUnsafeS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FloatArrayUnsafeS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FloatArrayUnsafeS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/FloatArrayUnsafeS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/FloatArrayUnsafeS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/FloatArrayUnsafeS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/FloatArrayUnsafeS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/FloatArrayUnsafeS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/FloatArrayUnsafeS$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/FloatArrayUnsafeS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/FloatArrayUnsafeS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/FloatArrayUnsafeS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/FloatArrayUnsafeS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/FloatArrayUnsafeS.html", "kind" : "class"}, {"name" : "utils.IntArrayLeanUS", "shortDescription" : "This is not a general-purpose unsafe array class - designed for use in project diff-SAT only.", "object" : "utils\/IntArrayLeanUS$.html", "members_class" : [{"label" : "subsetOfExceptOne", "tail" : "(nogoodB: IntArrayLeanUS, ignoreIndexInThis: Int): Boolean", "member" : "utils.IntArrayLeanUS.subsetOfExceptOne", "link" : "utils\/IntArrayLeanUS.html#subsetOfExceptOne(nogoodB:utils.IntArrayLeanUS,ignoreIndexInThis:Int):Boolean", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(nogoodB: IntArrayLeanUS): Boolean", "member" : "utils.IntArrayLeanUS.subsetOf", "link" : "utils\/IntArrayLeanUS.html#subsetOf(nogoodB:utils.IntArrayLeanUS):Boolean", "kind" : "def"}, {"label" : "sortBy", "tail" : "(by: (Int) => Float): Unit", "member" : "utils.IntArrayLeanUS.sortBy", "link" : "utils\/IntArrayLeanUS.html#sortBy(by:Int=>Float):Unit", "kind" : "def"}, {"label" : "forAll", "tail" : "(predicate: (Int) => Boolean): Boolean", "member" : "utils.IntArrayLeanUS.forAll", "link" : "utils\/IntArrayLeanUS.html#forAll(predicate:Int=>Boolean):Boolean", "kind" : "def"}, {"label" : "forEach", "tail" : "(sideEffect: (Int) => Any): Unit", "member" : "utils.IntArrayLeanUS.forEach", "link" : "utils\/IntArrayLeanUS.html#forEach(sideEffect:Int=>Any):Unit", "kind" : "def"}, {"label" : "removeDuplicatesGlob", "tail" : "(): Unit", "member" : "utils.IntArrayLeanUS.removeDuplicatesGlob", "link" : "utils\/IntArrayLeanUS.html#removeDuplicatesGlob():Unit", "kind" : "def"}, {"label" : "revert", "tail" : "(): Unit", "member" : "utils.IntArrayLeanUS.revert", "link" : "utils\/IntArrayLeanUS.html#revert():Unit", "kind" : "def"}, {"label" : "removeItem", "tail" : "(item: Int): Unit", "member" : "utils.IntArrayLeanUS.removeItem", "link" : "utils\/IntArrayLeanUS.html#removeItem(item:Int):Unit", "kind" : "def"}, {"label" : "cloneToIntArrayUnsafeS", "tail" : "(): IntArrayUnsafeS", "member" : "utils.IntArrayLeanUS.cloneToIntArrayUnsafeS", "link" : "utils\/IntArrayLeanUS.html#cloneToIntArrayUnsafeS():utils.IntArrayUnsafeS", "kind" : "def"}, {"label" : "cloneToAddr", "tail" : "(targetAddr: Long, offset: Int): Long", "member" : "utils.IntArrayLeanUS.cloneToAddr", "link" : "utils\/IntArrayLeanUS.html#cloneToAddr(targetAddr:Long,offset:Int):Long", "kind" : "def"}, {"label" : "cloneToNewAddr", "tail" : "(extraSizePre: Int, extraSizePost: Int): Long", "member" : "utils.IntArrayLeanUS.cloneToNewAddr", "link" : "utils\/IntArrayLeanUS.html#cloneToNewAddr(extraSizePre:Int,extraSizePost:Int):Long", "kind" : "def"}, {"label" : "count", "tail" : "(predicate: (Int) => Boolean, maxIndexExclusive: Int): Int", "member" : "utils.IntArrayLeanUS.count", "link" : "utils\/IntArrayLeanUS.html#count(predicate:Int=>Boolean,maxIndexExclusive:Int):Int", "kind" : "def"}, {"label" : "count", "tail" : "(item: Int): Int", "member" : "utils.IntArrayLeanUS.count", "link" : "utils\/IntArrayLeanUS.html#count(item:Int):Int", "kind" : "def"}, {"label" : "find", "tail" : "(predicate: (Int) => Boolean, maxIndexExclusive: Int): Int", "member" : "utils.IntArrayLeanUS.find", "link" : "utils\/IntArrayLeanUS.html#find(predicate:Int=>Boolean,maxIndexExclusive:Int):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(predicate: (Int) => Boolean, maxIndexExclusive: Int): Boolean", "member" : "utils.IntArrayLeanUS.exists", "link" : "utils\/IntArrayLeanUS.html#exists(predicate:Int=>Boolean,maxIndexExclusive:Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: Int, maxIndexExclusive: Int): Boolean", "member" : "utils.IntArrayLeanUS.contains", "link" : "utils\/IntArrayLeanUS.html#contains(x:Int,maxIndexExclusive:Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: Int, maxAddrExclusive: Long): Boolean", "member" : "utils.IntArrayLeanUS.contains", "link" : "utils\/IntArrayLeanUS.html#contains(x:Int,maxAddrExclusive:Long):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(what: (Int) => Unit): Unit", "member" : "utils.IntArrayLeanUS.foreach", "link" : "utils\/IntArrayLeanUS.html#foreach(what:Int=>Unit):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "utils.IntArrayLeanUS.toString", "link" : "utils\/IntArrayLeanUS.html#toString():String", "kind" : "def"}, {"label" : "fill", "tail" : "(value: Byte, length: Int): Unit", "member" : "utils.IntArrayLeanUS.fill", "link" : "utils\/IntArrayLeanUS.html#fill(value:Byte,length:Int):Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(from: Int, until: Int): Array[Int]", "member" : "utils.IntArrayLeanUS.toArray", "link" : "utils\/IntArrayLeanUS.html#toArray(from:Int,until:Int):Array[Int]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Int]", "member" : "utils.IntArrayLeanUS.toArray", "link" : "utils\/IntArrayLeanUS.html#toArray:Array[Int]", "kind" : "def"}, {"label" : "binSearch", "tail" : "(key: Int, fromIndex: Int, untilIndex: Int): Int", "member" : "utils.IntArrayLeanUS.binSearch", "link" : "utils\/IntArrayLeanUS.html#binSearch(key:Int,fromIndex:Int,untilIndex:Int):Int", "kind" : "def"}, {"label" : "shiftRightAll", "tail" : "(by: Int): Unit", "member" : "utils.IntArrayLeanUS.shiftRightAll", "link" : "utils\/IntArrayLeanUS.html#shiftRightAll(by:Int):Unit", "kind" : "def"}, {"label" : "incBy", "tail" : "(index: Int, x: Int): Int", "member" : "utils.IntArrayLeanUS.incBy", "link" : "utils\/IntArrayLeanUS.html#incBy(index:Int,x:Int):Int", "kind" : "def"}, {"label" : "dec", "tail" : "(index: Int): Int", "member" : "utils.IntArrayLeanUS.dec", "link" : "utils\/IntArrayLeanUS.html#dec(index:Int):Int", "kind" : "def"}, {"label" : "inc", "tail" : "(index: Int): Int", "member" : "utils.IntArrayLeanUS.inc", "link" : "utils\/IntArrayLeanUS.html#inc(index:Int):Int", "kind" : "def"}, {"label" : "update", "tail" : "(index: Long, value: Int): Unit", "member" : "utils.IntArrayLeanUS.update", "link" : "utils\/IntArrayLeanUS.html#update(index:Long,value:Int):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Int): Unit", "member" : "utils.IntArrayLeanUS.update", "link" : "utils\/IntArrayLeanUS.html#update(index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "second", "tail" : "(): Int", "member" : "utils.IntArrayLeanUS.second", "link" : "utils\/IntArrayLeanUS.html#second:Int", "kind" : "def"}, {"label" : "first", "tail" : "(): Int", "member" : "utils.IntArrayLeanUS.first", "link" : "utils\/IntArrayLeanUS.html#first:Int", "kind" : "def"}, {"label" : "geta", "tail" : "(index: Long): Int", "member" : "utils.IntArrayLeanUS.geta", "link" : "utils\/IntArrayLeanUS.html#geta(index:Long):Int", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Int", "member" : "utils.IntArrayLeanUS.get", "link" : "utils\/IntArrayLeanUS.html#get(index:Long):Int", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Int", "member" : "utils.IntArrayLeanUS.get", "link" : "utils\/IntArrayLeanUS.html#get(index:Int):Int", "kind" : "def"}, {"label" : "compareWithZeroAndUpdate", "tail" : "(index: Int, newValue: Int): Boolean", "member" : "utils.IntArrayLeanUS.compareWithZeroAndUpdate", "link" : "utils\/IntArrayLeanUS.html#compareWithZeroAndUpdate(index:Int,newValue:Int):Boolean", "kind" : "def"}, {"label" : "compareAndUpdate", "tail" : "(index: Int, expectedValue: Int, newValue: Int): Boolean", "member" : "utils.IntArrayLeanUS.compareAndUpdate", "link" : "utils\/IntArrayLeanUS.html#compareAndUpdate(index:Int,expectedValue:Int,newValue:Int):Boolean", "kind" : "def"}, {"label" : "setFromUnsafeMemory", "tail" : "(sourceAddr: Long, sourceSize: Int): Unit", "member" : "utils.IntArrayLeanUS.setFromUnsafeMemory", "link" : "utils\/IntArrayLeanUS.html#setFromUnsafeMemory(sourceAddr:Long,sourceSize:Int):Unit", "kind" : "def"}, {"label" : "setFromIntArray", "tail" : "(values: Array[Int]): Unit", "member" : "utils.IntArrayLeanUS.setFromIntArray", "link" : "utils\/IntArrayLeanUS.html#setFromIntArray(values:Array[Int]):Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "utils.IntArrayLeanUS.equals", "link" : "utils\/IntArrayLeanUS.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "utils.IntArrayLeanUS.hashCode", "link" : "utils\/IntArrayLeanUS.html#hashCode():Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.IntArrayLeanUS.size", "link" : "utils\/IntArrayLeanUS.html#size():Int", "kind" : "def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "utils.IntArrayLeanUS.addToGarbage", "link" : "utils\/IntArrayLeanUS.html#addToGarbage():Unit", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.IntArrayLeanUS.free", "link" : "utils\/IntArrayLeanUS.html#free():Unit", "kind" : "def"}, {"member" : "utils.IntArrayLeanUS#<init>", "error" : "unsupported entity"}, {"member" : "utils.IntArrayLeanUS#<init>", "error" : "unsupported entity"}, {"member" : "utils.IntArrayLeanUS#<init>", "error" : "unsupported entity"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.IntArrayLeanUS.getAddr", "link" : "utils\/IntArrayLeanUS.html#getAddr:Long", "kind" : "def"}, {"member" : "utils.IntArrayLeanUS#<init>", "error" : "unsupported entity"}, {"label" : "sizev", "tail" : ": Int", "member" : "utils.IntArrayLeanUS.sizev", "link" : "utils\/IntArrayLeanUS.html#sizev:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/IntArrayLeanUS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/IntArrayLeanUS.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/IntArrayLeanUS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/IntArrayLeanUS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/IntArrayLeanUS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/IntArrayLeanUS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/IntArrayLeanUS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayLeanUS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayLeanUS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayLeanUS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/IntArrayLeanUS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/IntArrayLeanUS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/IntArrayLeanUS.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/IntArrayLeanUS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/IntArrayLeanUS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/IntArrayLeanUS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "twinSortIntLongByLongAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, by: (Long) => Float, until: Int, addrTwin: Long): Unit", "member" : "utils.IntArrayLeanUS.twinSortIntLongByLongAtAddr", "link" : "utils\/IntArrayLeanUS$.html#twinSortIntLongByLongAtAddr(unsafe:sun.misc.Unsafe,addr:Long,by:Long=>Float,until:Int,addrTwin:Long):Unit", "kind" : "def"}, {"label" : "twinSortIntLongByIntAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, by: (Int) => Double, until: Int, addrTwin: Long): Unit", "member" : "utils.IntArrayLeanUS.twinSortIntLongByIntAtAddr", "link" : "utils\/IntArrayLeanUS$.html#twinSortIntLongByIntAtAddr(unsafe:sun.misc.Unsafe,addr:Long,by:Int=>Double,until:Int,addrTwin:Long):Unit", "kind" : "def"}, {"label" : "sortByAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, by: (Int) => Float, until: Int): Unit", "member" : "utils.IntArrayLeanUS.sortByAtAddr", "link" : "utils\/IntArrayLeanUS$.html#sortByAtAddr(unsafe:sun.misc.Unsafe,addr:Long,by:Int=>Float,until:Int):Unit", "kind" : "def"}, {"label" : "updateAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, index: Int, value: Int): Unit", "member" : "utils.IntArrayLeanUS.updateAtAddr", "link" : "utils\/IntArrayLeanUS$.html#updateAtAddr(unsafe:sun.misc.Unsafe,addr:Long,index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "getAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, index: Int): Int", "member" : "utils.IntArrayLeanUS.getAtAddr", "link" : "utils\/IntArrayLeanUS$.html#getAtAddr(unsafe:sun.misc.Unsafe,addr:Long,index:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/IntArrayLeanUS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/IntArrayLeanUS$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/IntArrayLeanUS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/IntArrayLeanUS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/IntArrayLeanUS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/IntArrayLeanUS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/IntArrayLeanUS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayLeanUS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayLeanUS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayLeanUS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/IntArrayLeanUS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/IntArrayLeanUS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/IntArrayLeanUS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/IntArrayLeanUS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/IntArrayLeanUS$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/IntArrayLeanUS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/IntArrayLeanUS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/IntArrayLeanUS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/IntArrayLeanUS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/IntArrayLeanUS.html", "kind" : "class"}, {"name" : "utils.IntArrayUnsafeS", "shortDescription" : "This is not a general-purpose unsafe array class - designed for use in project diff-SAT only.", "object" : "utils\/IntArrayUnsafeS$.html", "members_class" : [{"label" : "subsetOfExceptOne", "tail" : "(nogoodB: IntArrayUnsafeS, ignoreIndexInThis: Int): Boolean", "member" : "utils.IntArrayUnsafeS.subsetOfExceptOne", "link" : "utils\/IntArrayUnsafeS.html#subsetOfExceptOne(nogoodB:utils.IntArrayUnsafeS,ignoreIndexInThis:Int):Boolean", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(nogoodB: IntArrayUnsafeS): Boolean", "member" : "utils.IntArrayUnsafeS.subsetOf", "link" : "utils\/IntArrayUnsafeS.html#subsetOf(nogoodB:utils.IntArrayUnsafeS):Boolean", "kind" : "def"}, {"label" : "sortBy", "tail" : "(by: (Int) => Float): Unit", "member" : "utils.IntArrayUnsafeS.sortBy", "link" : "utils\/IntArrayUnsafeS.html#sortBy(by:Int=>Float):Unit", "kind" : "def"}, {"label" : "forAll", "tail" : "(predicate: (Int) => Boolean): Boolean", "member" : "utils.IntArrayUnsafeS.forAll", "link" : "utils\/IntArrayUnsafeS.html#forAll(predicate:Int=>Boolean):Boolean", "kind" : "def"}, {"label" : "forEach", "tail" : "(sideEffect: (Int) => Any): Unit", "member" : "utils.IntArrayUnsafeS.forEach", "link" : "utils\/IntArrayUnsafeS.html#forEach(sideEffect:Int=>Any):Unit", "kind" : "def"}, {"label" : "removeDuplicatesGlob", "tail" : "(): Unit", "member" : "utils.IntArrayUnsafeS.removeDuplicatesGlob", "link" : "utils\/IntArrayUnsafeS.html#removeDuplicatesGlob():Unit", "kind" : "def"}, {"label" : "removeDuplicates", "tail" : "(): Unit", "member" : "utils.IntArrayUnsafeS.removeDuplicates", "link" : "utils\/IntArrayUnsafeS.html#removeDuplicates():Unit", "kind" : "def"}, {"label" : "revert", "tail" : "(): Unit", "member" : "utils.IntArrayUnsafeS.revert", "link" : "utils\/IntArrayUnsafeS.html#revert():Unit", "kind" : "def"}, {"label" : "removeItem", "tail" : "(item: Int): Unit", "member" : "utils.IntArrayUnsafeS.removeItem", "link" : "utils\/IntArrayUnsafeS.html#removeItem(item:Int):Unit", "kind" : "def"}, {"label" : "removeItemAll", "tail" : "(item: Int): Unit", "member" : "utils.IntArrayUnsafeS.removeItemAll", "link" : "utils\/IntArrayUnsafeS.html#removeItemAll(item:Int):Unit", "kind" : "def"}, {"label" : "cloneToAddr", "tail" : "(targetAddr: Long, offset: Int): Long", "member" : "utils.IntArrayUnsafeS.cloneToAddr", "link" : "utils\/IntArrayUnsafeS.html#cloneToAddr(targetAddr:Long,offset:Int):Long", "kind" : "def"}, {"label" : "cloneTo", "tail" : "(targetAddr: Long, offset: Int): IntArrayUnsafeS", "member" : "utils.IntArrayUnsafeS.cloneTo", "link" : "utils\/IntArrayUnsafeS.html#cloneTo(targetAddr:Long,offset:Int):utils.IntArrayUnsafeS", "kind" : "def"}, {"label" : "cloneToNew", "tail" : "(padding: Int, keep: Int, cutOff: Boolean): IntArrayUnsafeS", "member" : "utils.IntArrayUnsafeS.cloneToNew", "link" : "utils\/IntArrayUnsafeS.html#cloneToNew(padding:Int,keep:Int,cutOff:Boolean):utils.IntArrayUnsafeS", "kind" : "def"}, {"label" : "cloneToNewWithSizeAddrFromUntilRRR", "tail" : "(from: Int, until: Int, extraInfo: Int): Long", "member" : "utils.IntArrayUnsafeS.cloneToNewWithSizeAddrFromUntilRRR", "link" : "utils\/IntArrayUnsafeS.html#cloneToNewWithSizeAddrFromUntilRRR(from:Int,until:Int,extraInfo:Int):Long", "kind" : "def"}, {"label" : "cloneToNewAddrFromUntil", "tail" : "(from: Int, until: Int): Long", "member" : "utils.IntArrayUnsafeS.cloneToNewAddrFromUntil", "link" : "utils\/IntArrayUnsafeS.html#cloneToNewAddrFromUntil(from:Int,until:Int):Long", "kind" : "def"}, {"label" : "cloneToNewAddr", "tail" : "(extraSizePre: Int, extraSizePost: Int): Long", "member" : "utils.IntArrayUnsafeS.cloneToNewAddr", "link" : "utils\/IntArrayUnsafeS.html#cloneToNewAddr(extraSizePre:Int,extraSizePost:Int):Long", "kind" : "def"}, {"label" : "clone", "tail" : "(extraSizePre: Int, extraSizePost: Int): IntArrayUnsafeS", "member" : "utils.IntArrayUnsafeS.clone", "link" : "utils\/IntArrayUnsafeS.html#clone(extraSizePre:Int,extraSizePost:Int):utils.IntArrayUnsafeS", "kind" : "def"}, {"label" : "count", "tail" : "(predicate: (Int) => Boolean, maxIndexExclusive: Int): Int", "member" : "utils.IntArrayUnsafeS.count", "link" : "utils\/IntArrayUnsafeS.html#count(predicate:Int=>Boolean,maxIndexExclusive:Int):Int", "kind" : "def"}, {"label" : "count", "tail" : "(item: Int): Int", "member" : "utils.IntArrayUnsafeS.count", "link" : "utils\/IntArrayUnsafeS.html#count(item:Int):Int", "kind" : "def"}, {"label" : "find", "tail" : "(predicate: (Int) => Boolean, maxIndexExclusive: Int): Int", "member" : "utils.IntArrayUnsafeS.find", "link" : "utils\/IntArrayUnsafeS.html#find(predicate:Int=>Boolean,maxIndexExclusive:Int):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(predicate: (Int) => Boolean, maxIndexExclusive: Int): Boolean", "member" : "utils.IntArrayUnsafeS.exists", "link" : "utils\/IntArrayUnsafeS.html#exists(predicate:Int=>Boolean,maxIndexExclusive:Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: Int, maxIndexExclusive: Int): Boolean", "member" : "utils.IntArrayUnsafeS.contains", "link" : "utils\/IntArrayUnsafeS.html#contains(x:Int,maxIndexExclusive:Int):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(x: Int, maxAddrExclusive: Long): Boolean", "member" : "utils.IntArrayUnsafeS.contains", "link" : "utils\/IntArrayUnsafeS.html#contains(x:Int,maxAddrExclusive:Long):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(what: (Int) => Unit): Unit", "member" : "utils.IntArrayUnsafeS.foreach", "link" : "utils\/IntArrayUnsafeS.html#foreach(what:Int=>Unit):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "utils.IntArrayUnsafeS.toString", "link" : "utils\/IntArrayUnsafeS.html#toString():String", "kind" : "def"}, {"label" : "fill", "tail" : "(value: Byte, length: Int): Unit", "member" : "utils.IntArrayUnsafeS.fill", "link" : "utils\/IntArrayUnsafeS.html#fill(value:Byte,length:Int):Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(from: Int, until: Int): Array[Int]", "member" : "utils.IntArrayUnsafeS.toArray", "link" : "utils\/IntArrayUnsafeS.html#toArray(from:Int,until:Int):Array[Int]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Int]", "member" : "utils.IntArrayUnsafeS.toArray", "link" : "utils\/IntArrayUnsafeS.html#toArray:Array[Int]", "kind" : "def"}, {"label" : "binSearch", "tail" : "(key: Int, fromIndex: Int, untilIndex: Int): Int", "member" : "utils.IntArrayUnsafeS.binSearch", "link" : "utils\/IntArrayUnsafeS.html#binSearch(key:Int,fromIndex:Int,untilIndex:Int):Int", "kind" : "def"}, {"label" : "removeByIndex", "tail" : "(index: Int): Unit", "member" : "utils.IntArrayUnsafeS.removeByIndex", "link" : "utils\/IntArrayUnsafeS.html#removeByIndex(index:Int):Unit", "kind" : "def"}, {"label" : "shiftRightAll", "tail" : "(by: Int): Unit", "member" : "utils.IntArrayUnsafeS.shiftRightAll", "link" : "utils\/IntArrayUnsafeS.html#shiftRightAll(by:Int):Unit", "kind" : "def"}, {"label" : "incBy", "tail" : "(index: Int, x: Int): Int", "member" : "utils.IntArrayUnsafeS.incBy", "link" : "utils\/IntArrayUnsafeS.html#incBy(index:Int,x:Int):Int", "kind" : "def"}, {"label" : "dec", "tail" : "(index: Int): Int", "member" : "utils.IntArrayUnsafeS.dec", "link" : "utils\/IntArrayUnsafeS.html#dec(index:Int):Int", "kind" : "def"}, {"label" : "inc", "tail" : "(index: Int): Int", "member" : "utils.IntArrayUnsafeS.inc", "link" : "utils\/IntArrayUnsafeS.html#inc(index:Int):Int", "kind" : "def"}, {"label" : "update", "tail" : "(index: Long, value: Int): Unit", "member" : "utils.IntArrayUnsafeS.update", "link" : "utils\/IntArrayUnsafeS.html#update(index:Long,value:Int):Unit", "kind" : "def"}, {"label" : "updateMid", "tail" : "(index: Int, value: Int): Unit", "member" : "utils.IntArrayUnsafeS.updateMid", "link" : "utils\/IntArrayUnsafeS.html#updateMid(index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Int): Unit", "member" : "utils.IntArrayUnsafeS.update", "link" : "utils\/IntArrayUnsafeS.html#update(index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "popLast", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.popLast", "link" : "utils\/IntArrayUnsafeS.html#popLast:Int", "kind" : "def"}, {"label" : "last", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.last", "link" : "utils\/IntArrayUnsafeS.html#last:Int", "kind" : "def"}, {"label" : "second", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.second", "link" : "utils\/IntArrayUnsafeS.html#second:Int", "kind" : "def"}, {"label" : "first", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.first", "link" : "utils\/IntArrayUnsafeS.html#first:Int", "kind" : "def"}, {"label" : "geta", "tail" : "(index: Long): Int", "member" : "utils.IntArrayUnsafeS.geta", "link" : "utils\/IntArrayUnsafeS.html#geta(index:Long):Int", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Int", "member" : "utils.IntArrayUnsafeS.get", "link" : "utils\/IntArrayUnsafeS.html#get(index:Long):Int", "kind" : "def"}, {"label" : "getMid", "tail" : "(index: Int): Int", "member" : "utils.IntArrayUnsafeS.getMid", "link" : "utils\/IntArrayUnsafeS.html#getMid(index:Int):Int", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Int", "member" : "utils.IntArrayUnsafeS.get", "link" : "utils\/IntArrayUnsafeS.html#get(index:Int):Int", "kind" : "def"}, {"label" : "compareWithZeroAndUpdate", "tail" : "(index: Int, newValue: Int): Boolean", "member" : "utils.IntArrayUnsafeS.compareWithZeroAndUpdate", "link" : "utils\/IntArrayUnsafeS.html#compareWithZeroAndUpdate(index:Int,newValue:Int):Boolean", "kind" : "def"}, {"label" : "compareAndUpdate", "tail" : "(index: Int, expectedValue: Int, newValue: Int): Boolean", "member" : "utils.IntArrayUnsafeS.compareAndUpdate", "link" : "utils\/IntArrayUnsafeS.html#compareAndUpdate(index:Int,expectedValue:Int,newValue:Int):Boolean", "kind" : "def"}, {"label" : "setFromUnsafeMemory", "tail" : "(sourceAddr: Long, sourceSize: Int): Unit", "member" : "utils.IntArrayUnsafeS.setFromUnsafeMemory", "link" : "utils\/IntArrayUnsafeS.html#setFromUnsafeMemory(sourceAddr:Long,sourceSize:Int):Unit", "kind" : "def"}, {"label" : "setFromUnsafeIntArray", "tail" : "(source: IntArrayUnsafeS, updateSize: Boolean): Unit", "member" : "utils.IntArrayUnsafeS.setFromUnsafeIntArray", "link" : "utils\/IntArrayUnsafeS.html#setFromUnsafeIntArray(source:utils.IntArrayUnsafeS,updateSize:Boolean):Unit", "kind" : "def"}, {"label" : "setFromIntArray", "tail" : "(values: Array[Int]): Unit", "member" : "utils.IntArrayUnsafeS.setFromIntArray", "link" : "utils\/IntArrayUnsafeS.html#setFromIntArray(values:Array[Int]):Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "utils.IntArrayUnsafeS.equals", "link" : "utils\/IntArrayUnsafeS.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.hashCode", "link" : "utils\/IntArrayUnsafeS.html#hashCode():Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.size", "link" : "utils\/IntArrayUnsafeS.html#size():Int", "kind" : "def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "utils.IntArrayUnsafeS.addToGarbage", "link" : "utils\/IntArrayUnsafeS.html#addToGarbage():Unit", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.IntArrayUnsafeS.free", "link" : "utils\/IntArrayUnsafeS.html#free():Unit", "kind" : "def"}, {"member" : "utils.IntArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.IntArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.IntArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"label" : "setAddr", "tail" : "(newAddr: Long): Unit", "member" : "utils.IntArrayUnsafeS.setAddr", "link" : "utils\/IntArrayUnsafeS.html#setAddr(newAddr:Long):Unit", "kind" : "def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.IntArrayUnsafeS.getAddr", "link" : "utils\/IntArrayUnsafeS.html#getAddr:Long", "kind" : "def"}, {"label" : "allocated", "tail" : "(): Int", "member" : "utils.IntArrayUnsafeS.allocated", "link" : "utils\/IntArrayUnsafeS.html#allocated:Int", "kind" : "def"}, {"member" : "utils.IntArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"label" : "sizev", "tail" : ": Int", "member" : "utils.IntArrayUnsafeS.sizev", "link" : "utils\/IntArrayUnsafeS.html#sizev:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/IntArrayUnsafeS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/IntArrayUnsafeS.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/IntArrayUnsafeS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/IntArrayUnsafeS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/IntArrayUnsafeS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/IntArrayUnsafeS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/IntArrayUnsafeS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayUnsafeS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayUnsafeS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayUnsafeS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/IntArrayUnsafeS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/IntArrayUnsafeS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/IntArrayUnsafeS.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/IntArrayUnsafeS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/IntArrayUnsafeS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/IntArrayUnsafeS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "removeItemAll", "tail" : "(unsafe: Unsafe, addr: Long, item: Int, initialLength: Int): Int", "member" : "utils.IntArrayUnsafeS.removeItemAll", "link" : "utils\/IntArrayUnsafeS$.html#removeItemAll(unsafe:sun.misc.Unsafe,addr:Long,item:Int,initialLength:Int):Int", "kind" : "def"}, {"label" : "twinSortIntLongByLongAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, by: (Long) => Float, until: Int, addrTwin: Long): Unit", "member" : "utils.IntArrayUnsafeS.twinSortIntLongByLongAtAddr", "link" : "utils\/IntArrayUnsafeS$.html#twinSortIntLongByLongAtAddr(unsafe:sun.misc.Unsafe,addr:Long,by:Long=>Float,until:Int,addrTwin:Long):Unit", "kind" : "def"}, {"label" : "twinSortIntLongByIntAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, by: (Int) => Double, until: Int, addrTwin: Long): Unit", "member" : "utils.IntArrayUnsafeS.twinSortIntLongByIntAtAddr", "link" : "utils\/IntArrayUnsafeS$.html#twinSortIntLongByIntAtAddr(unsafe:sun.misc.Unsafe,addr:Long,by:Int=>Double,until:Int,addrTwin:Long):Unit", "kind" : "def"}, {"label" : "sortByInplace", "tail" : "(unsafe: Unsafe, addr: Long, by: (Int) => Float, until: Int): Unit", "member" : "utils.IntArrayUnsafeS.sortByInplace", "link" : "utils\/IntArrayUnsafeS$.html#sortByInplace(unsafe:sun.misc.Unsafe,addr:Long,by:Int=>Float,until:Int):Unit", "kind" : "def"}, {"label" : "updateAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, index: Int, value: Int): Unit", "member" : "utils.IntArrayUnsafeS.updateAtAddr", "link" : "utils\/IntArrayUnsafeS$.html#updateAtAddr(unsafe:sun.misc.Unsafe,addr:Long,index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "getAtAddr", "tail" : "(unsafe: Unsafe, addr: Long, index: Int): Int", "member" : "utils.IntArrayUnsafeS.getAtAddr", "link" : "utils\/IntArrayUnsafeS$.html#getAtAddr(unsafe:sun.misc.Unsafe,addr:Long,index:Int):Int", "kind" : "def"}, {"label" : "hashForDuplRemGlob", "tail" : ": IntOpenHashSet", "member" : "utils.IntArrayUnsafeS.hashForDuplRemGlob", "link" : "utils\/IntArrayUnsafeS$.html#hashForDuplRemGlob:it.unimi.dsi.fastutil.ints.IntOpenHashSet", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/IntArrayUnsafeS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/IntArrayUnsafeS$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/IntArrayUnsafeS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/IntArrayUnsafeS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/IntArrayUnsafeS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/IntArrayUnsafeS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/IntArrayUnsafeS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayUnsafeS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayUnsafeS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntArrayUnsafeS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/IntArrayUnsafeS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/IntArrayUnsafeS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/IntArrayUnsafeS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/IntArrayUnsafeS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/IntArrayUnsafeS$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/IntArrayUnsafeS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/IntArrayUnsafeS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/IntArrayUnsafeS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/IntArrayUnsafeS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/IntArrayUnsafeS.html", "kind" : "class"}, {"name" : "utils.IntOrLongArrayUnsafe", "trait" : "utils\/IntOrLongArrayUnsafe.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/IntOrLongArrayUnsafe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/IntOrLongArrayUnsafe.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/IntOrLongArrayUnsafe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/IntOrLongArrayUnsafe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/IntOrLongArrayUnsafe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/IntOrLongArrayUnsafe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/IntOrLongArrayUnsafe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntOrLongArrayUnsafe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntOrLongArrayUnsafe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/IntOrLongArrayUnsafe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/IntOrLongArrayUnsafe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/IntOrLongArrayUnsafe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/IntOrLongArrayUnsafe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/IntOrLongArrayUnsafe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/IntOrLongArrayUnsafe.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/IntOrLongArrayUnsafe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/IntOrLongArrayUnsafe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/IntOrLongArrayUnsafe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/IntOrLongArrayUnsafe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "utils.IntOrLongArrayUnsafe.addToGarbage", "link" : "utils\/IntOrLongArrayUnsafe.html#addToGarbage():Unit", "kind" : "abstract def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.IntOrLongArrayUnsafe.free", "link" : "utils\/IntOrLongArrayUnsafe.html#free():Unit", "kind" : "abstract def"}, {"label" : "cloneToNew", "tail" : "(padding: Int, keep: Int, cutOff: Boolean): IntOrLongArrayUnsafe[T]", "member" : "utils.IntOrLongArrayUnsafe.cloneToNew", "link" : "utils\/IntOrLongArrayUnsafe.html#cloneToNew(padding:Int,keep:Int,cutOff:Boolean):utils.IntOrLongArrayUnsafe[T]", "kind" : "abstract def"}, {"label" : "removeByIndex", "tail" : "(index: Int): Unit", "member" : "utils.IntOrLongArrayUnsafe.removeByIndex", "link" : "utils\/IntOrLongArrayUnsafe.html#removeByIndex(index:Int):Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(index: Int, value: T): Unit", "member" : "utils.IntOrLongArrayUnsafe.update", "link" : "utils\/IntOrLongArrayUnsafe.html#update(index:Int,value:T):Unit", "kind" : "abstract def"}, {"label" : "popLast", "tail" : "(): T", "member" : "utils.IntOrLongArrayUnsafe.popLast", "link" : "utils\/IntOrLongArrayUnsafe.html#popLast:T", "kind" : "abstract def"}, {"label" : "get", "tail" : "(index: Long): T", "member" : "utils.IntOrLongArrayUnsafe.get", "link" : "utils\/IntOrLongArrayUnsafe.html#get(index:Long):T", "kind" : "abstract def"}, {"label" : "get", "tail" : "(index: Int): T", "member" : "utils.IntOrLongArrayUnsafe.get", "link" : "utils\/IntOrLongArrayUnsafe.html#get(index:Int):T", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "utils.IntOrLongArrayUnsafe.toArray", "link" : "utils\/IntOrLongArrayUnsafe.html#toArray:Array[T]", "kind" : "abstract def"}, {"label" : "setAddr", "tail" : "(newAddr: Long): Unit", "member" : "utils.IntOrLongArrayUnsafe.setAddr", "link" : "utils\/IntOrLongArrayUnsafe.html#setAddr(newAddr:Long):Unit", "kind" : "abstract def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.IntOrLongArrayUnsafe.getAddr", "link" : "utils\/IntOrLongArrayUnsafe.html#getAddr:Long", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.IntOrLongArrayUnsafe.size", "link" : "utils\/IntOrLongArrayUnsafe.html#size():Int", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "utils.LongArrayUnsafeS", "shortDescription" : "This is not a general-purpose unsafe array class - designed for use in project diff-SAT only!", "members_class" : [{"label" : "establishDuplicateFreePrefixBy", "tail" : "(by: (Long) => Long, to: Int): Int", "member" : "utils.LongArrayUnsafeS.establishDuplicateFreePrefixBy", "link" : "utils\/LongArrayUnsafeS.html#establishDuplicateFreePrefixBy(by:Long=>Long,to:Int):Int", "kind" : "def"}, {"label" : "removeDuplicates", "tail" : "(to: Int): Unit", "member" : "utils.LongArrayUnsafeS.removeDuplicates", "link" : "utils\/LongArrayUnsafeS.html#removeDuplicates(to:Int):Unit", "kind" : "def"}, {"label" : "floydRivest", "tail" : "(leftR: Int, rightR: Int, k: Int, by: (Long) => Double): Int", "member" : "utils.LongArrayUnsafeS.floydRivest", "link" : "utils\/LongArrayUnsafeS.html#floydRivest(leftR:Int,rightR:Int,k:Int,by:Long=>Double):Int", "kind" : "def"}, {"label" : "swap", "tail" : "(i: Int, j: Int): Unit", "member" : "utils.LongArrayUnsafeS.swap", "link" : "utils\/LongArrayUnsafeS.html#swap(i:Int,j:Int):Unit", "kind" : "def"}, {"label" : "sortByInplace", "tail" : "(by: (Long) => Double, until: Int): Unit", "member" : "utils.LongArrayUnsafeS.sortByInplace", "link" : "utils\/LongArrayUnsafeS.html#sortByInplace(by:Long=>Double,until:Int):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(newSize: Int, retain: Int): Unit", "member" : "utils.LongArrayUnsafeS.resize", "link" : "utils\/LongArrayUnsafeS.html#resize(newSize:Int,retain:Int):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(newSize: Int): Unit", "member" : "utils.LongArrayUnsafeS.resize", "link" : "utils\/LongArrayUnsafeS.html#resize(newSize:Int):Unit", "kind" : "def"}, {"label" : "cloneToNew", "tail" : "(padding: Int, keep: Int, cutOff: Boolean): LongArrayUnsafeS", "member" : "utils.LongArrayUnsafeS.cloneToNew", "link" : "utils\/LongArrayUnsafeS.html#cloneToNew(padding:Int,keep:Int,cutOff:Boolean):utils.LongArrayUnsafeS", "kind" : "def"}, {"label" : "clone", "tail" : "(padding: Int): LongArrayUnsafeS", "member" : "utils.LongArrayUnsafeS.clone", "link" : "utils\/LongArrayUnsafeS.html#clone(padding:Int):utils.LongArrayUnsafeS", "kind" : "def"}, {"label" : "getAllocated", "tail" : "(): Int", "member" : "utils.LongArrayUnsafeS.getAllocated", "link" : "utils\/LongArrayUnsafeS.html#getAllocated:Int", "kind" : "def"}, {"label" : "setAddr", "tail" : "(newAddr: Long): Unit", "member" : "utils.LongArrayUnsafeS.setAddr", "link" : "utils\/LongArrayUnsafeS.html#setAddr(newAddr:Long):Unit", "kind" : "def"}, {"label" : "getAddr", "tail" : "(): Long", "member" : "utils.LongArrayUnsafeS.getAddr", "link" : "utils\/LongArrayUnsafeS.html#getAddr:Long", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "utils.LongArrayUnsafeS.toString", "link" : "utils\/LongArrayUnsafeS.html#toString():String", "kind" : "def"}, {"label" : "toArray", "tail" : "(l: Int): Array[Long]", "member" : "utils.LongArrayUnsafeS.toArray", "link" : "utils\/LongArrayUnsafeS.html#toArray(l:Int):Array[Long]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Long]", "member" : "utils.LongArrayUnsafeS.toArray", "link" : "utils\/LongArrayUnsafeS.html#toArray():Array[Long]", "kind" : "def"}, {"label" : "filter", "tail" : "(keepBy: (Long) => Boolean): Unit", "member" : "utils.LongArrayUnsafeS.filter", "link" : "utils\/LongArrayUnsafeS.html#filter(keepBy:Long=>Boolean):Unit", "kind" : "def"}, {"label" : "removeByIndex", "tail" : "(index: Int): Unit", "member" : "utils.LongArrayUnsafeS.removeByIndex", "link" : "utils\/LongArrayUnsafeS.html#removeByIndex(index:Int):Unit", "kind" : "def"}, {"label" : "compareAndSwap", "tail" : "(index: Int, valueOld: Long, valueNew: Long): Unit", "member" : "utils.LongArrayUnsafeS.compareAndSwap", "link" : "utils\/LongArrayUnsafeS.html#compareAndSwap(index:Int,valueOld:Long,valueNew:Long):Unit", "kind" : "def"}, {"label" : "incBy", "tail" : "(index: Int, x: Long): Unit", "member" : "utils.LongArrayUnsafeS.incBy", "link" : "utils\/LongArrayUnsafeS.html#incBy(index:Int,x:Long):Unit", "kind" : "def"}, {"label" : "dec", "tail" : "(index: Int): Long", "member" : "utils.LongArrayUnsafeS.dec", "link" : "utils\/LongArrayUnsafeS.html#dec(index:Int):Long", "kind" : "def"}, {"label" : "inc", "tail" : "(index: Int): Long", "member" : "utils.LongArrayUnsafeS.inc", "link" : "utils\/LongArrayUnsafeS.html#inc(index:Int):Long", "kind" : "def"}, {"label" : "update", "tail" : "(index: Long, value: Long): Unit", "member" : "utils.LongArrayUnsafeS.update", "link" : "utils\/LongArrayUnsafeS.html#update(index:Long,value:Long):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Int): Unit", "member" : "utils.LongArrayUnsafeS.update", "link" : "utils\/LongArrayUnsafeS.html#update(index:Int,value:Int):Unit", "kind" : "def"}, {"label" : "updateMid", "tail" : "(index: Int, value: Long): Unit", "member" : "utils.LongArrayUnsafeS.updateMid", "link" : "utils\/LongArrayUnsafeS.html#updateMid(index:Int,value:Long):Unit", "kind" : "def"}, {"label" : "updateOrdered", "tail" : "(index: Int, value: Long): Unit", "member" : "utils.LongArrayUnsafeS.updateOrdered", "link" : "utils\/LongArrayUnsafeS.html#updateOrdered(index:Int,value:Long):Unit", "kind" : "def"}, {"label" : "updateVolatile", "tail" : "(index: Int, value: Long): Unit", "member" : "utils.LongArrayUnsafeS.updateVolatile", "link" : "utils\/LongArrayUnsafeS.html#updateVolatile(index:Int,value:Long):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, value: Long): Unit", "member" : "utils.LongArrayUnsafeS.update", "link" : "utils\/LongArrayUnsafeS.html#update(index:Int,value:Long):Unit", "kind" : "def"}, {"label" : "popLast", "tail" : "(): Long", "member" : "utils.LongArrayUnsafeS.popLast", "link" : "utils\/LongArrayUnsafeS.html#popLast:Long", "kind" : "def"}, {"label" : "last", "tail" : "(): Long", "member" : "utils.LongArrayUnsafeS.last", "link" : "utils\/LongArrayUnsafeS.html#last:Long", "kind" : "def"}, {"label" : "first", "tail" : "(): Long", "member" : "utils.LongArrayUnsafeS.first", "link" : "utils\/LongArrayUnsafeS.html#first:Long", "kind" : "def"}, {"label" : "getMid", "tail" : "(index: Long): Long", "member" : "utils.LongArrayUnsafeS.getMid", "link" : "utils\/LongArrayUnsafeS.html#getMid(index:Long):Long", "kind" : "def"}, {"label" : "get", "tail" : "(index: Long): Long", "member" : "utils.LongArrayUnsafeS.get", "link" : "utils\/LongArrayUnsafeS.html#get(index:Long):Long", "kind" : "def"}, {"label" : "copyLongTo", "tail" : "(fromIndex: Int, toIndex: Int): Unit", "member" : "utils.LongArrayUnsafeS.copyLongTo", "link" : "utils\/LongArrayUnsafeS.html#copyLongTo(fromIndex:Int,toIndex:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int): Long", "member" : "utils.LongArrayUnsafeS.get", "link" : "utils\/LongArrayUnsafeS.html#get(index:Int):Long", "kind" : "def"}, {"label" : "compareWithZeroAndUpdate", "tail" : "(index: Int, newValue: Long): Boolean", "member" : "utils.LongArrayUnsafeS.compareWithZeroAndUpdate", "link" : "utils\/LongArrayUnsafeS.html#compareWithZeroAndUpdate(index:Int,newValue:Long):Boolean", "kind" : "def"}, {"label" : "compareAndUpdate", "tail" : "(index: Int, expectedValue: Long, newValue: Long): Boolean", "member" : "utils.LongArrayUnsafeS.compareAndUpdate", "link" : "utils\/LongArrayUnsafeS.html#compareAndUpdate(index:Int,expectedValue:Long,newValue:Long):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.LongArrayUnsafeS.size", "link" : "utils\/LongArrayUnsafeS.html#size():Int", "kind" : "def"}, {"label" : "addToGarbage", "tail" : "(): Unit", "member" : "utils.LongArrayUnsafeS.addToGarbage", "link" : "utils\/LongArrayUnsafeS.html#addToGarbage():Unit", "kind" : "def"}, {"label" : "free", "tail" : "(): Unit", "member" : "utils.LongArrayUnsafeS.free", "link" : "utils\/LongArrayUnsafeS.html#free():Unit", "kind" : "def"}, {"member" : "utils.LongArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.LongArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"member" : "utils.LongArrayUnsafeS#<init>", "error" : "unsupported entity"}, {"label" : "sizev", "tail" : ": Int", "member" : "utils.LongArrayUnsafeS.sizev", "link" : "utils\/LongArrayUnsafeS.html#sizev:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/LongArrayUnsafeS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/LongArrayUnsafeS.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/LongArrayUnsafeS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/LongArrayUnsafeS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/LongArrayUnsafeS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/LongArrayUnsafeS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/LongArrayUnsafeS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/LongArrayUnsafeS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/LongArrayUnsafeS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/LongArrayUnsafeS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/LongArrayUnsafeS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/LongArrayUnsafeS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/LongArrayUnsafeS.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/LongArrayUnsafeS.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/LongArrayUnsafeS.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/LongArrayUnsafeS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/LongArrayUnsafeS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/LongArrayUnsafeS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/LongArrayUnsafeS.html", "kind" : "class"}, {"name" : "utils.RandomLongSet", "shortDescription" : "For positive (Scala-)Longs only (in case of diff-SAT: nogood reducibles).", "members_class" : [{"label" : "pollRandomItem", "tail" : "(rnd: Random): Long", "member" : "utils.RandomLongSet.pollRandomItem", "link" : "utils\/RandomLongSet.html#pollRandomItem(rnd:java.util.Random):Long", "kind" : "def"}, {"label" : "getRandomItem", "tail" : "(rnd: Random): Long", "member" : "utils.RandomLongSet.getRandomItem", "link" : "utils\/RandomLongSet.html#getRandomItem(rnd:java.util.Random):Long", "kind" : "def"}, {"label" : "get", "tail" : "(id: Int): Long", "member" : "utils.RandomLongSet.get", "link" : "utils\/RandomLongSet.html#get(id:Int):Long", "kind" : "def"}, {"label" : "remove", "tail" : "(item: Long): Unit", "member" : "utils.RandomLongSet.remove", "link" : "utils\/RandomLongSet.html#remove(item:Long):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "utils.RandomLongSet.size", "link" : "utils\/RandomLongSet.html#size:Int", "kind" : "def"}, {"label" : "removeAt", "tail" : "(id: Int): Unit", "member" : "utils.RandomLongSet.removeAt", "link" : "utils\/RandomLongSet.html#removeAt(id:Int):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(item: Long): Unit", "member" : "utils.RandomLongSet.add", "link" : "utils\/RandomLongSet.html#add(item:Long):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(item: Long): Boolean", "member" : "utils.RandomLongSet.contains", "link" : "utils\/RandomLongSet.html#contains(item:Long):Boolean", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "utils.RandomLongSet.clear", "link" : "utils\/RandomLongSet.html#clear():Unit", "kind" : "def"}, {"label" : "index", "tail" : ": Long2IntOpenHashMap", "member" : "utils.RandomLongSet.index", "link" : "utils\/RandomLongSet.html#index:it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap", "kind" : "val"}, {"label" : "data", "tail" : ": LongArrayList", "member" : "utils.RandomLongSet.data", "link" : "utils\/RandomLongSet.html#data:it.unimi.dsi.fastutil.longs.LongArrayList", "kind" : "val"}, {"member" : "utils.RandomLongSet#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/RandomLongSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/RandomLongSet.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/RandomLongSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/RandomLongSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/RandomLongSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/RandomLongSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/RandomLongSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/RandomLongSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/RandomLongSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/RandomLongSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/RandomLongSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/RandomLongSet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/RandomLongSet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/RandomLongSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/RandomLongSet.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/RandomLongSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/RandomLongSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/RandomLongSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/RandomLongSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "utils\/RandomLongSet.html", "kind" : "class"}, {"name" : "utils.Stats", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "utils.Stats.toString", "link" : "utils\/Stats.html#toString():String", "kind" : "def"}, {"label" : "countEntriesWithKey", "tail" : "(key: String, maxCount: Int): Int", "member" : "utils.Stats.countEntriesWithKey", "link" : "utils\/Stats.html#countEntriesWithKey(key:String,maxCount:Int):Int", "kind" : "def"}, {"label" : "getFirstOpt", "tail" : "(key: String): Option[StatsEntry]", "member" : "utils.Stats.getFirstOpt", "link" : "utils\/Stats.html#getFirstOpt(key:String):Option[utils.StatsEntry]", "kind" : "def"}, {"label" : "writeEntry", "tail" : "(key: String, value: Any, solverThreadNo: Int, replace: Boolean): Unit", "member" : "utils.Stats.writeEntry", "link" : "utils\/Stats.html#writeEntry(key:String,value:Any,solverThreadNo:Int,replace:Boolean):Unit", "kind" : "def"}, {"label" : "writeToFile", "tail" : "(): Unit", "member" : "utils.Stats.writeToFile", "link" : "utils\/Stats.html#writeToFile():Unit", "kind" : "def"}, {"label" : "initializeStatsFileStream", "tail" : "(): Unit", "member" : "utils.Stats.initializeStatsFileStream", "link" : "utils\/Stats.html#initializeStatsFileStream():Unit", "kind" : "def"}, {"label" : "initializeStatsFile", "tail" : "(): Unit", "member" : "utils.Stats.initializeStatsFile", "link" : "utils\/Stats.html#initializeStatsFile():Unit", "kind" : "def"}, {"member" : "utils.Stats#<init>", "error" : "unsupported entity"}, {"label" : "lastFlush", "tail" : ": Long", "member" : "utils.Stats.lastFlush", "link" : "utils\/Stats.html#lastFlush:Long", "kind" : "var"}, {"label" : "statsFileStream", "tail" : ": OutputStream", "member" : "utils.Stats.statsFileStream", "link" : "utils\/Stats.html#statsFileStream:java.io.OutputStream", "kind" : "var"}, {"label" : "outFile", "tail" : ": File", "member" : "utils.Stats.outFile", "link" : "utils\/Stats.html#outFile:java.io.File", "kind" : "var"}, {"label" : "entries", "tail" : ": List[StatsEntry]", "member" : "utils.Stats.entries", "link" : "utils\/Stats.html#entries:java.util.List[utils.StatsEntry]", "kind" : "val"}, {"label" : "runStartTimeMs", "tail" : ": Long", "member" : "utils.Stats.runStartTimeMs", "link" : "utils\/Stats.html#runStartTimeMs:Long", "kind" : "val"}, {"label" : "runID", "tail" : ": String", "member" : "utils.Stats.runID", "link" : "utils\/Stats.html#runID:String", "kind" : "val"}, {"label" : "problemFile", "tail" : ": String", "member" : "utils.Stats.problemFile", "link" : "utils\/Stats.html#problemFile:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "utils\/Stats.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/Stats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/Stats.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/Stats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/Stats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/Stats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/Stats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/Stats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Stats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Stats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Stats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/Stats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/Stats.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/Stats.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/Stats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/Stats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/Stats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "utils\/Stats.html", "kind" : "case class"}, {"name" : "utils.StatsEntry", "shortDescription" : "", "members_case class" : [{"member" : "utils.StatsEntry#<init>", "error" : "unsupported entity"}, {"label" : "runIDTransient", "tail" : ": String", "member" : "utils.StatsEntry.runIDTransient", "link" : "utils\/StatsEntry.html#runIDTransient:String", "kind" : "val"}, {"label" : "valueStr", "tail" : ": String", "member" : "utils.StatsEntry.valueStr", "link" : "utils\/StatsEntry.html#valueStr:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "utils.StatsEntry.key", "link" : "utils\/StatsEntry.html#key:String", "kind" : "val"}, {"label" : "threadNo", "tail" : ": Int", "member" : "utils.StatsEntry.threadNo", "link" : "utils\/StatsEntry.html#threadNo:Int", "kind" : "val"}, {"label" : "messageTimeStamp", "tail" : ": Long", "member" : "utils.StatsEntry.messageTimeStamp", "link" : "utils\/StatsEntry.html#messageTimeStamp:Long", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "utils\/StatsEntry.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/StatsEntry.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/StatsEntry.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/StatsEntry.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/StatsEntry.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/StatsEntry.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/StatsEntry.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/StatsEntry.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/StatsEntry.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/StatsEntry.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/StatsEntry.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/StatsEntry.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/StatsEntry.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/StatsEntry.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/StatsEntry.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/StatsEntry.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/StatsEntry.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "utils\/StatsEntry.html", "kind" : "case class"}, {"name" : "utils.Tarjan", "shortDescription" : " Not a general-purpose Tarjan implementation.", "object" : "utils\/Tarjan$.html", "members_object" : [{"label" : "trajanRec", "tail" : "(g: Int2ObjectOpenHashMap[List[Int]]): ArrayBuffer[ArrayBuffer[Int]]", "member" : "utils.Tarjan.trajanRec", "link" : "utils\/Tarjan$.html#trajanRec(g:it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap[List[Int]]):scala.collection.mutable.ArrayBuffer[scala.collection.mutable.ArrayBuffer[Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/Tarjan$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/Tarjan$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/Tarjan$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/Tarjan$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/Tarjan$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/Tarjan$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/Tarjan$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Tarjan$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Tarjan$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Tarjan$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/Tarjan$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/Tarjan$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/Tarjan$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/Tarjan$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/Tarjan$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/Tarjan$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/Tarjan$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/Tarjan$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/Tarjan$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "utils.Various", "shortDescription" : "", "object" : "utils\/Various$.html", "members_object" : [{"label" : "prettyPrint", "tail" : "(a: Any, indentSize: Int, maxElementWidth: Int, depth: Int, omit: List[String]): String", "member" : "utils.Various.prettyPrint", "link" : "utils\/Various$.html#prettyPrint(a:Any,indentSize:Int,maxElementWidth:Int,depth:Int,omit:List[String]):String", "kind" : "def"}, {"label" : "fileNameFromFullPath", "tail" : "(fileStr: String): String", "member" : "utils.Various.fileNameFromFullPath", "link" : "utils\/Various$.html#fileNameFromFullPath(fileStr:String):String", "kind" : "def"}, {"label" : "binLog", "tail" : "(x: Int): Int", "member" : "utils.Various.binLog", "link" : "utils\/Various$.html#binLog(x:Int):Int", "kind" : "def"}, {"label" : "fastModByPow2", "tail" : "(dividend: Int, divisor: Int): Int", "member" : "utils.Various.fastModByPow2", "link" : "utils\/Various$.html#fastModByPow2(dividend:Int,divisor:Int):Int", "kind" : "def"}, {"label" : "next2Pow", "tail" : "(x: Int): Int", "member" : "utils.Various.next2Pow", "link" : "utils\/Various$.html#next2Pow(x:Int):Int", "kind" : "def"}, {"label" : "timerToElapsedMs", "tail" : "(startNano: Long): Long", "member" : "utils.Various.timerToElapsedMs", "link" : "utils\/Various$.html#timerToElapsedMs(startNano:Long):Long", "kind" : "def"}, {"label" : "printStatusLine", "tail" : "(pStrR: String, cutOffAt: Int): Unit", "member" : "utils.Various.printStatusLine", "link" : "utils\/Various$.html#printStatusLine(pStrR:String,cutOffAt:Int):Unit", "kind" : "def"}, {"label" : "powInt", "tail" : "(a: Double, b: Int): Double", "member" : "utils.Various.powInt", "link" : "utils\/Various$.html#powInt(a:Double,b:Int):Double", "kind" : "def"}, {"label" : "powFloat", "tail" : "(a: Float, b: Float): Float", "member" : "utils.Various.powFloat", "link" : "utils\/Various$.html#powFloat(a:Float,b:Float):Float", "kind" : "def"}, {"label" : "round", "tail" : "(n: Double, digits: Int): Double", "member" : "utils.Various.round", "link" : "utils\/Various$.html#round(n:Double,digits:Int):Double", "kind" : "def"}, {"label" : "shuffleArrayBlocked", "tail" : "(arr: Seq[A], rg: RandomGenSuperclass): Unit", "member" : "utils.Various.shuffleArrayBlocked", "link" : "utils\/Various$.html#shuffleArrayBlocked[A](arr:scala.collection.mutable.Seq[A],rg:sharedDefs.RandomGenSuperclass):Unit", "kind" : "def"}, {"label" : "shuffleLongArrayUnsafe", "tail" : "(array: LongArrayUnsafeS, rg: RandomGenSuperclass, from: Long, to: Long): Unit", "member" : "utils.Various.shuffleLongArrayUnsafe", "link" : "utils\/Various$.html#shuffleLongArrayUnsafe(array:utils.LongArrayUnsafeS,rg:sharedDefs.RandomGenSuperclass,from:Long,to:Long):Unit", "kind" : "def"}, {"label" : "shuffleArrayUnsafe", "tail" : "(array: IntArrayUnsafeS, rg: RandomGenSuperclass, from: Long, to: Long): Unit", "member" : "utils.Various.shuffleArrayUnsafe", "link" : "utils\/Various$.html#shuffleArrayUnsafe(array:utils.IntArrayUnsafeS,rg:sharedDefs.RandomGenSuperclass,from:Long,to:Long):Unit", "kind" : "def"}, {"label" : "shuffleArray", "tail" : "(array: Seq[A], rg: RandomGenSuperclass, to: Int): Unit", "member" : "utils.Various.shuffleArray", "link" : "utils\/Various$.html#shuffleArray[A](array:scala.collection.mutable.Seq[A],rg:sharedDefs.RandomGenSuperclass,to:Int):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "utils\/Various$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "utils\/Various$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "utils\/Various$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "utils\/Various$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "utils\/Various$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "utils\/Various$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "utils\/Various$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Various$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Various$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "utils\/Various$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "utils\/Various$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "utils\/Various$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "utils\/Various$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "utils\/Various$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "utils\/Various$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "utils\/Various$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "utils\/Various$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "utils\/Various$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "utils\/Various$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "sharedDefs" : [{"name" : "sharedDefs.AlternativesForThreads", "shortDescription" : "", "members_case class" : [{"label" : "getFirstOrDefaultValue", "tail" : "(): A", "member" : "sharedDefs.AlternativesForThreads.getFirstOrDefaultValue", "link" : "sharedDefs\/package$$AlternativesForThreads.html#getFirstOrDefaultValue:A", "kind" : "def"}, {"label" : "getThreadOrDefaultValue", "tail" : "(threadNo: Int): A", "member" : "sharedDefs.AlternativesForThreads.getThreadOrDefaultValue", "link" : "sharedDefs\/package$$AlternativesForThreads.html#getThreadOrDefaultValue(threadNo:Int):A", "kind" : "def"}, {"label" : "getAllAlternativeValues", "tail" : "(): Seq[A]", "member" : "sharedDefs.AlternativesForThreads.getAllAlternativeValues", "link" : "sharedDefs\/package$$AlternativesForThreads.html#getAllAlternativeValues:Seq[A]", "kind" : "def"}, {"member" : "sharedDefs.AlternativesForThreads#<init>", "error" : "unsupported entity"}, {"label" : "alternatives", "tail" : ": Map[Int, A]", "member" : "sharedDefs.AlternativesForThreads.alternatives", "link" : "sharedDefs\/package$$AlternativesForThreads.html#alternatives:Map[Int,A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "sharedDefs\/package$$AlternativesForThreads.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "sharedDefs\/package$$AlternativesForThreads.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "sharedDefs\/package$$AlternativesForThreads.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "sharedDefs\/package$$AlternativesForThreads.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "sharedDefs\/package$$AlternativesForThreads.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "sharedDefs\/package$$AlternativesForThreads.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "sharedDefs\/package$$AlternativesForThreads.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "sharedDefs\/package$$AlternativesForThreads.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "sharedDefs\/package$$AlternativesForThreads.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "sharedDefs\/package$$AlternativesForThreads.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "sharedDefs\/package$$AlternativesForThreads.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "sharedDefs\/package$$AlternativesForThreads.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "sharedDefs\/package$$AlternativesForThreads.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "sharedDefs\/package$$AlternativesForThreads.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "sharedDefs\/package$$AlternativesForThreads.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "sharedDefs\/package$$AlternativesForThreads.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "sharedDefs\/package$$AlternativesForThreads.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "sharedDefs\/package$$AlternativesForThreads.html", "kind" : "case class"}, {"name" : "sharedDefs.Rule", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(symbols: Array[String]): String", "member" : "sharedDefs.Rule.toString", "link" : "sharedDefs\/package$$Rule.html#toString(symbols:Array[String]):String", "kind" : "def"}, {"member" : "sharedDefs.Rule#<init>", "error" : "unsupported entity"}, {"label" : "elisFromDoubleNegationsInBodyPosAtomsElis", "tail" : ": Array[Int]", "member" : "sharedDefs.Rule.elisFromDoubleNegationsInBodyPosAtomsElis", "link" : "sharedDefs\/package$$Rule.html#elisFromDoubleNegationsInBodyPosAtomsElis:Array[Int]", "kind" : "val"}, {"label" : "blit", "tail" : ": Eli", "member" : "sharedDefs.Rule.blit", "link" : "sharedDefs\/package$$Rule.html#blit:sharedDefs.package.Eli", "kind" : "val"}, {"label" : "bodyNegAtomsElis", "tail" : ": Array[Eli]", "member" : "sharedDefs.Rule.bodyNegAtomsElis", "link" : "sharedDefs\/package$$Rule.html#bodyNegAtomsElis:Array[sharedDefs.package.Eli]", "kind" : "val"}, {"label" : "bodyPosAtomsElis", "tail" : ": Array[Eli]", "member" : "sharedDefs.Rule.bodyPosAtomsElis", "link" : "sharedDefs\/package$$Rule.html#bodyPosAtomsElis:Array[sharedDefs.package.Eli]", "kind" : "val"}, {"label" : "headAtomsElis", "tail" : ": Array[Eli]", "member" : "sharedDefs.Rule.headAtomsElis", "link" : "sharedDefs\/package$$Rule.html#headAtomsElis:Array[sharedDefs.package.Eli]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "sharedDefs\/package$$Rule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "sharedDefs\/package$$Rule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "sharedDefs\/package$$Rule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "sharedDefs\/package$$Rule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "sharedDefs\/package$$Rule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "sharedDefs\/package$$Rule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "sharedDefs\/package$$Rule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "sharedDefs\/package$$Rule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "sharedDefs\/package$$Rule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "sharedDefs\/package$$Rule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "sharedDefs\/package$$Rule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "sharedDefs\/package$$Rule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "sharedDefs\/package$$Rule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "sharedDefs\/package$$Rule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "sharedDefs\/package$$Rule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "sharedDefs\/package$$Rule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "sharedDefs\/package$$Rule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "sharedDefs\/package$$Rule.html", "kind" : "case class"}]};